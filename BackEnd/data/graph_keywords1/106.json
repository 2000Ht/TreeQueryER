{"data": {"doi": "10.1109/pacificvis.2015.7156388", "year": "2015", "title": "Ray tracing within a data parallel framework", "conferenceName": "PacificVis", "authors": "Matthew Larsen;Jeremy S. Meredith;Paul A. Navr{\\'{a}}til;Hank Childs", "citationCount": "9", "affiliation": "Larsen, M (Corresponding Author), Univ Oregon, Eugene, OR 97403 USA.\nLarsen, Matthew; Childs, Hank, Univ Oregon, Eugene, OR 97403 USA.\nMeredith, Jeremy S., Oak Ridge Natl Lab, Oak Ridge, TN USA.\nNavratil, Paul A., Univ Texas Austin, Texas Adv Comp Ctr, Austin, TX 78712 USA.\nChilds, Hank, Lawrence Berkeley Natl Lab, Berkeley, CA USA.", "countries": "USA", "abstract": "Current architectural trends on supercomputers have dramatic increases in the number of cores and available computational power per die, but this power is increasingly difficult for programmers to harness effectively. High-level language constructs can simplify programming many-core devices, but this ease comes with a potential loss of processing power, particularly for cross-platform constructs. Recently, scientific visualization packages have embraced language constructs centering around data parallelism, with familiar operators such as map, reduce, gather, and scatter. Complete adoption of data parallelism will require that central visualization algorithms be revisited, and expressed in this new paradigm while preserving both functionality and performance. This investment has a large potential payoff: portable performance in software bases that can span over the many architectures that scientific visualization applications run on. With this work, we present a method for ray tracing consisting of entirely of data parallel primitives. Given the extreme computational power on nodes now prevalent on supercomputers, we believe that ray tracing can supplant rasterization as the work-horse graphics solution for scientific visualization. Our ray tracing method is relatively efficient, and we describe its performance with a series of tests, and also compare to leading-edge ray tracers that are optimized for specific platforms. We find that our data parallel approach leads to results that are acceptable for many scientific visualization use cases, with the key benefit of providing a single code base that can run on many architectures.", "keywords": "", "link": "https://doi.org/10.1109/PACIFICVIS.2015.7156388", "refList": ["10.1145/1572769.1572771", "10.1109/rt.2008.4634633", "10.1145/1778765.1778803", "10.1109/inpar.2012.6339601", "10.1109/ldav.2011.6092323", "10.1145/1073204.1073329", "10.1145/2492045.2492055", "10.1145/1572769.1572792", "10.1109/tvcg.2011.24", "10.1145/965141.563893", "10.1109/rt.2008.4634620", "10.1109/mcg.2010.51"], "wos": 1, "children": [], "len": 1}, "index": 106, "embedding": [-1.9954558610916138, -0.2517378628253937, -1.060706377029419, -0.32634517550468445, -0.17045269906520844, 0.16650904715061188, 5.380379676818848, 1.5225602388381958, 6.754868507385254, -0.5890102982521057, 2.0914499759674072, -0.920688271522522, 0.1905195266008377, 2.199202299118042, -0.678647518157959, -0.5592858791351318, -0.05316852033138275, 0.08175134658813477, -0.2071121335029602, 0.36516061425209045, -0.06630208343267441, 0.5449568629264832, -0.15046541392803192, -0.12925946712493896, -1.3074088096618652, 2.6810619831085205, -0.5500518083572388, -0.16255053877830505, -0.5349987745285034, -2.490147590637207, 0.27202510833740234, -0.905439555644989], "projection": [17.744525909423828, 3.484983205795288], "size": 1, "height": 1, "width": 1}