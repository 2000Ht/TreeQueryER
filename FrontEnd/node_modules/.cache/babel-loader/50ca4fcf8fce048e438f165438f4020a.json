{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/DescriptionDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/DescriptionDialog.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ht.mi/\\u7814\\u7A76\\u751F\\u8D44\\u6599/tree_visual_query/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../assets/modal.css\";\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    descriptionObj: {\n      type: Object,\n      default: {} // default attributes: title, content\n\n    },\n    dialogTitle: {\n      type: String,\n      default: \"New Description\" //  when new a description, the dialog title is \"New Description\"; otherwise the dialog title is \"Edit Description\"\n\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    handleClickProcessDescription: function () {\n      var _handleClickProcessDescription = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('descriptionObj', this.descriptionObj); // save current description object\n                // when new description name and type are not empty, then initialize new description\n\n                if (this.dialogTitle === \"New Description\") {\n                  this.newDescription();\n                } else {\n                  this.editDescription();\n                }\n\n                this.$emit('update:visible', false);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleClickProcessDescription() {\n        return _handleClickProcessDescription.apply(this, arguments);\n      }\n\n      return handleClickProcessDescription;\n    }(),\n    handleClickCancelDescription: function () {\n      var _handleClickCancelDescription = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // cancel this description\n                this.$emit('update:visible', false);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleClickCancelDescription() {\n        return _handleClickCancelDescription.apply(this, arguments);\n      }\n\n      return handleClickCancelDescription;\n    }(),\n    newDescription: function newDescription() {\n      var content = this.descriptionObj['content']; // extract the component from the content of description\n\n      this.descriptionObj['component'] = this.extractComponent(content);\n      this.$emit('adddescription', this.descriptionObj);\n    },\n    editDescription: function editDescription() {\n      // edit the descriptions\n      var content = this.descriptionObj['content'];\n      this.descriptionObj['component'] = this.extractComponent(content);\n    },\n    extractComponent: function extractComponent(content) {\n      // extract the components from the content\n      // *TODO* current we only use the static extraction results\n      var component = {\n        type: 'created',\n        color: '#fdbf6f',\n        name: 'incident created',\n        ID: '1718299292',\n        DateTime: '2020-10-23 13:20',\n        Description: 'short description'\n      };\n      return component;\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["DescriptionDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA,CAEA;;AAFA,KALA;AASA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,iBAFA,CAEA;;AAFA;AATA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA,EAAA;AAEA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,6BADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,KAAA,cAAA,EAFA,CAGA;AACA;;AACA,oBAAA,KAAA,WAAA,KAAA,iBAAA,EAAA;AACA,uBAAA,cAAA;AACA,iBAFA,MAEA;AACA,uBAAA,eAAA;AACA;;AACA,qBAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYA,IAAA,4BAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA,qBAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,cAAA,EAAA,0BAAA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,SAAA,CAAA,CADA,CAEA;;AACA,WAAA,cAAA,CAAA,WAAA,IAAA,KAAA,gBAAA,CAAA,OAAA,CAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,cAAA;AACA,KArBA;AAsBA,IAAA,eAAA,EAAA,2BAAA;AACA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,SAAA,CAAA;AACA,WAAA,cAAA,CAAA,WAAA,IAAA,KAAA,gBAAA,CAAA,OAAA,CAAA;AACA,KA1BA;AA2BA,IAAA,gBAAA,EAAA,0BAAA,OAAA,EAAA;AACA;AACA;AACA,UAAA,SAAA,GAAA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA,kBAAA;AAAA,QAAA,EAAA,EAAA,YAAA;AAAA,QAAA,QAAA,EAAA,kBAAA;AAAA,QAAA,WAAA,EAAA;AAAA,OAAA;AACA,aAAA,SAAA;AACA;AAhCA,GAnBA;AAqDA,EAAA,KAAA,EAAA;AArDA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 320px\">\n            <div class=\"header\">\n                <span>{{ dialogTitle }}</span>\n            </div>\n            <div class=\"body\">\n                <el-form ref=\"form\" :model=\"descriptionObj\" label-width=\"120px\">\n                  <el-row class=\"description-attribute\">\n                      <el-col :span=\"24\">\n                        <el-input size=\"mini\" placeholder=\"title (required)\" v-model=\"descriptionObj.title\"></el-input>\n                      </el-col>\n                  </el-row>\n                  <el-row class=\"description-attribute\">\n                      <el-col :span=\"24\">\n                        <el-input type=\"textarea\" :rows=\"2\" size=\"mini\" placeholder=\"description (required)\" v-model=\"descriptionObj.content\">\n                        </el-input>\n                      </el-col>\n                  </el-row>\n                </el-form>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelDescription\">Cancel</button>\n                <button @click=\"handleClickProcessDescription\">Process</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      descriptionObj: {\n        type: Object,\n        default: {} // default attributes: title, content\n      },\n      dialogTitle: {\n        type: String,\n        default: \"New Description\" //  when new a description, the dialog title is \"New Description\"; otherwise the dialog title is \"Edit Description\"\n      }\n    },\n    data() {\n      return {\n      };\n    },\n    methods: {\n      async handleClickProcessDescription() {\n        console.log('descriptionObj', this.descriptionObj)\n        // save current description object\n        // when new description name and type are not empty, then initialize new description\n        if (this.dialogTitle === \"New Description\") {\n          this.newDescription()\n        } else {\n          this.editDescription()\n        }\n        this.$emit('update:visible', false);\n      },\n      async handleClickCancelDescription() {\n        // cancel this description\n        this.$emit('update:visible', false);\n      },\n      newDescription: function() {\n        let content = this.descriptionObj['content']\n        // extract the component from the content of description\n        this.descriptionObj['component'] = this.extractComponent(content)\n        this.$emit('adddescription', this.descriptionObj);\n      },\n      editDescription: function() {\n        // edit the descriptions\n        let content = this.descriptionObj['content']\n        this.descriptionObj['component'] = this.extractComponent(content)\n      },\n      extractComponent: function(content) {\n        // extract the components from the content\n        // *TODO* current we only use the static extraction results\n        let component = {type: 'created', color: '#fdbf6f', name: 'incident created', ID: '1718299292', DateTime: '2020-10-23 13:20', Description: 'short description'}\n        return component\n      }\n    },\n    watch: {}\n  };\n</script>\n<style lang=\"less\">\n  .el-color-picker__trigger {\n    height: 28px !important;\n    width: 28px !important;\n  }\n  .el-color-picker {\n    height: 28px !important;\n  }\n  .el-textarea__inner {\n    font-family: sans-serif;\n  }\n</style>\n<style lang=\"less\" scoped>\n  .body {\n    max-height: 300px;\n    overflow-y: auto;\n  }\n  .description-attribute {\n    margin-bottom: 10px;\n  }\n  .attibute-space {\n    line-height: 28px;\n    vertical-align: middle;\n    text-align: center;\n    cursor: pointer;\n    &.close:hover {\n      color: red;\n    }\n  }\n</style>"],"sourceRoot":"src/components"}]}