{"remainingRequest":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/config/drag.js","dependencies":[{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/config/drag.js","mtime":1648714649000},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/eslint-loader/index.js","mtime":1660192275000}],"contextDependencies":[],"result":["import Vue from 'vue'; //使用Vue.directive()定义一个全局指令\n//1.参数一：指令的名称，定义时指令前面不需要写v-\n//2.参数二：是一个对象，该对象中有相关的操作函数\n//3.在调用的时候必须写v-\n\nvar drag = Vue.directive('drag', {\n  //1.指令绑定到元素上回立刻执行bind函数，只执行一次\n  //2.每个函数中第一个参数永远是el，表示绑定指令的元素，el参数是原生js对象\n  //3.通过el.focus()是无法获取焦点的，因为只有插入DOM后才生效\n  bind: function bind(el) {},\n  //inserted表示一个元素，插入到DOM中会执行inserted函数，只触发一次\n  inserted: function inserted(el) {\n    el.onmousedown = function (e) {\n      var disx = e.pageX - el.offsetLeft;\n      var disy = e.pageY - el.offsetTop;\n\n      document.onmousemove = function (e) {\n        el.style.left = e.pageX - disx + 'px';\n        el.style.top = e.pageY - disy + 'px';\n      };\n\n      document.onmouseup = function () {\n        document.onmousemove = document.onmouseup = null;\n      };\n    };\n  },\n  //当VNode更新的时候会执行updated，可以触发多次\n  updated: function updated(el) {}\n});\nexport default drag;",{"version":3,"sources":["/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/config/drag.js"],"names":["Vue","drag","directive","bind","el","inserted","onmousedown","e","disx","pageX","offsetLeft","disy","pageY","offsetTop","document","onmousemove","style","left","top","onmouseup","updated"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB,C,CACA;AACA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGD,GAAG,CAACE,SAAJ,CAAc,MAAd,EAAsB;AAC/B;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,cAAUC,EAAV,EAAc,CAAG,CAJQ;AAK/B;AACAC,EAAAA,QAAQ,EAAE,kBAAUD,EAAV,EAAc;AACpBA,IAAAA,EAAE,CAACE,WAAH,GAAiB,UAAUC,CAAV,EAAa;AAC1B,UAAIC,IAAI,GAAGD,CAAC,CAACE,KAAF,GAAUL,EAAE,CAACM,UAAxB;AACA,UAAIC,IAAI,GAAGJ,CAAC,CAACK,KAAF,GAAUR,EAAE,CAACS,SAAxB;;AACAC,MAAAA,QAAQ,CAACC,WAAT,GAAuB,UAAUR,CAAV,EAAa;AAChCH,QAAAA,EAAE,CAACY,KAAH,CAASC,IAAT,GAAgBV,CAAC,CAACE,KAAF,GAAUD,IAAV,GAAiB,IAAjC;AACAJ,QAAAA,EAAE,CAACY,KAAH,CAASE,GAAT,GAAeX,CAAC,CAACK,KAAF,GAAUD,IAAV,GAAiB,IAAhC;AACH,OAHD;;AAIAG,MAAAA,QAAQ,CAACK,SAAT,GAAqB,YAAY;AAC7BL,QAAAA,QAAQ,CAACC,WAAT,GAAuBD,QAAQ,CAACK,SAAT,GAAqB,IAA5C;AACH,OAFD;AAGH,KAVD;AAWH,GAlB8B;AAmB/B;AACAC,EAAAA,OAAO,EAAE,iBAAUhB,EAAV,EAAc,CAAG;AApBK,CAAtB,CAAb;AAsBA,eAAeH,IAAf","sourcesContent":["import Vue from 'vue';\n//使用Vue.directive()定义一个全局指令\n//1.参数一：指令的名称，定义时指令前面不需要写v-\n//2.参数二：是一个对象，该对象中有相关的操作函数\n//3.在调用的时候必须写v-\nconst drag = Vue.directive('drag', {\n    //1.指令绑定到元素上回立刻执行bind函数，只执行一次\n    //2.每个函数中第一个参数永远是el，表示绑定指令的元素，el参数是原生js对象\n    //3.通过el.focus()是无法获取焦点的，因为只有插入DOM后才生效\n    bind: function (el) { },\n    //inserted表示一个元素，插入到DOM中会执行inserted函数，只触发一次\n    inserted: function (el) {\n        el.onmousedown = function (e) {\n            var disx = e.pageX - el.offsetLeft;\n            var disy = e.pageY - el.offsetTop;\n            document.onmousemove = function (e) {\n                el.style.left = e.pageX - disx + 'px';\n                el.style.top = e.pageY - disy + 'px';\n            }\n            document.onmouseup = function () {\n                document.onmousemove = document.onmouseup = null;\n            }\n        }\n    },\n    //当VNode更新的时候会执行updated，可以触发多次\n    updated: function (el) { }\n})\nexport default drag;\n\n"]}]}