{"remainingRequest":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/store.js","dependencies":[{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/store.js","mtime":1648714649000},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/eslint-loader/index.js","mtime":1660192275000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    displayMode: 'vis',\n    selectedDom: null,\n    selectedDomKey: -1,\n    reTreeDataState: 0,\n    nodeDefinitionState: 0,\n    nodeDefinitionState2: 0,\n    selectedListNode: null,\n    regexCommitState: 0,\n    selectedRepeatDom: null,\n    selectedRepeatDomState: 0,\n    lastDom: null,\n    regexList: [],\n    regexListState: 0,\n    attributeList: {\n      'depth': 'number',\n      'height': 'number',\n      'degree': 'number'\n    },\n    selectedPartState: 0,\n    regexViewState: false,\n    visViewState: 0,\n    curRegexIndex: 0,\n    reViewDataState: 0,\n    treeViewState: 0,\n    nodeListState: 0,\n    connectionState: 0,\n    curConnectionNode: null,\n    regexContentState: 0\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, 'UPDATE_DISPLAY_MODE', function UPDATE_DISPLAY_MODE(state, displayMode) {\n    state.displayMode = displayMode;\n  }), _defineProperty(_mutations, 'UPDATE_SELECTED_DOM', function UPDATE_SELECTED_DOM(state, selectedDom) {\n    //console.log('================UPDATE_SELECTED_DOM================', selectedDom['type'], selectedDom['parent']['type'])\n    state.selectedDom = selectedDom;\n\n    if (selectedDom != null && typeof selectedDom.key !== 'undefined') {\n      state.selectedDomKey = selectedDom.key;\n    }\n  }), _defineProperty(_mutations, 'UPDATE_RETREE_DATA_STATE', function UPDATE_RETREE_DATA_STATE(state) {\n    console.log('UPDATE_RETREE_DATA_STATE');\n    state.reTreeDataState = (state.reTreeDataState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_NODE_DEFINITION_STATE', function UPDATE_NODE_DEFINITION_STATE(state) {\n    state.nodeDefinitionState = (state.nodeDefinitionState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_SELECTED_LIST_DOM', function UPDATE_SELECTED_LIST_DOM(state, selectedNode) {\n    state.selectedListNode = selectedNode;\n  }), _defineProperty(_mutations, 'UPDATE_NODE_DEFINITION_STATE2', function UPDATE_NODE_DEFINITION_STATE2(state) {\n    state.nodeDefinitionState2 = (state.nodeDefinitionState2 + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_REGEX_COMMIT_STATE', function UPDATE_REGEX_COMMIT_STATE(state) {\n    state.regexCommitState = (state.regexCommitState + 1) % 2;\n  }), _defineProperty(_mutations, 'RESET_DOM_KEY_STATE', function RESET_DOM_KEY_STATE(state) {\n    state.selectedDomKey = -1;\n    state.selectedDom = null;\n  }), _defineProperty(_mutations, 'UPDATE_REPEAT_DOM', function UPDATE_REPEAT_DOM(state, curRepeatDom) {\n    state.selectedRepeatDom = curRepeatDom;\n    state.selectedRepeatDomState = (state.selectedRepeatDomState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_LAST_DOM', function UPDATE_LAST_DOM(state, lastDom) {\n    state.lastDom = lastDom;\n  }), _defineProperty(_mutations, 'ADD_REGEX_LIST', function ADD_REGEX_LIST(state, regex) {\n    if (!('regexIndex' in regex)) {\n      regex['regexIndex'] = state.regexList.length;\n      state.regexList.push(regex);\n    }\n\n    state.regexListState = (state.regexListState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_CURRENT_REGEX', function UPDATE_CURRENT_REGEX(state, regexIndex) {\n    state.curRegexIndex = regexIndex;\n  }), _defineProperty(_mutations, 'DELETE_REGEX_LIST', function DELETE_REGEX_LIST(state, regex) {\n    state.regexList.splice(regex['regexIndex'], 1);\n  }), _defineProperty(_mutations, 'UPDATE_ATTRIBUTE_LIST_NUMBER', function UPDATE_ATTRIBUTE_LIST_NUMBER(state, key) {\n    state.attributeList[key] = 'number';\n  }), _defineProperty(_mutations, 'UPDATE_ATTRIBUTE_LIST_STRING', function UPDATE_ATTRIBUTE_LIST_STRING(state, key) {\n    state.attributeList[key] = 'string';\n  }), _defineProperty(_mutations, 'UPDATE_ATTRIBUTE_LIST_BOOLEAN', function UPDATE_ATTRIBUTE_LIST_BOOLEAN(state, key) {\n    state.attributeList[key] = 'boolean';\n  }), _defineProperty(_mutations, 'UPDATE_SELECTED_PART', function UPDATE_SELECTED_PART(state) {\n    state.selectedPartState = (state.selectedPartState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_HOVERING_ID', function UPDATE_HOVERING_ID(state, hoveringId) {\n    state.hoveringId = hoveringId;\n  }), _defineProperty(_mutations, 'SHOW_REVIEW', function SHOW_REVIEW(state) {\n    state.regexViewState = true;\n  }), _defineProperty(_mutations, 'UN_SHOW_REVIEW', function UN_SHOW_REVIEW(state) {\n    state.regexViewState = false;\n  }), _defineProperty(_mutations, 'UPDATE_VISVIEW', function UPDATE_VISVIEW(state) {\n    state.visViewState = (state.visViewState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_REVIEW_DATA', function UPDATE_REVIEW_DATA(state) {\n    state.reViewDataState = (state.reViewDataState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_TREEVIEW', function UPDATE_TREEVIEW(state) {\n    state.treeViewState = (state.treeViewState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_NODE_LIST', function UPDATE_NODE_LIST(state) {\n    state.nodeListState = (state.nodeListState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_CONNECTION', function UPDATE_CONNECTION(state, index) {\n    state.curConnectionNode = index;\n    state.connectionState = (state.connectionState + 1) % 2;\n  }), _defineProperty(_mutations, 'UPDATE_REGEX_CONTENT', function UPDATE_REGEX_CONTENT(state) {\n    state.regexContentState = (state.regexContentState + 1) % 2;\n    console.log(\"qweqwioejqwoejqwoie\");\n  }), _mutations),\n  actions: {}\n});",{"version":3,"sources":["/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/store.js"],"names":["Vue","Vuex","use","Store","state","displayMode","selectedDom","selectedDomKey","reTreeDataState","nodeDefinitionState","nodeDefinitionState2","selectedListNode","regexCommitState","selectedRepeatDom","selectedRepeatDomState","lastDom","regexList","regexListState","attributeList","selectedPartState","regexViewState","visViewState","curRegexIndex","reViewDataState","treeViewState","nodeListState","connectionState","curConnectionNode","regexContentState","mutations","key","console","log","selectedNode","curRepeatDom","regex","length","push","regexIndex","splice","hoveringId","index","actions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  \tdisplayMode: 'vis',\n    selectedDom: null,\n    selectedDomKey: -1,\n    reTreeDataState: 0,\n    nodeDefinitionState: 0,\n    nodeDefinitionState2: 0,\n    selectedListNode: null,\n    regexCommitState: 0,\n    selectedRepeatDom: null,\n    selectedRepeatDomState: 0,\n    lastDom: null,\n    regexList: [],\n    regexListState: 0,\n    attributeList: {'depth':'number', 'height': 'number','degree':'number'},\n    selectedPartState: 0,\n    regexViewState: false,\n    visViewState: 0,\n    curRegexIndex: 0,\n    reViewDataState: 0, \n    treeViewState: 0,\n    nodeListState: 0,\n    connectionState: 0,\n    curConnectionNode: null,\n    regexContentState: 0,\n  },\n  mutations: {\n    ['UPDATE_DISPLAY_MODE'] (state, displayMode) {\n      state.displayMode = displayMode\n    },\n    ['UPDATE_SELECTED_DOM'] (state, selectedDom) {\n      //console.log('================UPDATE_SELECTED_DOM================', selectedDom['type'], selectedDom['parent']['type'])\n      state.selectedDom = selectedDom\n      if ((selectedDom != null) && (typeof(selectedDom.key) !== 'undefined')) {\n        state.selectedDomKey = selectedDom.key\n      }\n    },\n    ['UPDATE_RETREE_DATA_STATE'] (state) {\n      console.log('UPDATE_RETREE_DATA_STATE')\n      state.reTreeDataState = (state.reTreeDataState + 1) % 2\n    },\n    ['UPDATE_NODE_DEFINITION_STATE'] (state){\n      state.nodeDefinitionState = (state.nodeDefinitionState + 1) % 2\n    },\n    ['UPDATE_SELECTED_LIST_DOM'] (state, selectedNode){\n      state.selectedListNode = selectedNode\n    },\n    ['UPDATE_NODE_DEFINITION_STATE2'] (state){\n      state.nodeDefinitionState2 = (state.nodeDefinitionState2 + 1)%2\n    },\n    ['UPDATE_REGEX_COMMIT_STATE'] (state){\n      state.regexCommitState = (state.regexCommitState + 1) % 2\n    },\n    ['RESET_DOM_KEY_STATE'] (state){\n      state.selectedDomKey = -1\n      state.selectedDom = null\n    },\n    ['UPDATE_REPEAT_DOM'](state, curRepeatDom) {\n      state.selectedRepeatDom = curRepeatDom\n      state.selectedRepeatDomState = (state.selectedRepeatDomState + 1) % 2\n    },\n    ['UPDATE_LAST_DOM'](state, lastDom){\n      state.lastDom = lastDom\n    },\n    ['ADD_REGEX_LIST'](state, regex){\n      if(!('regexIndex' in regex)){\n        regex['regexIndex'] = state.regexList.length\n        state.regexList.push(regex)\n      }\n      state.regexListState = (state.regexListState + 1) % 2\n    },\n    ['UPDATE_CURRENT_REGEX'](state, regexIndex){\n      state.curRegexIndex = regexIndex\n    },\n    ['DELETE_REGEX_LIST'](state, regex){\n      state.regexList.splice(regex['regexIndex'],1)\n    },\n    ['UPDATE_ATTRIBUTE_LIST_NUMBER'](state, key){\n      state.attributeList[key] = 'number'\n    },\n    ['UPDATE_ATTRIBUTE_LIST_STRING'](state, key){\n      state.attributeList[key] = 'string'\n    },\n    ['UPDATE_ATTRIBUTE_LIST_BOOLEAN'](state, key){\n      state.attributeList[key] = 'boolean'\n    },\n    ['UPDATE_SELECTED_PART'](state){\n      state.selectedPartState = (state.selectedPartState + 1) % 2\n    },\n    ['UPDATE_HOVERING_ID'] (state, hoveringId) {\n      state.hoveringId = hoveringId\n    },\n    ['SHOW_REVIEW'] (state){\n      state.regexViewState = true\n    },\n    ['UN_SHOW_REVIEW'] (state){\n      state.regexViewState = false\n    },\n    ['UPDATE_VISVIEW'] (state){\n      state.visViewState = (state.visViewState + 1) % 2\n    },\n    ['UPDATE_REVIEW_DATA'] (state){\n      state.reViewDataState = (state.reViewDataState+1)%2\n    },\n    ['UPDATE_TREEVIEW'] (state){\n      state.treeViewState = (state.treeViewState + 1)%2\n    },\n    ['UPDATE_NODE_LIST'] (state){\n      state.nodeListState = (state.nodeListState + 1)%2\n    },\n    ['UPDATE_CONNECTION'] (state, index){\n      state.curConnectionNode = index\n      state.connectionState = (state.connectionState + 1)%2\n    },\n    ['UPDATE_REGEX_CONTENT'](state){\n      state.regexContentState = (state.regexContentState + 1)%2\n      console.log(\"qweqwioejqwoejqwoie\")\n    }\n  },\n  actions: {\n\n  }\n})\n"]}]}