{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/NodeDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/NodeDialog.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/ht.mi/\\u7814\\u7A76\\u751F\\u8D44\\u6599/tree_visual_query/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../assets/modal.css\";\nimport TreeVisView from '@/views/TreeVisView.vue';\nimport REView from '@/views/REView.vue';\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  components: {\n    TreeVisView: TreeVisView,\n    REView: REView\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    node: {\n      type: Object,\n      default: null\n    },\n    excludeShownAttrArray: {\n      type: Array,\n      default: []\n    }\n  },\n  data: function data() {\n    return {\n      attrs: [],\n      values: [],\n      nodeName: '',\n      updateObj: {},\n      treeVisViewKey: 0\n    };\n  },\n  beforeMount: function beforeMount() {},\n  mounted: function mounted() {},\n  methods: _objectSpread({}, mapMutations(['UN_SHOW_REVIEW']), {\n    handleClickSaveNode: function handleClickSaveNode() {\n      this.$emit('update:node', Object.assign(this.node, this.updateObj));\n      this.$emit('update:visible', false);\n    },\n    handleClickCancelSaveNode: function handleClickCancelSaveNode() {\n      this.$emit('update:visible', false);\n      this.UN_SHOW_REVIEW();\n    },\n    changeValue: function changeValue(index) {\n      this.updateObj[this.attrs[index]] = this.values[index];\n    }\n  }),\n  watch: {\n    node: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          return;\n        }\n\n        this.attrs = [];\n        this.values = [];\n        this.nodeName = val['name'];\n        this.updateObj = {}; // the node edit dialog shows the attribute not existed in the excludeShownAttrArray\n\n        for (var attr in val) {\n          if (this.excludeShownAttrArray.indexOf(attr) === -1) {\n            this.attrs.push(attr);\n            this.values.push(val[attr]);\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["NodeDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAUA;AACA,OAAA,WAAA,MAAA,yBAAA;AACA,OAAA,MAAA,MAAA,oBAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,qBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GALA;AAmBA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA;AALA,KAAA;AAOA,GA3BA;AA6BA,EAAA,WA7BA,yBA6BA,CAEA,CA/BA;AAgCA,EAAA,OAhCA,qBAgCA,CAEA,CAlCA;AAmCA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,gBADA,CAAA,CADA;AAIA,IAAA,mBAJA,iCAIA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA,KAAA,SAAA,CAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KAPA;AAQA,IAAA,yBARA,uCAQA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,WAAA,cAAA;AACA,KAXA;AAYA,IAAA,WAZA,uBAYA,KAZA,EAYA;AACA,WAAA,SAAA,CAAA,KAAA,KAAA,CAAA,KAAA,CAAA,IAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AACA;AAdA,IAnCA;AAmDA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,YAAA,CAAA,GAAA,EAAA;AAAA;AAAA;;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,GAAA,CAAA,MAAA,CAAA;AACA,aAAA,SAAA,GAAA,EAAA,CALA,CAMA;;AACA,aAAA,IAAA,IAAA,IAAA,GAAA,EAAA;AACA,cAAA,KAAA,qBAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,iBAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,iBAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA;AACA;AACA;AACA;AAfA;AADA;AAnDA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 80%; height: 80%; top: 0; left: 0;\" v-drag>\n             <REView></REView>           \n            <button class=\"cancelBtn\" @click=\"handleClickCancelSaveNode\">Cancel</button>\n            <button class=\"okBtn\" @click=\"handleClickSaveNode\">Ok</button>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n  import TreeVisView from '@/views/TreeVisView.vue' \n  import REView from '@/views/REView.vue'\n  import { mapState, mapMutations } from 'vuex';\n\n  export default {\n    components:{\n      TreeVisView,\n      REView\n    },\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      node: {\n        type: Object,\n        default: null,\n      },\n      excludeShownAttrArray: {\n        type: Array,\n        default: [],\n      },\n    },\n    data: function() {\n      return {\n        attrs: [],\n        values: [],\n        nodeName: '',\n        updateObj: {},\n        treeVisViewKey: 0\n      };\n    },\n\n    beforeMount(){\n\n    },\n    mounted() {\n\n    },\n    methods: {\n      ...mapMutations([\n        'UN_SHOW_REVIEW'\n      ]),\n      handleClickSaveNode() {\n        this.$emit('update:node', Object.assign(this.node, this.updateObj));\n        this.$emit('update:visible', false);\n      },\n      handleClickCancelSaveNode() {\n        this.$emit('update:visible', false);\n        this.UN_SHOW_REVIEW()\n      },\n      changeValue(index) {\n        this.updateObj[this.attrs[index]] = this.values[index]\n      },\n    },\n    watch: {\n      node: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.attrs = []\n          this.values = []\n          this.nodeName = val['name']\n          this.updateObj = {}\n          // the node edit dialog shows the attribute not existed in the excludeShownAttrArray\n          for (let attr in val) {\n            if (this.excludeShownAttrArray.indexOf(attr) === -1) {\n              this.attrs.push(attr)\n              this.values.push(val[attr])\n            }\n          }\n        },\n      },\n    },\n  };\n</script>\n<style lang=\"less\" scoped>\n  .attibute-space {\n    line-height: 28px;\n    vertical-align: middle;\n    text-align: center;\n    cursor: pointer;\n    &.close:hover {\n      color: red;\n    }\n    &.attribute-value {\n      text-align: left;\n    }\n  }\n  .cancelBtn{\n    position: absolute;\n    bottom: 5%;\n    right: 5%;\n  }\n  body {\n    background-color: #324266;\n}\n</style>"],"sourceRoot":"src/components"}]}