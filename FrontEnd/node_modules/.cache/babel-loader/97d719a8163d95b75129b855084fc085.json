{"remainingRequest":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/REView/REComponents/REElementComposition.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/REView/REComponents/REElementComposition.vue","mtime":1648714649000},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nimport REPath from '@/views/REView/REComponents/REPath.vue';\nimport RENode from '@/views/REView/REComponents/RENode.vue';\nimport REOr from '@/views/REView/REComponents/REOr.vue';\nexport default {\n  name: 'REElementComposition',\n  components: {\n    RENode: RENode,\n    REPath: REPath,\n    REOr: REOr\n  },\n  props: {\n    elementCompositionExpression: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  beforeMount: function beforeMount() {},\n  mounted: function mounted() {},\n  watch: {\n    displayMode: function displayMode() {\n      console.log('displayMode');\n    }\n  },\n  computed: _objectSpread({}, mapState(['displayMode', 'selectedDom', 'selectedDomKey']), {\n    getNodeHighlightState: function getNodeHighlightState() {\n      return this.elementCompositionExpression.key === this.selectedDomKey;\n    },\n    elementCompositionTransform: function elementCompositionTransform() {\n      return \"translate(\".concat(this.elementCompositionExpression['x'], \", \").concat(this.elementCompositionExpression['y'], \")\");\n    },\n    bracketCompute1: function bracketCompute1() {\n      var x1 = this.elementCompositionExpression['x1'];\n      var y1 = this.elementCompositionExpression['y1'];\n      var x2 = this.elementCompositionExpression['x2'];\n      var y2 = this.elementCompositionExpression['y2'];\n      return \"M \" + x1 + \" \" + y1 + \" V \" + y2;\n    },\n    bracketCompute2: function bracketCompute2() {\n      var x1 = this.elementCompositionExpression['x1'] + 8;\n      var y1 = this.elementCompositionExpression['y1'];\n      var x2 = this.elementCompositionExpression['x2'];\n      var y2 = this.elementCompositionExpression['y2'];\n      return \"M \" + x1 + \" \" + y1 + \" V \" + y2;\n    },\n    bracketRectTransform: function bracketRectTransform() {\n      var x1 = this.elementCompositionExpression['x1'];\n      var y1 = this.elementCompositionExpression['y1'];\n      var x2 = this.elementCompositionExpression['x2'];\n      var y2 = this.elementCompositionExpression['y2'];\n      return \"translate(\".concat(x1, \", \").concat(y1, \")\");\n    },\n    heightCompute: function heightCompute() {\n      var x1 = this.elementCompositionExpression['x1'];\n      var y1 = this.elementCompositionExpression['y1'];\n      var x2 = this.elementCompositionExpression['x2'];\n      var y2 = this.elementCompositionExpression['y2'];\n      return y2 - y1;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['UPDATE_SELECTED_DOM', 'UPDATE_NODE_DEFINITION_STATE']), {\n    computeExistKey: function computeExistKey(d) {\n      return 'exist' + d;\n    },\n    computeAllKey: function computeAllKey(d) {\n      return 'all' + d;\n    },\n    computeExistItemKey: function computeExistItemKey(d) {\n      return 'existItem' + d;\n    },\n    commonTransform1: function commonTransform1(x, y) {\n      return \"translate(\".concat(x, \", \").concat(y, \")\");\n    },\n    commonTransform2: function commonTransform2(x, y) {\n      console.log(\"x\", x, \"y\", y);\n      return \"translate(\".concat(x - 1, \", \").concat(y, \")\");\n    },\n    leftBracketCompute: function leftBracketCompute(x1, y1, x2, y2) {\n      var qx = x1 - (y2 - y1) / 3;\n      var qy = (y2 + y1) / 2;\n      return \"M \" + x1 + \" \" + y1 + \" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2;\n    },\n    rightBracketCompute: function rightBracketCompute(x1, y1, x2, y2) {\n      var qx = x1 + (y2 - y1) / 3;\n      var qy = (y2 + y1) / 2;\n      return \"M \" + x1 + \" \" + y1 + \" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2;\n    },\n    updateSelectedElementComposition: function updateSelectedElementComposition() {\n      this.UPDATE_SELECTED_DOM(this.elementCompositionExpression);\n    },\n    updateSelectedExist: function updateSelectedExist(d) {\n      this.UPDATE_NODE_DEFINITION_STATE();\n      this.UPDATE_SELECTED_DOM(d);\n    },\n    updateSelectedAll: function updateSelectedAll(d) {\n      this.UPDATE_NODE_DEFINITION_STATE();\n      this.UPDATE_SELECTED_DOM(d);\n    },\n    selectedStyle: function selectedStyle(d) {\n      if (d.key == this.selectedDomKey) {\n        return \"fill: red !important; \" + \"stroke-width: 0px;\";\n      }\n    },\n    elementCompositionCheck: function elementCompositionCheck() {\n      if (this.elementCompositionExpression['exist']['composition'].length + this.elementCompositionExpression['all']['composition'].length > 0) return true;\n      return false;\n    }\n  })\n};",{"version":3,"sources":["REElementComposition.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <g class=\"re-elementComposition\" >\n          <path v-if=\"elementCompositionCheck()\" :d=\"bracketCompute1\" @click=\"updateSelectedElementComposition()\"  :class=\"{'highlighted': getNodeHighlightState }\"/>\n          <path v-if=\"elementCompositionCheck()\" :d=\"bracketCompute2\" @click=\"updateSelectedElementComposition()\"  :class=\"{'highlighted': getNodeHighlightState }\"/>\n          <rect v-if=\"elementCompositionCheck()\" :transform=\"bracketRectTransform\" @click=\"updateSelectedElementComposition()\" class=\"rect-cover\" width=\"10\" :height=\"heightCompute\" opacity=\"0\"/>\n        <g v-for=\"(item1, index1) of elementCompositionExpression['exist']['composition']\" :key=\"computeExistKey(index1)\">\n            <text :transform=\"commonTransform1(item1['xExist'], item1['yExist'])\" @click=\"updateSelectedExist(item1)\" :style=\"selectedStyle(item1)\" style=\"alignment-baseline: hanging; font-size: 30px\">∃</text>\n            <RENode v-if=\"item1['type'] == 'node'\" :nodeExpression=\"item1\"></RENode>\n            <REPath v-if=\"item1['type'] == 'path'\" :pathExpression=\"item1\"></REPath>\n            <REOr v-if=\"item1['type'] == 'or'\" :orExpression=\"item1\"></REOr>\n        </g>\n        <g v-for=\"(item1, index1) of elementCompositionExpression['all']['composition']\" :key=\"computeAllKey(index1)\">\n            <text :transform=\"commonTransform2(item1['xAll'], item1['yAll'])\" @click=\"updateSelectedAll(item1)\" :style=\"selectedStyle(item1)\" style=\"alignment-baseline: hanging; font-size: 28px\">∀</text>\n            <RENode v-if=\"item1['type'] == 'node'\" :nodeExpression=\"item1\"></RENode>\n            <REPath v-if=\"item1['type'] == 'path'\" :pathExpression=\"item1\"></REPath>\n            <REOr v-if=\"item1['type'] == 'or'\" :orExpression=\"item1\"></REOr>\n        </g>\n    </g>\n    \n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex';\n    import REPath from '@/views/REView/REComponents/REPath.vue';\n    import RENode from '@/views/REView/REComponents/RENode.vue';\n    import REOr from '@/views/REView/REComponents/REOr.vue';\n\nexport default {\n  name: 'REElementComposition',\n  components: {\n    RENode,\n    REPath,\n    REOr\n  },\n  props: {\n    elementCompositionExpression:{\n      type: Object\n    }\n  },\n  data() {\n    return {\n\n    }\n  },\n  beforeMount(){\n  },\n  mounted() {\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'selectedDom',\n      'selectedDomKey'\n    ]),\n    getNodeHighlightState () {\n        return this.elementCompositionExpression.key === this.selectedDomKey\n    },\n    elementCompositionTransform(){\n        return `translate(${this.elementCompositionExpression['x']}, ${this.elementCompositionExpression['y']})`\n    },\n    bracketCompute1(){\n        var x1 = this.elementCompositionExpression['x1']\n        var y1 = this.elementCompositionExpression['y1']\n        var x2 = this.elementCompositionExpression['x2']\n        var y2 = this.elementCompositionExpression['y2']\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t \" V \" + y2);\n    },\n    bracketCompute2(){\n        var x1 = this.elementCompositionExpression['x1'] + 8\n        var y1 = this.elementCompositionExpression['y1']\n        var x2 = this.elementCompositionExpression['x2']\n        var y2 = this.elementCompositionExpression['y2']\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t \" V \" + y2);\n    },\n    bracketRectTransform(){\n        var x1 = this.elementCompositionExpression['x1']\n        var y1 = this.elementCompositionExpression['y1']\n        var x2 = this.elementCompositionExpression['x2']\n        var y2 = this.elementCompositionExpression['y2']\n        \n        return `translate(${x1}, ${y1})`\n    },\n    heightCompute(){\n        var x1 = this.elementCompositionExpression['x1']\n        var y1 = this.elementCompositionExpression['y1']\n        var x2 = this.elementCompositionExpression['x2']\n        var y2 = this.elementCompositionExpression['y2']\n\n        return y2-y1\n    }\n\n   \n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_SELECTED_DOM',\n      'UPDATE_NODE_DEFINITION_STATE',\n    ]),\n    computeExistKey(d){\n        return 'exist' + d\n    },\n    computeAllKey(d){\n        return 'all' + d\n    },\n    computeExistItemKey(d){\n        return 'existItem' + d\n    },\n    commonTransform1(x, y){\n        return `translate(${x}, ${y})`\n    },\n    commonTransform2(x, y){\n        console.log(\"x\", x, \"y\", y)\n        return `translate(${x-1}, ${y})`\n    },\n    leftBracketCompute(x1, y1, x2, y2)\n\t{\n            var qx = x1-(y2-y1)/3\n            var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    rightBracketCompute(x1, y1, x2, y2)\n\t{\n        var qx = x1+(y2-y1)/3\n        var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    updateSelectedElementComposition() {\n        this.UPDATE_SELECTED_DOM(this.elementCompositionExpression)\n    },\n    updateSelectedExist(d) {\n        this.UPDATE_NODE_DEFINITION_STATE()\n        this.UPDATE_SELECTED_DOM(d)\n    },\n    updateSelectedAll(d){\n      this.UPDATE_NODE_DEFINITION_STATE()\n      this.UPDATE_SELECTED_DOM(d)\n    },\n    selectedStyle(d){\n        if(d.key == this.selectedDomKey){\n            return ( \"fill: red !important; \" + \n                     \"stroke-width: 0px;\");\n        }\n    },\n    elementCompositionCheck(){\n      if(this.elementCompositionExpression['exist']['composition'].length + this.elementCompositionExpression['all']['composition'].length>0)\n        return true\n      return false\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.re-elementComposition {\n  height: 100%;\n  width: 100%;\n  .bracket{\n        &.highlighted {\n        stroke: red;\n    }\n  }\n\n}\npath {\n    stroke: #000000;\n    stroke-width: 2px;\n    fill: none;\n            &.highlighted {\n        stroke: red;\n    }\n}\n</style>\n"],"sourceRoot":"src/views/REView/REComponents"}]}