{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/OverviewPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/OverviewPanel.vue","mtime":1671367346718},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/Users/ht.mi/\\u7814\\u7A76\\u751F\\u8D44\\u6599/tree_visual_query/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Users/ht.mi/\\u7814\\u7A76\\u751F\\u8D44\\u6599/tree_visual_query/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  name: 'OverviewPanel',\n  components: {},\n  props: {},\n  data: function data() {\n    return {\n      frontPoint: null,\n      selectValue: \"Citation\",\n      options: [{\n        value: \"Citation\"\n      }, {\n        value: \"Repost\"\n      }],\n      condition_data: null\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.condition_data = sysDatasetObj.getCondition();\n  },\n  mounted: function mounted() {\n    this.width = this.$refs.projectionPanel.clientWidth;\n    this.height = this.$refs.projectionPanel.clientHeight; // this.test()\n\n    this.draw_projection_chart();\n    this.draw_size_bar();\n    this.draw_height_bar();\n    this.draw_width_bar();\n  },\n  watch: {\n    displayMode: function displayMode() {\n      console.log('displayMode');\n    },\n    visPanelState: function visPanelState() {\n      // d3.select('#distribute-chart').remove()\n      d3.select('#bar-size-1').remove();\n      d3.select('#bar-height-1').remove();\n      d3.select('#bar-width-1').remove(); // this.draw_projection_chart()\n\n      this.draw_size_bar();\n      this.draw_height_bar();\n      this.draw_width_bar();\n    }\n  },\n  computed: _objectSpread({}, mapState(['visPanelState'])),\n  created: function created() {},\n  methods: _objectSpread({}, mapMutations(['DATA_QUERY_INDEX']), {\n    test: function test() {\n      var x = d3.scaleLinear().domain([0, 1]).range([0, 500]);\n      var x2 = x.copy(); // reference.\n\n      var zoom = d3.zoom().scaleExtent([1, 10]).on(\"zoom\", zoomed);\n      var svg = d3.select(\"svg\").call(zoom);\n      var axis = d3.axisBottom().scale(x);\n      var axisG = svg.append(\"g\").attr(\"transform\", \"translate(0,30)\").call(axis);\n\n      function zoomed() {\n        x = d3.event.transform.rescaleX(x2);\n        axis.scale(x);\n        axisG.call(axis);\n      }\n    },\n    draw_projection_chart: function draw_projection_chart() {\n      var self = this;\n      d3.csv('treeDataset/umap_GIN10_res.csv', d3.autoType).then(function (data) {\n        var margin = {\n          top: 5,\n          right: 5,\n          bottom: 5,\n          left: 5\n        },\n            width = self.$refs.projectionPanel.clientWidth - margin.left - margin.right,\n            height = self.$refs.projectionPanel.clientHeight - margin.top - margin.bottom;\n        var x = d3.scaleLinear().range([0, width]).nice();\n        var y = d3.scaleLinear().range([height, 0]).nice();\n        var xMax = d3.max(data, function (d) {\n          return d['x'];\n        }) * 1.05,\n            xMin = d3.min(data, function (d) {\n          return d['x'];\n        }),\n            xMin = xMin > 0 ? 0 : xMin,\n            yMax = d3.max(data, function (d) {\n          return d['y'];\n        }) * 1.05,\n            yMin = d3.min(data, function (d) {\n          return d['y'];\n        }),\n            yMin = yMin > 0 ? 0 : yMin;\n        x.domain([xMin - 2, xMax + 2]);\n        y.domain([yMin - 2, yMax + 1]);\n        var xAxis = d3.axisBottom().scale(x).ticks(8).tickSize(-height);\n        var yAxis = d3.axisLeft().scale(y).ticks(8).tickSize(-width); // var color = d3.scale.category10();\n        // var tip = d3.tip()\n        // .attr(\"class\", \"d3-tip\")\n        // .offset([-10, 0])\n        // .html(function(d) {\n        //   return xCat + \": \" + d[xCat] + \"<br>\" + yCat + \": \" + d[yCat];\n        // });\n\n        var zoomBeh = d3.zoom() // .x(x)\n        // .y(y)\n        .scaleExtent([0, 50]).on(\"zoom\", zoom);\n        var svg = d3.select(self.$el).select('#projection-chart').append(\"g\").attr('id', 'distribute-chart').attr(\"transform\", \"translate(5, 5)\").call(zoomBeh); //  svg.call(tip);\n\n        svg.append(\"rect\").attr(\"class\", \"overview-rect\").attr(\"width\", width).attr(\"height\", height);\n        var xAxisG = svg.append(\"g\").classed(\"x axis\", true).attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis);\n        var yAxisG = svg.append(\"g\").classed(\"y axis\", true).call(yAxis);\n        var objects = svg.append(\"svg\").attr(\"class\", \"overview-svg\").attr(\"width\", width).attr(\"height\", height);\n        objects.append(\"svg:line\").classed(\"axisLine hAxisLine\", true).attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", width).attr(\"y2\", 0).attr(\"transform\", \"translate(0,\" + height + \")\");\n        objects.append(\"svg:line\").classed(\"axisLine vAxisLine\", true).attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height);\n        var rMax = d3.max(data, function (d) {\n          return d['n'];\n        }),\n            rMin = d3.min(data, function (d) {\n          return d['n'];\n        });\n        var logScale = d3.scaleLog().domain([rMin, rMax]).range([3, 10]);\n        objects.selectAll(\".dot\").data(data).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"id\", function (d) {\n          return \"dot\" + parseInt(d['m']);\n        }).classed(\"dot-selected\", false).classed(\"dot-highlighted\", false).attr(\"transform\", transform).attr(\"m\", function (d) {\n          return d['m'];\n        }).attr(\"r\", function (d) {\n          return logScale(d['n']);\n        }).on('click', function () {\n          // d3.select(self.$el).selectAll(\".dot\").classed(\"dot-selected\", false)\n          // d3.select(this).classed('dot-selected', true)\n          self.DATA_QUERY_INDEX(parseInt(this.getAttribute(\"m\")));\n        });\n\n        function zoom() {\n          var transformEvent = d3.event.transform;\n          svg.selectAll(\".dot\").attr(\"transform\", function (d) {\n            return transform(d, transformEvent);\n          });\n        }\n\n        function transform(d, transformEvent) {\n          var poxList = [x(d['x']), y(d['y'])];\n\n          if (_typeof(transformEvent) !== 'object') {\n            return \"translate(\" + poxList[0] + \",\" + poxList[1] + \")\";\n          }\n\n          var posListUpdate = transformEvent.apply(poxList);\n          return \"translate(\" + posListUpdate[0] + \",\" + posListUpdate[1] + \")\";\n        }\n      });\n    },\n    draw_size_bar: function draw_size_bar() {\n      var self = this;\n      d3.csv('treeDataset/size.csv', d3.autoType).then(function (data) {\n        var margin = {\n          top: 10,\n          right: 10,\n          bottom: 50,\n          left: 35\n        },\n            width = document.getElementById(\"bar-size\").clientWidth - margin.left - margin.right,\n            height = document.getElementById(\"bar-size\").clientHeight - margin.top - margin.bottom;\n        var highlightData = sysDatasetObj.gethighlightBar();\n        var highlightFlag = false;\n\n        if ('size' in highlightData) {\n          highlightData = highlightData['size'];\n          highlightFlag = true;\n        } // append the svg object to the body of the page\n\n\n        var svg = d3.select(self.$el).select(\"#bar-size\").append(\"g\").attr(\"id\", 'bar-size-1').attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.right + \")\");\n        svg.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", width - 20).attr(\"y\", 12) // .attr(\"x\", width-100)\n        // .attr(\"y\", 10)\n        .attr(\"font-size\", \"15px\").attr(\"font-weight\", \"bolder\").attr(\"fill\", \"#666666\").text(\"Size:\");\n        var x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n          return d.x;\n        })).padding(0.2);\n        svg.append(\"g\").attr(\"class\", \"x-axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\"); // Add Y axis\n\n        var y = d3.scaleLinear().domain([0, 1200]).range([height, 0]);\n        svg.append(\"g\").call(d3.axisLeft(y).ticks(4)); // Bars\n\n        svg.selectAll(\"mybar\").data(data).enter().append(\"rect\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n          return height - y(d.y);\n        }).attr(\"fill\", \"#CCCCCC\");\n\n        if (highlightFlag) {\n          svg.selectAll(\"highlightBar\").data(highlightData).enter().append(\"rect\").attr(\"x\", function (d) {\n            return x(d.x);\n          }).attr(\"y\", function (d) {\n            return y(d.y);\n          }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n            return height - y(d.y);\n          }).attr(\"fill\", \"orange\");\n        }\n\n        svg.append(\"g\").selectAll(\"g\").data(data).enter().append('text').attr(\"class\", \"tree-name\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"dx\", \"10\").attr(\"dy\", '-1').attr(\"text-anchor\", \"middle\").text(function (d) {\n          return d.y;\n        }).attr('font-size', \"10px\").attr('fill', '#808080');\n      });\n    },\n    draw_height_bar: function draw_height_bar() {\n      var self = this;\n      d3.csv('treeDataset/height.csv', d3.autoType).then(function (data) {\n        var margin = {\n          top: 10,\n          right: 10,\n          bottom: 50,\n          left: 35\n        },\n            width = document.getElementById(\"bar-height\").clientWidth - margin.left - margin.right,\n            height = document.getElementById(\"bar-height\").clientHeight - margin.top - margin.bottom; // append the svg object to the body of the page\n\n        var svg = d3.select(self.$el).select(\"#bar-height\").append(\"g\").attr(\"id\", 'bar-height-1').attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.right + \")\");\n        var highlightData = sysDatasetObj.gethighlightBar();\n        var highlightFlag = false;\n\n        if ('height' in highlightData) {\n          highlightData = highlightData['height'];\n          highlightFlag = true;\n        }\n\n        svg.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", width - 20).attr(\"y\", 12) // .attr(\"x\", width-110)\n        // .attr(\"y\", 12)\n        .attr(\"font-size\", \"15px\").attr(\"font-weight\", \"bolder\").attr(\"fill\", \"#666666\").text(\"Height:\");\n        var x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n          return d.x;\n        })).padding(0.2);\n        svg.append(\"g\").attr(\"class\", \"x-axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(0,0)\").style(\"text-anchor\", \"middle\"); // Add Y axis\n\n        var y = d3.scaleLinear().domain([0, 1200]).range([height, 0]);\n        svg.append(\"g\").call(d3.axisLeft(y).ticks(4)); // Bars\n\n        svg.selectAll(\"mybar\").data(data).enter().append(\"rect\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n          return height - y(d.y);\n        }).attr(\"fill\", \"#CCCCCC\");\n\n        if (highlightFlag) {\n          svg.selectAll(\"highlightBar\").data(highlightData).enter().append(\"rect\").attr(\"x\", function (d) {\n            return x(d.x);\n          }).attr(\"y\", function (d) {\n            return y(d.y);\n          }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n            return height - y(d.y);\n          }).attr(\"fill\", \"orange\");\n        }\n\n        svg.append(\"g\").selectAll(\"g\").data(data).enter().append('text').attr(\"class\", \"tree-name\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"dx\", \"10\").attr(\"dy\", '-1').attr(\"text-anchor\", \"middle\").text(function (d) {\n          return d.y;\n        }).attr('font-size', \"10px\").attr('fill', '#808080');\n      });\n    },\n    draw_width_bar: function draw_width_bar() {\n      var self = this;\n      d3.csv('treeDataset/width.csv', d3.autoType).then(function (data) {\n        var margin = {\n          top: 10,\n          right: 10,\n          bottom: 50,\n          left: 35\n        },\n            width = document.getElementById(\"bar-width\").clientWidth - margin.left - margin.right,\n            height = document.getElementById(\"bar-width\").clientHeight - margin.top - margin.bottom; // append the svg object to the body of the page\n\n        var svg = d3.select(self.$el).select(\"#bar-width\").append(\"g\").attr(\"id\", 'bar-width-1').attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.right + \")\");\n        var highlightData = sysDatasetObj.gethighlightBar();\n        var highlightFlag = false;\n\n        if ('width' in highlightData) {\n          highlightData = highlightData['width'];\n          highlightFlag = true;\n        }\n\n        svg.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", width - 20).attr(\"y\", 12) // .attr(\"x\", width-105)\n        // .attr(\"y\", 12)\n        .attr(\"font-size\", \"15px\").attr(\"font-weight\", \"bolder\").attr(\"fill\", \"#666666\").text(\"Width:\");\n        var x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n          return d.x;\n        })).padding(0.2);\n        svg.append(\"g\").attr(\"class\", \"x-axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\"); // Add Y axis\n\n        var y = d3.scaleLinear().domain([0, 1200]).range([height, 0]);\n        svg.append(\"g\").call(d3.axisLeft(y).ticks(4)); // Bars\n\n        svg.selectAll(\"mybar\").data(data).enter().append(\"rect\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n          return height - y(d.y);\n        }).attr(\"fill\", \"#CCCCCC\");\n\n        if (highlightFlag) {\n          svg.selectAll(\"highlightBar\").data(highlightData).enter().append(\"rect\").attr(\"x\", function (d) {\n            return x(d.x);\n          }).attr(\"y\", function (d) {\n            return y(d.y);\n          }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n            return height - y(d.y);\n          }).attr(\"fill\", \"orange\");\n        }\n\n        svg.append(\"g\").selectAll(\"g\").data(data).enter().append('text').attr(\"class\", \"tree-name\").attr(\"x\", function (d) {\n          return x(d.x);\n        }).attr(\"y\", function (d) {\n          return y(d.y);\n        }).attr(\"dx\", \"10\").attr(\"dy\", '-1').attr(\"text-anchor\", \"middle\").text(function (d) {\n          return d.y;\n        }).attr('font-size', \"10px\").attr('fill', '#808080');\n      });\n    }\n  })\n};",{"version":3,"sources":["OverviewPanel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"overview-panel-view\">\n    <div class=\"dataset-part\">\n      <span class=\"dataset-text\">Dataset</span>\n        <div class=\"dataset-select\">\n          <el-select v-model=\"selectValue\">\n            <el-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.value\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n      </div>\n      <i class=\"el-icon-circle-plus-outline\"></i>\n      <!-- <svg t=\"1660402717121\" class=\"dataset-icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2095\" width=\"25\" height=\"25\"><path d=\"M512 958.016611c-119.648434 0-232.1288-46.367961-316.736783-130.559656-84.640667-84.255342-131.263217-196.255772-131.263217-315.455235 0-119.168499 46.624271-231.199892 131.232254-315.424271 84.607983-84.191695 197.088348-130.559656 316.736783-130.559656s232.1288 46.367961 316.704099 130.559656c84.67163 84.224378 131.263217 196.255772 131.263217 315.391587 0.032684 119.199462-46.591587 231.232576-131.263217 315.455235C744.1288 911.615966 631.648434 958.016611 512 958.016611zM512 129.983389c-102.623626 0-199.071738 39.743475-271.583282 111.936783-72.480581 72.12794-112.416718 168.063432-112.416718 270.079828s39.903454 197.951888 112.384034 270.047144c72.511544 72.191587 168.959656 111.936783 271.583282 111.936783 102.592662 0 199.071738-39.743475 271.583282-111.936783 72.480581-72.160624 112.416718-168.063432 112.384034-270.079828 0-102.016396-39.903454-197.919204-112.384034-270.016181C711.071738 169.759548 614.592662 129.983389 512 129.983389z\" p-id=\"2096\"></path><path d=\"M736.00086 480.00086 544.00086 480.00086 544.00086 288.00086c0-17.664722-14.336138-32.00086-32.00086-32.00086s-32.00086 14.336138-32.00086 32.00086l0 192L288.00086 480.00086c-17.664722 0-32.00086 14.336138-32.00086 32.00086s14.336138 32.00086 32.00086 32.00086l192 0 0 192c0 17.695686 14.336138 32.00086 32.00086 32.00086s32.00086-14.303454 32.00086-32.00086L544.00258 544.00086l192 0c17.695686 0 32.00086-14.336138 32.00086-32.00086S753.696546 480.00086 736.00086 480.00086z\" p-id=\"2097\"></path></svg> -->\n    </div>\n    <span class=\"projection-text\">Projection</span>\n    <div class=\"projection-part\" ref=\"projectionPanel\">\n        <svg id=\"projection-chart\" style=\"position: absolute; width: 100%; height: 100%;\">\n        </svg>\n    </div>\n    <span class=\"distribution-text\">Distribution</span>\n    <div class=\"distribution-part\">\n      <div class=\"distribution-div\" id=\"size\">\n        <!-- <input class=\"size-input1\" type=\"text\" name=\"ticketNum1\" v-model=\"condition_data['Size'][0]\">\n        <span class=\"size-connect\">~</span>\n        <input class=\"size-input2\" type=\"text\" name=\"ticketNum2\" v-model=\"condition_data['Size'][1]\"> -->\n        <svg id=\"bar-size\" style=\"width: 100%; height: 100%\"></svg>\n      </div>\n      <div class=\"distribution-div\" id=\"height\">\n        <!-- <input class=\"height-input1\" type=\"text\" name=\"ticketNum3\" v-model=\"condition_data['Height'][0]\">\n        <span class=\"height-connect\">~</span>\n        <input class=\"height-input2\" type=\"text\" name=\"ticketNum4\" v-model=\"condition_data['Height'][1]\"> -->\n        <svg id=\"bar-height\" style=\"width: 100%; height: 100%\"></svg>\n      </div>\n      <div class=\"distribution-div\" id=\"width\">\n        <!-- <input class=\"width-input1\" type=\"text\" name=\"ticketNum5\" v-model=\"condition_data['Width'][0]\">\n        <span class=\"width-connect\">~</span>\n        <input class=\"width-input2\" type=\"text\" name=\"ticketNum6\" v-model=\"condition_data['Width'][1]\"> -->\n        <svg id=\"bar-width\" style=\"width: 100%; height: 100%\"></svg>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\n\n\nexport default {\n  name: 'OverviewPanel',\n  components: {\n\n  },\n  props: {\n\n  },\n  data() {\n    return {\n      frontPoint: null,\n      selectValue: \"Citation\",\n      options:[\n        {\n          value: \"Citation\"\n        },\n        {\n          value: \"Repost\"\n        }\n      ],\n      condition_data: null,\n\n      \n    }\n  },\n  beforeMount(){\n    this.condition_data = sysDatasetObj.getCondition()\n\n  },\n  mounted() {\n    this.width = this.$refs.projectionPanel.clientWidth\n    this.height = this.$refs.projectionPanel.clientHeight\n    // this.test()\n    this.draw_projection_chart()\n    this.draw_size_bar()\n    this.draw_height_bar()\n    this.draw_width_bar()\n    \n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      visPanelState: function(){\n        // d3.select('#distribute-chart').remove()\n        d3.select('#bar-size-1').remove()\n        d3.select('#bar-height-1').remove()\n        d3.select('#bar-width-1').remove()\n        // this.draw_projection_chart()\n        this.draw_size_bar()\n        this.draw_height_bar()\n        this.draw_width_bar()\n      }\n  },\n  computed: {\n    ...mapState([\n      'visPanelState'\n    ]),\n  },\n  created(){\n\n  },\n  methods: {\n    ...mapMutations([\n      'DATA_QUERY_INDEX'\n    ]),\n    test: function(){\n        var x = d3.scaleLinear()\n            .domain([0,1])\n            .range([0,500]);\n          var x2 = x.copy(); // reference.\n\n          var zoom = d3.zoom()\n            .scaleExtent([1, 10])\n            .on(\"zoom\", zoomed);\n\n          var svg = d3.select(\"svg\")\n            .call(zoom);\n            \n          var axis = d3.axisBottom().scale(x)\n            \n          var axisG = svg.append(\"g\")\n              .attr(\"transform\", \"translate(0,30)\")\n              .call(axis);\n            \n          function zoomed() {\n            x = d3.event.transform.rescaleX(x2)\n            axis.scale(x);\n            axisG.call(axis);\n          }\n    },\n    draw_projection_chart: function(){\n      let self = this\n      d3.csv('treeDataset/umap_GIN10_res.csv', d3.autoType)\n        .then(function(data) {\n          var margin = { top: 5, right: 5, bottom: 5, left: 5 },\n              width = self.$refs.projectionPanel.clientWidth - margin.left - margin.right,\n              height = self.$refs.projectionPanel.clientHeight - margin.top - margin.bottom;\n\n          var x = d3.scaleLinear()\n            .range([0, width]).nice();\n          var y = d3.scaleLinear()\n            .range([height, 0]).nice();\n          \n\n          var xMax = d3.max(data, function(d) { return d['x']; }) * 1.05,\n              xMin = d3.min(data, function(d) { return d['x']; }),\n              xMin = xMin > 0 ? 0 : xMin,\n              yMax = d3.max(data, function(d) { return d['y']; }) * 1.05,\n              yMin = d3.min(data, function(d) { return d['y']; }),\n              yMin = yMin > 0 ? 0 : yMin;\n          x.domain([xMin-2, xMax+2]);\n          y.domain([yMin-2, yMax+1]);\n\n          var xAxis = d3.axisBottom()\n              .scale(x)\n              .ticks(8)\n              .tickSize(-height);\n\n          var yAxis = d3.axisLeft()\n              .scale(y)\n              .ticks(8)\n              .tickSize(-width);\n\n          // var color = d3.scale.category10();\n\n          // var tip = d3.tip()\n          // .attr(\"class\", \"d3-tip\")\n          // .offset([-10, 0])\n          // .html(function(d) {\n          //   return xCat + \": \" + d[xCat] + \"<br>\" + yCat + \": \" + d[yCat];\n          // });\n\n          var zoomBeh = d3.zoom()\n            // .x(x)\n            // .y(y)\n            .scaleExtent([0, 50])\n            .on(\"zoom\", zoom);\n          \n          var svg = d3.select(self.$el).select('#projection-chart')\n            .append(\"g\")\n            .attr('id', 'distribute-chart')\n            .attr(\"transform\", \"translate(5, 5)\")\n            .call(zoomBeh);\n          //  svg.call(tip);\n          \n          svg.append(\"rect\")\n            .attr(\"class\", \"overview-rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n          \n          var xAxisG = svg.append(\"g\")\n            .classed(\"x axis\", true)\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n          \n          var yAxisG = svg.append(\"g\")\n            .classed(\"y axis\", true)\n            .call(yAxis)\n          \n          var objects = svg.append(\"svg\")\n            .attr(\"class\", \"overview-svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n          objects.append(\"svg:line\")\n              .classed(\"axisLine hAxisLine\", true)\n              .attr(\"x1\", 0)\n              .attr(\"y1\", 0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", 0)\n              .attr(\"transform\", \"translate(0,\" + height + \")\");\n          \n          objects.append(\"svg:line\")\n            .classed(\"axisLine vAxisLine\", true)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", height);\n          \n          var rMax = d3.max(data, function(d) { return d['n']; }),\n            rMin = d3.min(data, function(d) { return d['n']; });\n\n          let logScale = d3.scaleLog()\n            .domain([rMin, rMax])\n            .range([3, 10]);\n\n          objects.selectAll(\".dot\")\n            .data(data)\n          .enter()\n          .append(\"circle\")\n            .attr(\"class\",\"dot\")\n            .attr(\"id\", function(d) { return \"dot\"+parseInt(d['m'])})\n            .classed(\"dot-selected\", false)\n            .classed(\"dot-highlighted\", false)\n            .attr(\"transform\", transform)\n            .attr(\"m\", function(d) {return d['m']})\n            .attr(\"r\", function(d){\n              return logScale(d['n']);\n            })\n            .on('click', function(){\n                // d3.select(self.$el).selectAll(\".dot\").classed(\"dot-selected\", false)\n                // d3.select(this).classed('dot-selected', true)\n                self.DATA_QUERY_INDEX(parseInt(this.getAttribute(\"m\")))\n            });\n          \n          function zoom() {\n            let transformEvent = d3.event.transform\n            svg.selectAll(\".dot\")\n                .attr(\"transform\", d => transform(d, transformEvent));\n          }\n\n          function transform(d, transformEvent) {\n            let poxList = [x(d['x']), y(d['y'])]\n            if (typeof(transformEvent) !== 'object') {\n              return \"translate(\" + poxList[0] + \",\" + poxList[1] + \")\";\n            }\n            let posListUpdate = transformEvent.apply(poxList)\n            return \"translate(\" + posListUpdate[0] + \",\" + posListUpdate[1] + \")\";\n          }\n        })\n\n    },\n    draw_size_bar: function(){\n      var self = this\n      d3.csv('treeDataset/size.csv', d3.autoType)\n        .then(function(data) {\n            var margin = {top: 10, right: 10, bottom: 50, left: 35},\n              width = document.getElementById(\"bar-size\").clientWidth - margin.left - margin.right,\n              height = document.getElementById(\"bar-size\").clientHeight - margin.top - margin.bottom;\n\n            var highlightData = sysDatasetObj.gethighlightBar()\n            var highlightFlag = false\n            if('size' in highlightData){\n              highlightData = highlightData['size']\n              highlightFlag = true\n            }\n\n\n            // append the svg object to the body of the page\n            var svg = d3.select(self.$el).select(\"#bar-size\")\n                .append(\"g\")\n                .attr(\"id\", 'bar-size-1')\n                .attr(\"transform\",\n                      \"translate(\" + margin.left + \", \" +  margin.right + \")\");\n            \n            svg.append(\"text\")\n              .style(\"text-anchor\", \"middle\")\n              .attr(\"x\", width-20)\n              .attr(\"y\", 12)\n              // .attr(\"x\", width-100)\n              // .attr(\"y\", 10)\n              .attr(\"font-size\", \"15px\")\n              .attr(\"font-weight\", \"bolder\")\n              .attr(\"fill\", \"#666666\")\n              .text(\"Size:\");\n\n            var x = d3.scaleBand()\n              .range([ 0, width ])\n              .domain(data.map(function(d) { return d.x; }))\n              .padding(0.2);\n            svg.append(\"g\")\n              .attr(\"class\", \"x-axis\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x))\n              .selectAll(\"text\")\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n                .style(\"text-anchor\", \"end\");\n\n            // Add Y axis\n            var y = d3.scaleLinear()\n              .domain([0, 1200])\n              .range([ height, 0]);\n\n            svg.append(\"g\")\n              .call(d3.axisLeft(y).ticks(4));\n\n            // Bars\n            svg.selectAll(\"mybar\")\n              .data(data)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"#CCCCCC\")   \n\n            if(highlightFlag){\n              svg.selectAll(\"highlightBar\")\n              .data(highlightData)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"orange\")   \n            }\n\n\n            svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append('text')\n            .attr(\"class\", \"tree-name\")\n            .attr(\"x\", function(d) { return x(d.x); })\n            .attr(\"y\", function(d) { return y(d.y); })\n            .attr(\"dx\", \"10\")\n            .attr(\"dy\", '-1')\n            .attr(\"text-anchor\", \"middle\")\n            .text(function(d){return d.y;\n            })\n            .attr('font-size', \"10px\")\n            .attr('fill', '#808080');\n              \n        })\n    },\n    draw_height_bar: function(){\n      var self = this\n      d3.csv('treeDataset/height.csv', d3.autoType)\n        .then(function(data) {\n            var margin = {top: 10, right: 10, bottom: 50, left: 35},\n              width = document.getElementById(\"bar-height\").clientWidth - margin.left - margin.right,\n              height = document.getElementById(\"bar-height\").clientHeight - margin.top - margin.bottom;\n\n            // append the svg object to the body of the page\n            var svg = d3.select(self.$el).select(\"#bar-height\")\n                .append(\"g\")\n                .attr(\"id\", 'bar-height-1')\n                .attr(\"transform\",\n                      \"translate(\" + margin.left + \", \" +  margin.right + \")\");\n\n            var highlightData = sysDatasetObj.gethighlightBar()\n            var highlightFlag = false\n            if('height' in highlightData){\n              highlightData = highlightData['height']\n              highlightFlag = true\n            }\n            \n            svg.append(\"text\")\n              .style(\"text-anchor\", \"middle\")\n              .attr(\"x\", width-20)\n              .attr(\"y\", 12)\n              // .attr(\"x\", width-110)\n              // .attr(\"y\", 12)\n              .attr(\"font-size\", \"15px\")\n              .attr(\"font-weight\", \"bolder\")\n              .attr(\"fill\", \"#666666\")\n              .text(\"Height:\");\n\n            var x = d3.scaleBand()\n              .range([ 0, width ])\n              .domain(data.map(function(d) { return d.x; }))\n              .padding(0.2);\n            svg.append(\"g\")\n              .attr(\"class\", \"x-axis\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x))\n              .selectAll(\"text\")\n                .attr(\"transform\", \"translate(0,0)\")\n                .style(\"text-anchor\", \"middle\");\n\n            // Add Y axis\n            var y = d3.scaleLinear()\n              .domain([0, 1200])\n              .range([ height, 0]);\n\n            svg.append(\"g\")\n              .call(d3.axisLeft(y).ticks(4));\n\n            // Bars\n            svg.selectAll(\"mybar\")\n              .data(data)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"#CCCCCC\")\n            \n            if(highlightFlag){\n              svg.selectAll(\"highlightBar\")\n              .data(highlightData)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"orange\")   \n            }\n\n            svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append('text')\n            .attr(\"class\", \"tree-name\")\n            .attr(\"x\", function(d) { return x(d.x); })\n            .attr(\"y\", function(d) { return y(d.y); })\n            .attr(\"dx\", \"10\")\n            .attr(\"dy\", '-1')\n            .attr(\"text-anchor\", \"middle\")\n            .text(function(d){return d.y;\n            })\n            .attr('font-size', \"10px\")\n            .attr('fill', '#808080');\n              \n        })\n    },\n    draw_width_bar: function(){\n      var self = this\n      d3.csv('treeDataset/width.csv', d3.autoType)\n        .then(function(data) {\n            var margin = {top: 10, right: 10, bottom: 50, left: 35},\n              width = document.getElementById(\"bar-width\").clientWidth - margin.left - margin.right,\n              height = document.getElementById(\"bar-width\").clientHeight - margin.top - margin.bottom;\n\n            // append the svg object to the body of the page\n            var svg = d3.select(self.$el).select(\"#bar-width\")\n                .append(\"g\")\n                .attr(\"id\", 'bar-width-1')\n                .attr(\"transform\",\n                      \"translate(\" + margin.left + \", \" +  margin.right + \")\");\n            \n            var highlightData = sysDatasetObj.gethighlightBar()\n            var highlightFlag = false\n            if('width' in highlightData){\n              highlightData = highlightData['width']\n              highlightFlag = true\n            }\n\n            svg.append(\"text\")\n              .style(\"text-anchor\", \"middle\")\n              .attr(\"x\", width-20)\n              .attr(\"y\", 12)\n              // .attr(\"x\", width-105)\n              // .attr(\"y\", 12)\n              .attr(\"font-size\", \"15px\")\n              .attr(\"font-weight\", \"bolder\")\n              .attr(\"fill\", \"#666666\")\n              .text(\"Width:\");\n\n            var x = d3.scaleBand()\n              .range([ 0, width ])\n              .domain(data.map(function(d) { return d.x; }))\n              .padding(0.2);\n            svg.append(\"g\")\n              .attr(\"class\", \"x-axis\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x))\n              .selectAll(\"text\")\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n                .style(\"text-anchor\", \"end\");\n\n            // Add Y axis\n            var y = d3.scaleLinear()\n              .domain([0, 1200])\n              .range([ height, 0]);\n\n            svg.append(\"g\")\n              .call(d3.axisLeft(y).ticks(4));\n\n            // Bars\n            svg.selectAll(\"mybar\")\n              .data(data)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"#CCCCCC\")\n\n              if(highlightFlag){\n              svg.selectAll(\"highlightBar\")\n              .data(highlightData)\n              .enter()\n              .append(\"rect\")\n                .attr(\"x\", function(d) { return x(d.x); })\n                .attr(\"y\", function(d) { return y(d.y); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.y); })\n                .attr(\"fill\", \"orange\")   \n            }\n \n\n            svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append('text')\n            .attr(\"class\", \"tree-name\")\n            .attr(\"x\", function(d) { return x(d.x); })\n            .attr(\"y\", function(d) { return y(d.y); })\n            .attr(\"dx\", \"10\")\n            .attr(\"dy\", '-1')\n            .attr(\"text-anchor\", \"middle\")\n            .text(function(d){return d.y;\n            })\n            .attr('font-size', \"10px\")\n            .attr('fill', '#808080');\n              \n        })\n    },\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.overview-panel-view {\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  right: 0%;\n  bottom: 0%;\n  .dataset-part{\n    position:absolute;\n    top: 1%;\n    bottom: 90%;\n    left: 0%;\n    right: 0%;\n    .dataset-text{\n      position:absolute;\n      top: 6%;\n      left: 5%;\n      font-size: 1rem;\n      font-weight: bolder;\n      color: black;\n    }\n    .dataset-select{\n      position:absolute;\n      top: 3%;\n      left: 30%;\n    }\n    .el-icon-circle-plus-outline{\n      position:absolute;\n      top: 12%;\n      left: 83%;\n    }\n  }\n  .projection-text{\n      position:absolute;\n      top: 6%;\n      left: 5%;\n      font-size: 1rem;\n      font-weight: bolder;\n      color: black;\n  }\n  .projection-part{\n    position: absolute;\n    top: 8%;\n    bottom: 60%;\n    left: 0%;\n    right: 0%;\n  }\n  .distribution-text{\n      position:absolute;\n      top: 40%;\n      left: 5%;\n      font-size: 1rem;\n      font-weight: bolder;\n      color: black;\n  }\n  .distribution-part{\n    position: absolute;\n    top: 43%;\n    bottom: 2%;\n    left: 0%;\n    right: 0%;\n    #size{\n    .size-input1{\n        position: absolute;\n        top: 1%;\n        left: 70%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n    .size-connect{\n        position: absolute;\n        top: 0%;\n        left: 81.5%;\n        font-size: 1.5rem;\n        font-weight: 200;\n        text-anchor: middle;\n        color: #606266;\n    }\n    .size-input2{\n        position: absolute;\n        top: 1%;\n        left: 87%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n  }\n  #height{\n    .height-input1{\n        position: absolute;\n        top: 36%;\n        left: 70%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n    .height-connect{\n        position: absolute;\n        top: 35%;\n        left: 81.5%;\n        font-size: 1.5rem;\n        font-weight: 200;\n        text-anchor: middle;\n        color: #606266;\n    }\n    .height-input2{\n        position: absolute;\n        top: 36%;\n        left: 87%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n  }\n  #width{\n    .width-input1{\n        position: absolute;\n        top: 70%;\n        left: 70%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n    .width-connect{\n        position: absolute;\n        top: 69%;\n        left: 81.5%;\n        font-size: 1.5rem;\n        font-weight: 200;\n        text-anchor: middle;\n        color: #606266;\n    }\n    .width-input2{\n        position: absolute;\n        top: 70%;\n        left: 87%;\n        width: 10%;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n  }\n  }\n}\n\n</style>\n<style scoped lang=\"less\">\n  /deep/.el-input__inner{   /*或者 .s2>>>.el-input__inner  */\n    // background:rgba(0,0,0,0.2);    /*调整inner的背景色，透明*/\n    height: 30px;    /*调整inner的高度*/\n    width: 150px;\n    // border-radius: 1px;    /*输入框圆角值*/\n  }\n\n</style>\n<style lang=\"less\">\n\n.overview-rect {\n  fill: transparent;\n  shape-rendering: crispEdges;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: rgba(0, 0, 0, 0.1);\n  shape-rendering: crispEdges;\n}\n\n.axisLine {\n  fill: none;\n  shape-rendering: crispEdges;\n  stroke: rgba(0, 0, 0, 0.5);\n  stroke-width: 2px;\n}\n\n.dot {\n  fill: steelblue;\n  stroke: white;\n  stroke-width: 1px;\n  fill-opacity: 0.8;\n  &.dot-selected{\n    fill: orange !important;\n    fill-opacity: 1 !important;\n  }\n  &.dot-highlighted{\n    fill: red !important;\n    fill-opacity: 1 !important;\n  }\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n.x.axis text{\n  opacity: 0;\n  font-size: 0;\n}\n.y.axis text{\n  opacity: 0;\n  font-size: 0;\n}\n.axisLine{\n  opacity: 0;\n}\n</style>>"],"sourceRoot":"src/views"}]}