{"remainingRequest":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/RENodeListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/RENodeListView.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ht.mi/\\u7814\\u7A76\\u751F\\u8D44\\u6599/\\u4E2A\\u4EBA\\u8BBA\\u6587/tree_visual_query/RETree-main/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nimport REListNode from '@/views/REView/REComponents/REListNode.vue';\nexport default {\n  name: 'RENodeListView',\n  components: {\n    REListNode: REListNode\n  },\n  props: {},\n  data: function data() {\n    return {\n      nodeList: [],\n      refreshKey: 0\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex);\n  },\n  mounted: function mounted() {},\n  watch: {\n    displayMode: function displayMode() {\n      console.log('displayMode');\n    },\n    nodeListState: function nodeListState() {\n      this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex);\n      this.$forceUpdate();\n      this.refreshKey = (this.refreshKey + 1) % 2;\n    }\n  },\n  computed: _objectSpread({}, mapState(['displayMode', 'curRegexIndex', 'nodeListState'])),\n  methods: _objectSpread({}, mapMutations([]), {\n    keyCompute: function keyCompute(index) {\n      return 'nodeList' + index;\n    }\n  })\n};",{"version":3,"sources":["RENodeListView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAcA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,4CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA,EALA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,WAdA,yBAcA;AACA,SAAA,QAAA,GAAA,aAAA,CAAA,cAAA,CAAA,KAAA,aAAA,CAAA;AACA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA,CAEA,CAnBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,KAHA;AAIA,IAAA,aAAA,EAAA,yBAAA;AACA,WAAA,QAAA,GAAA,aAAA,CAAA,cAAA,CAAA,KAAA,aAAA,CAAA;AACA,WAAA,YAAA;AACA,WAAA,UAAA,GAAA,CAAA,KAAA,UAAA,GAAA,CAAA,IAAA,CAAA;AACA;AARA,GApBA;AA+BA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,aADA,EAEA,eAFA,EAGA,eAHA,CAAA,CADA,CA/BA;AAuCA,EAAA,OAAA,oBACA,YAAA,CAAA,EAAA,CADA;AAIA,IAAA,UAJA,sBAIA,KAJA,EAIA;AACA,aAAA,aAAA,KAAA;AACA;AANA;AAvCA,CAAA","sourcesContent":["<template>\n  <div class=\"node-list-view\">\n    <div class=\"node-list-container\" :key=\"refreshKey\">\n      <div v-for=\"(item, index) in nodeList\" :key=\"keyCompute(index)\" >\n        <div class=\"REListNode-container\" style=\"width:45px; height:45px\">\n          <REListNode :nodeExpression=\"item\" :key=\"item['key']\" ></REListNode>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport REListNode from '@/views/REView/REComponents/REListNode.vue';\n\nexport default {\n  name: 'RENodeListView',\n  components: {\n    REListNode\n  },\n  props: {\n\n  },\n  data() {\n    return {\n      nodeList: [],\n      refreshKey: 0,\n    }\n  },\n  beforeMount(){\n    this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      nodeListState: function() {\n        this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n        this.$forceUpdate()\n        this.refreshKey = (this.refreshKey + 1)%2\n      }\n\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'curRegexIndex',\n      'nodeListState'\n\n    ]),\n  },\n  methods: {\n    ...mapMutations([\n\n    ]),\n    keyCompute(index){\n      return 'nodeList' + index\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.node-list-view {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  .node-list-container{\n    position: absolute;\n    top: 5%;\n    left: 10.5%;\n    right:5%;\n    height: auto;\n    width: 90%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: auto;\n    .REListNode-container{\n      margin: 5px 5px 5px 5px;\n    }\n  }\n\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}