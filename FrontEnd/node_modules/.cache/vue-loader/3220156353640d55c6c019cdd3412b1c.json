{"remainingRequest":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/DataFlowView.vue?vue&type=template&id=8e1e8512&scoped=true&","dependencies":[{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/DataFlowView.vue","mtime":1648714649000},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660192275642},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"dataflow-view\" }, [\n    _c(\"div\", { attrs: { id: \"page\" } }, [\n      _c(\n        \"div\",\n        { attrs: { id: \"header\" } },\n        [\n          _c(\"span\", { staticClass: \"header-title\" }, [\n            _vm._v(\"\\n        Query Flow Panel\\n      \")\n          ]),\n          _c(\"el-divider\", { attrs: { direction: \"vertical\" } }),\n          _c(\n            \"el-tooltip\",\n            {\n              key: \"add\",\n              staticClass: \"labelIcon\",\n              attrs: { content: \"add component\", effect: \"light\" }\n            },\n            [\n              _c(\n                \"span\",\n                {\n                  staticClass: \"navitem\",\n                  on: {\n                    click: function($event) {\n                      _vm.visible = false\n                      _vm.addComponent(_vm.componentList[1])\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"el-icon-plus\" })]\n              )\n            ]\n          ),\n          _c(\n            \"el-tooltip\",\n            {\n              key: \"remove\",\n              staticClass: \"labelIcon\",\n              attrs: { content: \"remove operation\", effect: \"light\" }\n            },\n            [\n              _c(\n                \"span\",\n                {\n                  staticClass: \"navitem\",\n                  on: {\n                    click: function($event) {\n                      return _vm.$refs.chart.remove()\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"el-icon-delete\" })]\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"flowchart-container\" },\n            [\n              _c(\"flowchart\", {\n                ref: \"chart\",\n                attrs: {\n                  nodes: _vm.nodes,\n                  connections: _vm.connections,\n                  width: \"100%\",\n                  height: 500,\n                  readonly: false,\n                  excludeShownAttrArray: _vm.excludeShownAttrArray\n                },\n                on: {\n                  editnode: _vm.handleEditNode,\n                  editconnection: _vm.handleEditConnection,\n                  save: _vm.handleChartSave,\n                  addComponent: _vm.addComponent\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"description-dialog\", {\n            attrs: {\n              dialogTitle: _vm.descriptionDialogTitle,\n              descriptionObj: _vm.descriptionObj,\n              visible: _vm.descriptionDialogVisible\n            },\n            on: {\n              \"update:dialogTitle\": function($event) {\n                _vm.descriptionDialogTitle = $event\n              },\n              \"update:dialog-title\": function($event) {\n                _vm.descriptionDialogTitle = $event\n              },\n              \"update:descriptionObj\": function($event) {\n                _vm.descriptionObj = $event\n              },\n              \"update:description-obj\": function($event) {\n                _vm.descriptionObj = $event\n              },\n              \"update:visible\": function($event) {\n                _vm.descriptionDialogVisible = $event\n              },\n              adddescription: _vm.handleAddDescription\n            }\n          }),\n          _c(\"component-dialog\", {\n            attrs: { visible: _vm.componentDialogVisible },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.componentDialogVisible = $event\n              },\n              addcomponent: _vm.handleAddComponent\n            }\n          }),\n          _c(\"node-dialog\", {\n            attrs: {\n              visible: _vm.nodeDialogVisible,\n              node: _vm.nodeForm.target,\n              excludeShownAttrArray: _vm.excludeShownAttrArray\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.nodeDialogVisible = $event\n              },\n              \"update:node\": function($event) {\n                return _vm.$set(_vm.nodeForm, \"target\", $event)\n              }\n            }\n          }),\n          _c(\"connection-dialog\", {\n            attrs: {\n              visible: _vm.connectionDialogVisible,\n              connection: _vm.connectionForm.target,\n              operation: _vm.connectionForm.operation\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.connectionDialogVisible = $event\n              },\n              \"update:connection\": function($event) {\n                return _vm.$set(_vm.connectionForm, \"target\", $event)\n              }\n            }\n          })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}