{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/RENode.vue?vue&type=template&id=482a9c7e&scoped=true&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/RENode.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660192275642},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"g\", { staticClass: \"re-node\" }, [\n    _c(\"rect\", {\n      key: _vm.rectKey,\n      staticClass: \"node-rect\",\n      class: {\n        highlighted: _vm.getNodeHighlightState,\n        defined: _vm.getNodeDefineState\n      },\n      style: _vm.nodeStyle(),\n      attrs: { width: \"30\", height: \"30\", transform: _vm.nodeTransform },\n      on: { click: _vm.updateSelectedNode, dblclick: _vm.updateSelectedPart }\n    }),\n    _vm.nodeExpression[\"notFlag\"]\n      ? _c(\"path\", {\n          style: _vm.upperStyle(),\n          attrs: { d: _vm.notCompute },\n          on: { click: _vm.updateSelectedNode }\n        })\n      : _vm._e(),\n    _vm.nodeExpression[\"notFlag\"]\n      ? _c(\"circle\", {\n          style: _vm.notStyle(),\n          attrs: {\n            cx: _vm.nodeExpression[\"notX\"],\n            cy: _vm.nodeExpression[\"notY\"] + 27,\n            r: \"1.5\"\n          }\n        })\n      : _vm._e(),\n    _vm.nodeExpression[\"or\"]\n      ? _c(\"path\", {\n          attrs: { d: _vm.orCompute },\n          on: { click: _vm.updateSelectedNode }\n        })\n      : _vm._e(),\n    _vm.nodeExpression[\"branch\"]\n      ? _c(\"g\", [\n          _c(\"path\", {\n            attrs: { d: _vm.leftBracketBranchCompute },\n            on: { click: _vm.updateSelectedNode }\n          }),\n          _c(\"path\", {\n            attrs: { d: _vm.rightBracketBranchCompute },\n            on: { click: _vm.updateSelectedNode }\n          }),\n          _vm.checkBranchRepeat()\n            ? _c(\n                \"text\",\n                {\n                  staticStyle: { \"alignment-baseline\": \"hanging\" },\n                  attrs: { transform: _vm.branchRepeatTransform },\n                  on: { click: _vm.updateSelectedNode }\n                },\n                [\n                  _vm._v(\n                    \"\\n            \" +\n                      _vm._s(_vm.nodeExpression[\"branchRepeat\"][0]) +\n                      \"..\" +\n                      _vm._s(_vm.nodeExpression[\"branchRepeat\"][1]) +\n                      \"\\n        \"\n                  )\n                ]\n              )\n            : _vm._e()\n        ])\n      : _vm._e(),\n    _vm.checkRepeat()\n      ? _c(\n          \"text\",\n          {\n            staticStyle: { \"alignment-baseline\": \"hanging\" },\n            attrs: { transform: _vm.repeatTransform }\n          },\n          [\n            _vm._v(\n              \"\\n        \" +\n                _vm._s(_vm.nodeExpression[\"repeat\"][0]) +\n                \"..\" +\n                _vm._s(_vm.nodeExpression[\"repeat\"][1]) +\n                \"\\n    \"\n            )\n          ]\n        )\n      : _vm._e(),\n    _vm.checkRepeat()\n      ? _c(\"rect\", {\n          staticClass: \"repeat-rect\",\n          attrs: { width: \"15\", height: \"10\", transform: _vm.repeatTransform },\n          on: {\n            click: function($event) {\n              return _vm.updateRepeat()\n            }\n          }\n        })\n      : _vm._e(),\n    _vm.nodeExpression[\"upper\"]\n      ? _c(\"rect\", {\n          staticClass: \"upper-rect\",\n          style: _vm.upperStyle(),\n          attrs: { width: \"10\", height: \"10\", transform: _vm.upperTransform },\n          on: {\n            click: function($event) {\n              return _vm.updateRepeat()\n            }\n          }\n        })\n      : _vm._e(),\n    _vm.nodeExpression[\"selected\"]\n      ? _c(\"path\", { attrs: { d: _vm.selectedCompute } })\n      : _vm._e(),\n    _c(\n      \"text\",\n      {\n        staticClass: \"node-name\",\n        style: _vm.nameStyle(),\n        attrs: {\n          \"v-if\": _vm.checkName(),\n          x: _vm.textX,\n          y: _vm.textY,\n          \"text-anchor\": \"middle\",\n          \"alignment-baseline\": \"middle\"\n        },\n        on: { click: _vm.updateSelectedNode }\n      },\n      [_vm._v(\"\\n        \" + _vm._s(_vm.nodeExpression[\"nodeName\"]) + \"\\n    \")]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}