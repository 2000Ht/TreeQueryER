{"remainingRequest":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/src/views/DataFlowView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/src/views/DataFlowView.vue","mtime":1700550548571},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapState, mapMutations } from 'vuex';\nimport Flowchart from \"./flowchart/Flowchart\";\nimport { getComponentKey } from '../utils/componentkey';\n\n\nexport default {\n  name: 'DataFlowView',\n  components: {\n    Flowchart,\n  },\n  props: {\n\n  },\n  data() {\n      return {\n        nodes: [],\n        connections: [],\n        nodeForm: { target: null },\n        connectionForm: { target: null, operation: null },\n        defaultX: 10,\n        defaultY: 55,\n        defaultWidth: 45,\n        defaultHeight: 45,\n        componentList: [\n          {type: 'data', color: '#fdbf6f', name: 'data'},\n          {type: 'query', color: '#ff7f00', name: 'query'},\n          {type: 'vis', color: '#cab2d6', name: 'vis'},\n        ],\n        excludeShownAttrArray: ['type', 'color', 'render', 'width', 'height', 'x', 'y', 'name', 'id'],\n        visible: false,\n\n      }\n  },\n async mounted() {},\n    computed: {\n    ...mapState([\n      'initialData',\n      'selectedDom'\n    ]),\n   \n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_CURRENT_REGEX',\n      'DELETE_REGEX_LIST',\n      'SHOW_REVIEW',\n      'SHOW_VISVIEW',\n      'UPDATE_CURRENT_DATA',\n      'UPDATE_REVIEW_DATA',\n      'UPDATE_REPEAT_STATE'\n    ]),\n    concatClick(){\n      var branch= sysDatasetObj.getSelectedBranch()\n      var index = sysDatasetObj.getSelectedBranchIndex()\n      var newNode =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            }   \n      branch['composition'].splice(index+1, 0, newNode)\n    },\n    upperClick(){\n      this.UPDATE_REPEAT_STATE(true)\n    },\n    orClick(){\n      var Or = sysDatasetObj.getSelectedOr()\n      var index = sysDatasetObj.getSelectedOrIndex()\n      if(index == -1){\n        Or['type'] = 'or'\n        Or['composition'] = [\n          {\n            'type': 'node',\n            'repeat': [1, 1],\n            'data': JSON.parse(JSON.stringify(Or['data'])),\n            'nodeName': Or['nodeName'],\n            'nodeColor': Or['nodeColor'],\n            'key': getComponentKey()\n          },\n          {\n            'type': 'node',\n            'repeat': [1, 1],\n            'nodeName': '.',\n            'nodeColor': '#ABABAB',\n            'data': {\n\n            },\n            'key': getComponentKey()\n          }\n        ]\n        if('definition' in Or && Or['definition']){\n          Or['composition'][0]['definition'] = Or['definition']\n          Or['composition'][0]['nodeName'] = Or['nodeName']\n          Or['composition'][0]['nodeColor'] = Or['nodeColor']\n        }\n        if('notFlag' in Or && Or['notFlag']){\n          Or['composition'][0]['notFlag'] = Or['notFlag']\n        }\n        delete Or['data']\n      }\n      else if(index != -2){\n              var newNode =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            }   \n        Or['composition'].splice(index+1, 0, newNode)\n      }\n    },\n    notClick(){\n      if(!('notFlag' in this.selectedDom)){\n        this.selectedDom['notFlag'] = true\n      }\n      else{\n        this.selectedDom['notFlag'] = !this.selectedDom['notFlag']\n      }\n\n    },\n    eleNodeRemove(){\n      if('eleFlag' in this.selectedDom && this.selectedDom['eleFlag']){\n        sysDatasetObj.deleteEleNode()\n      }\n    },\n    handleEditNode(node) {\n      // edit the detailed information of nodes when clicking \"edit\" button\n      // specifically, show the dialog of editing nodes' detailed information\n      this.nodeForm.target = node;\n      if(node['type'] == 'query'){\n        //this.nodeDialogVisible = true;\n        this.UPDATE_REVIEW_DATA()\n        this.SHOW_REVIEW()    \n      }\n    },\n    handleAddComponent(componentObj) {\n      // The component object contains\n      // 1. name\n      // 2. type\n      // 3. color\n      // 4. many attributes in attribute list [['attribute1'], ['attribute2'], ...]\n      this.componentList.push(componentObj)\n    },\n\n    addComponent(component) {\n      // add new component in the component list\n      let defaultX = this.defaultX, defaultY = this.defaultY, \n          defaultWidth = this.defaultWidth, defaultHeight = this.defaultHeight\n      let initComponent = {}\n      // id, x, y, width, height, name, type, and color are required attributes\n      initComponent['id'] = +new Date()\n      initComponent['x'] = defaultX\n      initComponent['y'] = defaultY\n      initComponent['width'] = defaultWidth\n      initComponent['height'] = defaultHeight\n      // defualt attributes are name, type, and color\n      initComponent['name'] = component.name\n      initComponent['type'] = component.type\n      initComponent['color'] = component.color\n      if(component['type'] == 'query'){   \n        initComponent['regex'] =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n          }  \n        initComponent['regexIndex'] = sysDatasetObj.getRegexIndex() \n      }\n      else if(component['type'] == 'vis'){\n          initComponent['regex'] = {\n          'type': 'branch',\n          'key': getComponentKey(),\n          'repeat': [1 ,1],\n          'composition': [\n            {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            },\n            ]\n          }\n          initComponent['regexIndex'] = sysDatasetObj.getRegexIndex()   \n      }\n\n      // the attributes in the attribute list is the optional attribute\n      if (typeof(component.attributes) !== 'undefined') {\n        for (let i = 0; i < component.attributes.length; i++) {\n          let attrName = component.attributes[i]\n          initComponent[attrName] = \"\"\n        }\n      }\n      this.$refs.chart.add(initComponent)\n    },\n\n  },\n};\n",{"version":3,"sources":["DataFlowView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"DataFlowView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"dataflow-view\">\n      <div id=\"page\">\n      <div id=\"header\">\n        <span class=\"header-title\">\n          Visual Editor\n        </span>\n\n      </div>\n      <div class=\"container\">\n        <div class=\"flowchart-container\">\n          <flowchart\n            ref=\"chart\"\n            :nodes=\"nodes\"\n            :connections=\"connections\"\n            @editnode=\"handleEditNode\"\n            :width=\"'100%'\"\n            :height=\"500\"\n            :readonly=\"false\"\n            :excludeShownAttrArray=\"excludeShownAttrArray\"\n            >\n          </flowchart>\n        </div>\n\n      </div>\n            <div id=\"btn-list\">\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"addNode\" @click=\"addComponent(componentList[1])\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\" style=\"fill:#f8f8f8;\"/><rect class=\"cls-2\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\"/><path class=\"cls-3\" d=\"M46.35,53.82h-16v-16a2,2,0,0,0-4,0v16h-16a2,2,0,0,0,0,4h16v16a2,2,0,0,0,4,0v-16h16a2,2,0,0,0,0-4Z\"/><text class=\"cls-4\" transform=\"translate(48.35 82.22)\" style=\"font-size:72px;font-family:Lato-Italic, Lato;font-style:italic;\">N</text></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"addBranch\" @click=\"addComponent(componentList[2])\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><defs><clipPath id=\"clip-path\"><rect class=\"cls-1\" x=\"48.8\" y=\"22.82\" width=\"48.75\" height=\"65\"/></clipPath></defs><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect style=\"fill:#f8f8f8;\" class=\"cls-2\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect style=\"stroke:#6b6b6b;stroke-miterlimit:10; fill:none;\" class=\"cls-3\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><g class=\"cls-4\" style=\"clip-path:url(#clip-path);\"><path class=\"cls-5\" style=\"fill:#2c2c2c;\" d=\"M56.94,76.09a3.55,3.55,0,1,1-3.55,3.54,3.55,3.55,0,0,1,3.55-3.54ZM69.62,30.93a3.54,3.54,0,1,1,3.55,3.55,3.55,3.55,0,0,1-3.55-3.55ZM93,79.63a3.55,3.55,0,1,1-3.55-3.54A3.55,3.55,0,0,1,93,79.63Zm-44.13,0a8.12,8.12,0,1,0,10.39-7.79V63.72l14-13.85,14,13.88v8.12a8.12,8.12,0,1,0,4.57,0v-10L75.5,45.68V38.81a8.11,8.11,0,1,0-4.58,0v6.81L54.69,61.86v10a8.12,8.12,0,0,0-5.87,7.79Z\"/></g><path class=\"cls-5\" d=\"M45.05,53.82h-16v-16a2,2,0,0,0-4,0v16h-16a2,2,0,0,0,0,4h16v16a2,2,0,0,0,4,0v-16h16a2,2,0,0,0,0-4Z\"/></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"And\" @click=\"concatClick\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" style=\"fill:#f8f8f8;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect class=\"cls-2\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><path class=\"cls-3\" style=\"fill:#2c2c2c;\" d=\"M77.57,60.82l4.49,4.76q-4.86,4.31-7.78,6.59,5.31,5.31,12.45,13H77.57l-8.42-8.78q-8.24,6.23-13.37,8.33a29.15,29.15,0,0,1-11.17,2.1,17.2,17.2,0,0,1-12.13-4.35,13.93,13.93,0,0,1-4.71-10.66A18.11,18.11,0,0,1,32,60.23a69.48,69.48,0,0,1,11.62-11A55.53,55.53,0,0,1,36.79,40a13.51,13.51,0,0,1-1.7-6.27,10.49,10.49,0,0,1,4.21-8.56,16.53,16.53,0,0,1,10.58-3.34,15.09,15.09,0,0,1,10.39,3.57,10.86,10.86,0,0,1,4,8.33A13.57,13.57,0,0,1,62,40.86q-2.33,3.77-9.2,9.53L69.6,67.69c2.71-2.24,5.36-4.52,8-6.87ZM48.73,45.44q8.88-7,8.88-11.72a4.9,4.9,0,0,0-2.24-4,9.17,9.17,0,0,0-5.68-1.69A9.55,9.55,0,0,0,44,29.7,5.07,5.07,0,0,0,41.68,34q0,3.66,7,11.44Zm-.82,8.79q-8.52,6.41-11,10.12a12.76,12.76,0,0,0-2.52,7.14,8.41,8.41,0,0,0,3.21,6.31A10.69,10.69,0,0,0,45,80.69a20.33,20.33,0,0,0,8.51-2,72,72,0,0,0,11.17-6.91Z\"/></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Or\" @click=\"orClick\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" style=\"fill:#f8f8f8;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect class=\"cls-2\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><path style=\"fill:#2c2c2c;\" class=\"cls-3\" d=\"M49.3,23.32v65h-5v-65Zm15,0v65h-5v-65Z\"/></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Not\" @click=\"notClick\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" style=\"fill:#f8f8f8;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect class=\"cls-2\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><path class=\"cls-3\" style=\"fill:#2c2c2c;\" d=\"M52.17,64.48a4,4,0,0,0,7.8,0l2.6-35.75a6.51,6.51,0,0,0-6.5-6.5,6.67,6.67,0,0,0-6.5,7.15Zm3.9,9.75a6.5,6.5,0,1,0,6.5,6.5,6.15,6.15,0,0,0-6.5-6.5Z\"/></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Repeat\" @click=\"upperClick\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" style=\"fill:#f8f8f8;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect class=\"cls-2\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><text class=\"cls-3\" style=\"font-size:72px;font-family:Lato-Italic, Lato;font-style:italic;\" transform=\"translate(19.01 80.72)\">N</text><text class=\"cls-4\" transform=\"translate(72.28 67.19)\" style=\"fill:#2c2c2c;font-size:60px;font-family:Lato-Bold, Lato;font-weight:700;\">*</text></g></g></svg>\n              <svg class=\"btnIcon\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Delete\" @click=\"$refs.chart.remove(); eleNodeRemove()\" viewBox=\"0 0 108.64 108.64\" width=\"35px\" height=\"35px\"><g id=\"图层_2\" data-name=\"图层 2\"><g id=\"图层_1-2\" data-name=\"图层 1\"><rect class=\"cls-1\" style=\"fill:#f8f8f8;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><rect class=\"cls-2\" style=\"fill:none;stroke:#6b6b6b;stroke-miterlimit:10;\" x=\"0.5\" y=\"0.5\" width=\"107.64\" height=\"107.64\" rx=\"10\"/><path class=\"cls-3\" d=\"M62.42,73.4a2.32,2.32,0,0,1-2.32-2.33V45.53a2.32,2.32,0,1,1,4.64,0V71.06a2.33,2.33,0,0,1-2.32,2.34Z\"/><path class=\"cls-3\" d=\"M48.49,73.4a2.32,2.32,0,0,1-2.32-2.33V45.53a2.32,2.32,0,0,1,4.64,0V71.06a2.33,2.33,0,0,1-2.32,2.34Z\"/><path class=\"cls-3\" style=\"fill:#2c2c2c;\" d=\"M85.64,33.93H74V29.28a6.94,6.94,0,0,0-6.92-7H43.85a7,7,0,0,0-7,7v4.65H25.28a2.32,2.32,0,0,0,0,4.64H85.64a2.32,2.32,0,0,0,0-4.64ZM41.53,29.28A2.33,2.33,0,0,1,43.85,27H67.12a2.27,2.27,0,0,1,2.27,2.32v4.65H41.53Z\"/><path class=\"cls-3\" d=\"M71.72,87.32H39.22a7,7,0,0,1-7-7V45.51a2.32,2.32,0,1,1,4.64,0V80.36a2.33,2.33,0,0,0,2.32,2.32H71.73a2.32,2.32,0,0,0,2.32-2.32V45.59a2.32,2.32,0,1,1,4.64,0V80.36a7,7,0,0,1-7,7Z\"/></g></g></svg>\n          </div>\n  </div>\n  </div>\n  \n</template>\n\n\n<script>\n\nimport { mapState, mapMutations } from 'vuex';\nimport Flowchart from \"./flowchart/Flowchart\";\nimport { getComponentKey } from '../utils/componentkey';\n\n\nexport default {\n  name: 'DataFlowView',\n  components: {\n    Flowchart,\n  },\n  props: {\n\n  },\n  data() {\n      return {\n        nodes: [],\n        connections: [],\n        nodeForm: { target: null },\n        connectionForm: { target: null, operation: null },\n        defaultX: 10,\n        defaultY: 55,\n        defaultWidth: 45,\n        defaultHeight: 45,\n        componentList: [\n          {type: 'data', color: '#fdbf6f', name: 'data'},\n          {type: 'query', color: '#ff7f00', name: 'query'},\n          {type: 'vis', color: '#cab2d6', name: 'vis'},\n        ],\n        excludeShownAttrArray: ['type', 'color', 'render', 'width', 'height', 'x', 'y', 'name', 'id'],\n        visible: false,\n\n      }\n  },\n async mounted() {},\n    computed: {\n    ...mapState([\n      'initialData',\n      'selectedDom'\n    ]),\n   \n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_CURRENT_REGEX',\n      'DELETE_REGEX_LIST',\n      'SHOW_REVIEW',\n      'SHOW_VISVIEW',\n      'UPDATE_CURRENT_DATA',\n      'UPDATE_REVIEW_DATA',\n      'UPDATE_REPEAT_STATE'\n    ]),\n    concatClick(){\n      var branch= sysDatasetObj.getSelectedBranch()\n      var index = sysDatasetObj.getSelectedBranchIndex()\n      var newNode =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            }   \n      branch['composition'].splice(index+1, 0, newNode)\n    },\n    upperClick(){\n      this.UPDATE_REPEAT_STATE(true)\n    },\n    orClick(){\n      var Or = sysDatasetObj.getSelectedOr()\n      var index = sysDatasetObj.getSelectedOrIndex()\n      if(index == -1){\n        Or['type'] = 'or'\n        Or['composition'] = [\n          {\n            'type': 'node',\n            'repeat': [1, 1],\n            'data': JSON.parse(JSON.stringify(Or['data'])),\n            'nodeName': Or['nodeName'],\n            'nodeColor': Or['nodeColor'],\n            'key': getComponentKey()\n          },\n          {\n            'type': 'node',\n            'repeat': [1, 1],\n            'nodeName': '.',\n            'nodeColor': '#ABABAB',\n            'data': {\n\n            },\n            'key': getComponentKey()\n          }\n        ]\n        if('definition' in Or && Or['definition']){\n          Or['composition'][0]['definition'] = Or['definition']\n          Or['composition'][0]['nodeName'] = Or['nodeName']\n          Or['composition'][0]['nodeColor'] = Or['nodeColor']\n        }\n        if('notFlag' in Or && Or['notFlag']){\n          Or['composition'][0]['notFlag'] = Or['notFlag']\n        }\n        delete Or['data']\n      }\n      else if(index != -2){\n              var newNode =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            }   \n        Or['composition'].splice(index+1, 0, newNode)\n      }\n    },\n    notClick(){\n      if(!('notFlag' in this.selectedDom)){\n        this.selectedDom['notFlag'] = true\n      }\n      else{\n        this.selectedDom['notFlag'] = !this.selectedDom['notFlag']\n      }\n\n    },\n    eleNodeRemove(){\n      if('eleFlag' in this.selectedDom && this.selectedDom['eleFlag']){\n        sysDatasetObj.deleteEleNode()\n      }\n    },\n    handleEditNode(node) {\n      // edit the detailed information of nodes when clicking \"edit\" button\n      // specifically, show the dialog of editing nodes' detailed information\n      this.nodeForm.target = node;\n      if(node['type'] == 'query'){\n        //this.nodeDialogVisible = true;\n        this.UPDATE_REVIEW_DATA()\n        this.SHOW_REVIEW()    \n      }\n    },\n    handleAddComponent(componentObj) {\n      // The component object contains\n      // 1. name\n      // 2. type\n      // 3. color\n      // 4. many attributes in attribute list [['attribute1'], ['attribute2'], ...]\n      this.componentList.push(componentObj)\n    },\n\n    addComponent(component) {\n      // add new component in the component list\n      let defaultX = this.defaultX, defaultY = this.defaultY, \n          defaultWidth = this.defaultWidth, defaultHeight = this.defaultHeight\n      let initComponent = {}\n      // id, x, y, width, height, name, type, and color are required attributes\n      initComponent['id'] = +new Date()\n      initComponent['x'] = defaultX\n      initComponent['y'] = defaultY\n      initComponent['width'] = defaultWidth\n      initComponent['height'] = defaultHeight\n      // defualt attributes are name, type, and color\n      initComponent['name'] = component.name\n      initComponent['type'] = component.type\n      initComponent['color'] = component.color\n      if(component['type'] == 'query'){   \n        initComponent['regex'] =  {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n          }  \n        initComponent['regexIndex'] = sysDatasetObj.getRegexIndex() \n      }\n      else if(component['type'] == 'vis'){\n          initComponent['regex'] = {\n          'type': 'branch',\n          'key': getComponentKey(),\n          'repeat': [1 ,1],\n          'composition': [\n            {\n              'type': 'node',\n              'repeat': [1, 1],\n              'key': getComponentKey(),\n              'nodeName': '.',\n              'nodeColor': '#ABABAB',\n              'data': {\n\n              }\n            },\n            ]\n          }\n          initComponent['regexIndex'] = sysDatasetObj.getRegexIndex()   \n      }\n\n      // the attributes in the attribute list is the optional attribute\n      if (typeof(component.attributes) !== 'undefined') {\n        for (let i = 0; i < component.attributes.length; i++) {\n          let attrName = component.attributes[i]\n          initComponent[attrName] = \"\"\n        }\n      }\n      this.$refs.chart.add(initComponent)\n    },\n\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n@header-height: 1rem;\n@component-div-width: 0px;\n@description-div-width: 0px;\n@description-div-margin: 10px;\n.dataflow-view {\n  height: 100%;\n  width: 100%;\n  #page{\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(255, 255, 255);\n  overflow-y: hidden;\n  #header {\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 2rem;\n    line-height: @header-height;\n    font-size: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    .header-title {\n      margin-left: 5px;\n      font-size: 1rem;\n      font-weight: bolder;\n      color: black;\n      top: 5px;\n      left: 5px;\n    }\n    .navitem {\n      display: inline-block;\n      cursor: pointer;\n      margin: 0px 10px;\n      padding: 2px;\n      &:hover {\n        background: #eeeeee;\n      }\n    }\n    .navtitle {\n      cursor: pointer;\n    }\n    .el-button{\n      font-family:element-icons !important;\n      font-weight:330 !important;\n      font-size:25px !important;\n      color:white !important;\n    }\n  }\n  .container {\n    position: absolute;\n    top: 2rem;\n    width: 100%;\n    bottom: 0%;\n    left: 0%;\n    .flowchart-container {\n      position: absolute;\n      right: 0;\n      top: 0%;\n      bottom: 0%;\n      left:0;\n    }\n  }\n  #btn-list{\n    position: absolute;\n    right: 10px;\n    top: 70px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n      .btnIcon{\n          margin-top: 10px;\n          cursor: pointer;\n        }\n    }\n  }\n}\n#toolbar {\n  margin-bottom: 10px;\n}\n\n.title {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n\n.subtitle {\n  margin-bottom: 10px;\n}\n\n#toolbar > button {\n  margin-right: 4px;\n}\n</style>\n\n\n\n"]}]}