{"remainingRequest":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/VisView.vue?vue&type=style&index=0&id=4768c31b&scoped=true&lang=less&","dependencies":[{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/VisView.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/css-loader/index.js","mtime":1660192274937},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660192275629},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1660192275315},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1660192275256},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@vis-view-btns-height: 2rem;\n@vis-view-btns-lineheight: 1.8rem;\n\nhtml {\n  font-size: 100%;\n}\n.vis-view {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  position: absolute;\n  top: 0%;\n  bottom: 0%;\n  left: 0%;\n  right: 0%;\n  .vis-content-container {\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    bottom: 0%;\n    right: 0%;\n    .visualization-component {\n      position: absolute;\n      top: 0%;\n      left: 0%;\n      right: 93%;\n      bottom: 0%;\n      justify-content: center;\n      // display: flex;\n      flex-direction: column;\n      border-right: 1px #ddd solid;\n      .hierarchy-visualizations{\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: 2rem;\n        width: 100%;\n        border-bottom: 1px solid rgb(211, 210, 210);\n        .hierarchy-visualizations-container {\n          // display: flex;\n          flex-direction: row;\n          justify-content: center;\n          // padding-left: 1rem;\n          align-items: center;\n          padding-top: 6.6px;\n          .hierarchy-panel-header {\n            font-weight: bold;\n          }\n        }\n      }\n      .hierarchy-visualizations-buttons{\n        position: absolute;\n        top: @vis-view-btns-height;\n        width: 100%;\n        bottom: 0%;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        .quarter-div{\n          height: 45px;\n          width: 80px;\n          margin-top: 8px;\n          border: 1.4px dashed gray;\n        }\n      }\n    }\n    .visualization-static-container {\n      position: absolute;\n      top: 0%;\n      bottom: 0%;\n      left: 7%;\n      right: 20%;\n      // overflow-y: auto;\n      .vis-view-btns{\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: @vis-view-btns-height;\n        width: 100%;\n        border-bottom: 1px solid gray;\n        .vis-view-btns-container {\n          display: flex;\n          flex-direction: row;\n          // justify-content: center;\n          padding-left: 1rem;\n          align-items: center;\n          // padding-top: 2px;\n          .panel-header {\n            font-weight: bold;\n          }\n          .configuration-container {\n            margin: 0px 10px;\n          }\n          .dataInText{\n            line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            margin: 0px 15px;\n          }\n          .dropDownBtnIn{\n            /deep/.el-button--primary {\n              border-color: #DCDFE6 !important;\n              width: 60px !important;\n            }\n          }\n          .dataOutText{\n            line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            margin: 0px 15px;\n          }\n          .dropDownBtnOut{\n            /deep/.el-input__inner{\n              height: 29px;\n              width: 130px;\n            }\n          }\n          .highLightChoose{\n            // padding-top: 0.5rem;\n            // line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n          }\n          .highLightText{\n            line-height: @vis-view-btns-lineheight;\n            vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n          }\n        }\n      }\n      .visualization-container {\n        position: absolute;\n        top: @vis-view-btns-height;\n        width: 100%;\n        bottom: 0%;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        .grid-content {\n          width: 100%;\n          height: 100%;\n          border-top: #cccccc 1px solid;\n          background: white;\n          position: relative;\n        }\n      }\n    }\n    .vis-attribute-view{\n      position: absolute;\n      top: 0%;\n      bottom: 0%;\n      left: 80%;\n      right: 0%;\n      border-left: 1px #ddd solid;\n      .select-attrs-vis {\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: 2rem;\n        width: 100%;\n        border-bottom: 1px solid rgb(211, 210, 210);\n        .select-attrs-vis-container{\n          // display: flex;\n          flex-direction: row;\n          justify-content: center;\n          // padding-left: 1rem;\n          align-items: center;\n          padding-top: 2.5px;\n          .attrs-vis-panel-header {\n            font-weight: bold;\n          }\n\n        }\n      }\n    }\n  }\n}\n  .el-select {\n    display: inline-block;\n    position: relative;\n    top: 8%;\n    left: 0%;\n    // height: 2rem;\n  }\n  .el-header, .el-footer {\n    background-color: rgb(238, 241, 246);\n    color: #333;\n    text-align: center;\n    line-height: 60px;\n  }\n  \n  .el-aside {\n    background-color: rgb(238, 241, 246);\n    color: #333;\n    text-align: center;\n    line-height: 400px;\n    margin: 5px 0;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n  \n  .el-main {\n    background-color: #ffffff;\n    color: #333;\n    text-align: center;\n    line-height: 160px;\n    margin: 5px 0;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n  .el-button+.el-button {\n    margin-left: 0px;\n  }\n  .el-row {\n    margin-bottom: 20px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  .el-col {\n    border-radius: 4px;\n  }\n  .bg-purple-dark {\n    background: #99a9bf;\n  }\n  .bg-purple {\n    background: white;\n  }\n  .bg-purple-light {\n    background: #e5e9f2;\n  }\n  .grid-content-1 {\n    border-radius: 4px;\n    font-size: 45px;\n    // color: #FF7F50;\n    // color: black;\n    color: rgb(94, 94, 94);\n    // color: #5F9EA0;\n  }\n  .grid-content-2 {\n    border-radius: 4px;\n    font-size: 45px;\n    color: #4b78a5;\n  }\n  .row-bg {\n    padding: 10px 0;\n    background-color: #f9fafc;\n  }\n\n  /deep/.el-icon-nodelinktree{\n    background: url(../assets/treevis/nodelinktree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-nodelinkdendrogramtree{\n    background: url(../assets/treevis/nodelinkdendrogramtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-radialtree{\n    background: url(../assets/treevis/radialtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-radialdendrogramtree{\n    background: url(../assets/treevis/radialdendrogramtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-icicleplot{\n    background: url(../assets/treevis/icicleplot.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-indentationtree{\n    background: url(../assets/treevis/indentationtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-iptp{\n    background: url(../assets/treevis/iptp.png) center no-repeat;\n    background-size: cover;\n  }\n\n",{"version":3,"sources":["VisView.vue"],"names":[],"mappingsivfile":"VisView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"vis-view\">\n      <div class = \"vis-content-container\">\n        <div class = \"visualization-component\" >\n            <!-- <el-button class=\"RadialDendrogramTree-image\" @click=\"RadialDendrogramTreeClick()\">RadialDend-Tree</el-button>\n            <el-button class=\"RadialTree-image\" @click=\"RadialTreeClick()\">RadialTree</el-button>\n            \n            <el-button class=\"NodeLinkTree-image\" icon=\"myicon el-icon-nodelinktree\" @click=\"NodeLinkTreeClick()\"></el-button>\n\n            <el-button class=\"NodeLinkDendrogramTree-image\" @click=\"NodeLinkDendrogramTreeClick()\">NodeLinkDend-Tree</el-button>\n            <el-button class=\"IciclePlot-image\" @click=\"IciclePlotClick()\">IciclePlot</el-button>\n            <el-button class=\"IndentationTree-image\" @click=\"IndentationTreeClick()\">IndentationTree</el-button>\n            <el-button class=\"IPTP-image\" @click=\"IPTPClick()\">IPTP</el-button> -->\n            <div class=\"hierarchy-visualizations\">\n              <div class=\"hierarchy-visualizations-container\">\n                <span class=\"hierarchy-panel-header\">\n                  Tree Vis\n                </span>\n              </div>\n            </div>\n            <div class=\"hierarchy-visualizations-buttons\">\n              <div class=\"quarter-div el-icon-nodelinktree\" @click=\"NodeLinkTreeClick()\"></div>\n              <div class=\"quarter-div el-icon-nodelinkdendrogramtree\" @click=\"NodeLinkDendrogramTreeClick()\"></div>\n              <div class=\"quarter-div el-icon-radialtree\" @click=\"RadialTreeClick()\"></div>\n              <div class=\"quarter-div el-icon-radialdendrogramtree\" @click=\"RadialDendrogramTreeClick()\"></div>\n              <div class=\"quarter-div el-icon-icicleplot\" @click=\"IciclePlotClick()\"></div>\n              <div class=\"quarter-div el-icon-indentationtree\" @click=\"IndentationTreeClick()\"></div>\n              <div class=\"quarter-div el-icon-iptp\" @click=\"IPTPClick()\"></div>\n            </div>\n        </div>\n        <div class=\"visualization-static-container\" ref=\"visualization_static_container_ref\">\n          <div class=\"vis-view-btns\">\n            <div class=\"vis-view-btns-container\">\n                <span class=\"panel-header\">\n                  Visualization Panel\n                </span>\n                <el-divider direction=\"vertical\"></el-divider>\n                <span class=\"configuration-container\">\n                  <span class=\"dataInText\">In:</span>\n                  <!-- <span class=\"highLightText\">HighLight:</span> -->\n                  <el-dropdown size=\"mini\" split-button type=\"primary\" @command=\"handleCommandIn\" class=\"dropDownBtnIn\">\n                    {{dropDownInTitle}}\n                    <el-dropdown-menu slot=\"dropdown\">\n                      <el-dropdown-item v-for=\"(item, index) in dropDownInList\" :key=\"item\" :command=\"index\">{{item}}</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n                </span>\n                <!-- <el-dropdown size=\"mini\" split-button type=\"primary\" @command=\"handleCommandOut\" class=\"dropDownBtnOut\">\n                  {{dropDownOutTitle}}\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item v-for=\"(item, index) in dropDownOutList\" :key=\"item\" :command=\"index\">{{item}}</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown> -->\n                <span class=\"configuration-container\">\n                  <span class=\"dataOutText\">Out:</span>\n                  <el-cascader\n                      class=\"dropDownBtnOut\"\n                      v-model=\"outListValue\"\n                      :options=\"treeDataOutListOptions\"\n                      @change=\"handleCommandOut\"\n                      placeholder = \"\"\n                      :key = \"casderKey\">\n                  </el-cascader>\n                </span>\n                <span class=\"configuration-container\">\n                  <span class=\"dataOutText\">Underlying Data:</span>\n                  <el-radio-group v-model=\"backgroundFlag\" class=\"highLightChoose\" @change=\"backgroundChange()\">\n                    <el-radio :label=\"'wholeTree'\" :disabled=\"wholeTreeFlag\">wholeTree</el-radio>\n                    <el-radio :label=\"'treeIn'\" :disabled=\"treeInFlag\">treeIn</el-radio>\n                    <el-radio :label=\"'treeOut'\" :disabled=\"treeOutFlag\">treeOut</el-radio>\n                  </el-radio-group>\n                </span>\n                <!-- <el-switch\n                  class=\"switchBtn\"\n                  :disabled=\"switchDisabled\"\n                  @change=\"switchCallBack()\"\n                  v-model=\"highLightFlag\"\n                  active-color=\"#409eff\"\n                  inactive-color=\"#dcdfe6\">\n                </el-switch> -->\n            </div>\n          </div>\n          <div class=\"visualization-container\">\n\n            <div class=\"grid-content bg-purple\">\n\n                <NodeLinkTree v-if=\"selectedTreeVis === 'NodeLinkTree'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></NodeLinkTree>\n                \n                <RadialDendrogramTree v-if=\"selectedTreeVis === 'RadialDendrogramTree'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></RadialDendrogramTree>\n\n                <RadialTree v-if=\"selectedTreeVis === 'RadialTree'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></RadialTree>\n\n                <!-- <div  v-if=\"selectedTreeVis === 'NodeLinkTree'\">\n                <NodeLinkTree :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></NodeLinkTree>\n                </div> -->\n\n                <NodeLinkDendrogramTree v-if=\"selectedTreeVis === 'NodeLinkDendrogramTree'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></NodeLinkDendrogramTree>\n\n                <!-- <CirclePacking v-if=\"selectedTreeVis === 'CirclePacking'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></CirclePacking> -->\n                <!-- CirclePacking -->\n\n                <IciclePlot v-if=\"selectedTreeVis === 'IciclePlot'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></IciclePlot>\n\n                <!-- <SunBurst v-if=\"selectedTreeVis === 'SunBurst'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></SunBurst> -->\n\n                <!-- <SliceDiceTreemap v-if=\"selectedTreeVis === 'SliceDiceTreemap'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></SliceDiceTreemap> -->\n                <!-- SliceDiceTreemap -->\n\n                <!-- <SquarifyTreemap v-if=\"selectedTreeVis === 'SquarifyTreemap'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></SquarifyTreemap> -->\n\n                <!-- <VoronoiTreemap v-if=\"selectedTreeVis === 'VoronoiTreemap'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></VoronoiTreemap> -->\n                <!-- VoronoiTreemap -->\n\n                <IndentationTree v-if=\"selectedTreeVis === 'IndentationTree'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></IndentationTree>\n\n                <IPTP v-if=\"selectedTreeVis === 'IPTP'\" :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :width=\"width\" :height=\"height\"></IPTP>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"vis-attribute-view\">\n          <div class=\"select-attrs-vis\">\n            <div class=\"select-attrs-vis-container\">\n              <span class=\"attrs-vis-panel-header\">Attributes:</span>\n              <el-select size=\"mini\" v-model=\"vis_attrList\" multiple collapse-tags style=\"margin-left: 20px;\" placeholder=\"select\">\n                <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </div>\n          </div>\n          \n          <div class=\"select-attr-show\">\n            <AttributeView :dataBackGround=\"dataBackGround\" :dataHighLight=\"dataHighLight\" :vis_attrList=\"vis_attrList\"></AttributeView>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport RadialDendrogramTree from '@/components/RadialDendrogramTree.vue'\nimport RadialTree from '@/components/RadialTree.vue'\nimport NodeLinkTree from '@/components/NodelinkTree.vue'\nimport NodeLinkDendrogramTree from '@/components/NodeLinkDendrogramTree.vue'\nimport CirclePacking from '@/components/CirclePacking.vue'\nimport SunBurst from '@/components/SunBurst.vue'\nimport IciclePlot from '@/components/IciclePlot.vue'\nimport SliceDiceTreemap from '@/components/SliceDiceTreemap.vue'\nimport SquarifyTreemap from '@/components/SquarifyTreemap.vue'\nimport IPTP from '@/components/IndentedPixelTreePlots.vue'\nimport VoronoiTreemap from '@/components/VoronoiTreemap.vue'\nimport IndentationTree from '@/components/IndentationTree.vue'\nimport golbalVariable from '@/global'\nimport AttributeView from '@/views/AttributeView.vue'\nimport { getComponentKey } from '@/utils/componentkey.js'\n\nexport default {\n  name: 'VisView',\n  components: {\n    RadialTree,\n    RadialDendrogramTree,\n    NodeLinkTree,\n    NodeLinkDendrogramTree,\n    CirclePacking,\n    SunBurst,\n    IciclePlot,\n    SliceDiceTreemap,\n    SquarifyTreemap,\n    IPTP,\n    VoronoiTreemap,\n    IndentationTree,\n    AttributeView\n  },\n  props: {\n  },\n  data() {\n    return {\n      // appName: \"Tree Recommendation\",\n      // operationArray: ['submit selection'],\n      // activeIndex: '',\n      // scaleWidthHeight: 250,\n      // loadingData: true,\n      width: null,\n      height: null,\n      jsonpath: null,\n      jsondata: null,\n      // loadingSelect: false,\n      // loadingSelectInfo: 'submit',\n      // treeList: ['CirclePacking'],\n      treeList: ['IPTP','IndentationTree', 'RadialTree', 'RadialDendrogramTree', 'NodeLinkTree', 'VoronoiTreemap', 'NodeLinkDendrogramTree', 'CirclePacking', 'SunBurst', 'IciclePlot', 'SliceDiceTreemap', 'SquarifyTreemap'], //'IndentedTree'\n      styleObject: {'width': this.width, 'height': this.height},\n      selectedTreeVis: 'NodeLinkTree',\n      dropDownInList: [],\n      dropDownInTitle: \"null\",\n      treeDataInList: [],\n      \n      // dropDownOutList: [],\n      // dropDownOutTitle: \"null\",\n      \n      treeDataOutList: [],\n\n      treeDataOutAll: [],\n\n      jsonDataIn: null,\n      jsonDataOut: null,\n\n      dataInIndex: 0,\n      dataOutIndex: 0,\n      highLightFlag: false,\n      switchDisabled: true,\n\n      //临时的需要画出的全部数据\n      attr_tmp_path: 'hierarchicalData/draw.json',\n      //全部可视化属性的选项列表\n      options: null,\n      //选择的可视化属性的选项列表,初始默认为depth与height\n      vis_attrList:['height','depth','degree'],\n\n      treeDataOutListOptions:[],\n      outListValue: [],\n      casderKey: 0,\n\n      hightLightIn: null,\n      hightLightOut: null,\n      unhightLightIn: null,\n      unhightLightOut: null,\n\n      backgroundFlag: null,\n\n      wholeTreeFlag: false,\n      treeInFlag: false,\n      treeOutFlag: false,\n\n      dataWholeTree: {},\n      dataTreeIn: [],\n      dataTreeOut: [],\n\n      dataBackGround: {'data':null, 'type':null},\n      dataHighLight:[]\n    }\n  },\nbeforeMount: function() {\n    // golbalVariable.highlight_2leaves = false\n    // this.width = golbalVariable.width\n    // this.height = golbalVariable.height\n    this.dataWholeTree = sysDatasetObj.returnInitData()\n\n  },\n  mounted() {\n    this.width = this.$refs.visualization_static_container_ref.clientWidth - 20\n    this.height = this.$refs.visualization_static_container_ref.clientHeight - 20\n    //生成全部可视化属性的选项列表\n    // this.options = this.getOptions(this.attr_tmp_path)\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      visViewState: function() {\n        this.dataWholeTree = sysDatasetObj.returnInitData()\n        //视图的默认状态为：In：all，out：null,wholeTree, 将所有的dataIn在dataInit中高亮\n        this.dropDownInList = [\"all\"]\n        this.dropDownInTitle = \"all\"\n        this.treeDataInList = sysDatasetObj.returnHierarchyDataIn(this.curRegexIndex)\n        \n        this.treeDataOutListOptions = [{\n            value: 'null',\n            label: 'null',\n          },\n        ]\n        this.treeDataOutAll = sysDatasetObj.returnHierarchyDataOut(this.curRegexIndex)\n\n        for(let i=0; i<this.treeDataInList.length; i++){\n          if('name' in this.treeDataInList[i])\n            this.dropDownInList.push('treeIn ' + (i+1))\n        }\n\n        //this.jsonDataIn = sysDatasetObj.returnInitData()\n        // this.jsonDataOut = this.treeDataInList\n\n        // this.dataBackGround = {\n        //   'data': this.dataWholeTree,\n        //   'type': 'wholeTree',\n        // }\n        // this.dataHighLight = [{\n        //     'data': this.treeDataInList,\n        //     'type': 'treeIn',\n        //   }\n        // ]\n        // this.dataTreeIn = this.treeDataInList\n        // this.dataTreeOut = []\n\n        this.options = this.getOptions(sysDatasetObj.returnInitData())\n        \n\n        this.casderKey = (this.casderKey + 1)%2\n        this.backgroundFlag = 'wholeTree'\n        this.wholeTreeFlag = true\n        this.treeInFlag = true\n        this.treeOutFlag = true\n        this.handleCommandIn(0)\n        //this.UPDATE_TREEVIEW()\n      }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'curRegex',\n      'regexCommitState',\n      'regexListState',\n      'curRegexIndex',\n      'visViewState',\n    ]),\n   \n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_TREEVIEW'\n    ]),\n    RadialDendrogramTreeClick(){\n      console.log(\"test\")\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'RadialDendrogramTree'\n    },\n    RadialTreeClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'RadialTree'\n    },\n    NodeLinkTreeClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'NodeLinkTree'\n    },\n    NodeLinkDendrogramTreeClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'NodeLinkDendrogramTree'\n    },\n    CirclePackingClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'CirclePacking'\n    },\n    IciclePlotClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'IciclePlot'\n    },\n    SunBurstClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'SunBurst'\n    },\n    SliceDiceTreemapClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'SliceDiceTreemap'\n    },\n    SquarifyTreemapClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'SquarifyTreemap'\n    },\n    VoronoiTreemapClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'VoronoiTreemap'\n    },\n    IndentationTreeClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'IndentationTree'\n    },\n    IPTPClick(){\n        this.jsondata = this.curData\n        this.selectedTreeVis = 'IPTP'\n    },\n    checkData(){\n        if(this.curData){\n            return true\n        }\n        else{\n            return false\n        }\n    },\n    getOptions: function(DataIn){\n      //仅仅获取最初数据中data属性值中的键值\n      let ans = []\n      let data = Object.keys(d3.hierarchy(DataIn)\n        .eachBefore(d=>{\n          d.data.data.depth = d.depth; \n          d.data.data.height = d.height;\n          d.data.data.degree = d.children ? d.children.length : 0\n        })\n        .descendants()[0].data.data)\n      data.forEach(ele=>{\n        ans.push({value:ele, label:ele})\n      })\n      return ans.sort((a,b)=>{return a.value.localeCompare(b.value);})\n    },\n    handleCommandIn(command) {\n      this.dataInIndex = command\n      if(command != 0){ //当前dataIn不是all时,默认显示out：null，backgroud：wholeTree\n        this.dropDownInTitle = 'treeIn ' + command\n        this.treeDataOutListOptions = [{\n            value: 'null',\n            label: 'null',\n          },\n        ]\n        this.treeDataOutList = this.treeDataOutAll[command-1]\n        if(this.treeDataOutList && this.treeDataOutList.length >= 1){ //如果dataOut中有值\n          let tmpItem = {\n            value: 'all',\n            label: 'all',\n          }\n          this.treeDataOutListOptions.push(tmpItem)\n\n          for(let i=0; i<this.treeDataOutList.length; i++){\n            if('name' in this.treeDataOutList[i]){\n              let tmpItem = {\n                value: i,\n                label: 'treeOut ' + (i+1),\n              }\n              this.treeDataOutListOptions.push(tmpItem)\n            }\n          }\n        }\n        else{ // 如果dataOut中无值\n\n        }\n\n        if(this.treeDataOutListOptions.length > 1){\n          \n          this.outListValue = ['all']\n\n          this.jsonDataIn =  sysDatasetObj.returnInitData()\n          this.jsonDataOut = this.treeDataOutList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': [this.treeDataInList[command-1]],\n              'type': 'treeIn',\n            },{\n              'data': this.treeDataOutList,\n              'type': 'treeOut',\n            }\n          ]\n          this.dataTreeIn = [this.treeDataInList[command-1]]\n          this.dataTreeOut = this.treeDataOutList       \n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = true\n          this.treeInFlag = true\n          this.treeOutFlag = true \n        }\n        else{\n          this.outListValue = ['null']\n\n          this.jsonDataIn =  sysDatasetObj.returnInitData()\n          this.jsonDataOut = [this.treeDataInList[command-1]]\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': [this.treeDataInList[command-1]],\n              'type': 'treeIn',\n            }\n          ]\n          this.dataTreeIn = [this.treeDataInList[command-1]]\n          this.dataTreeOut = []       \n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = false\n          this.treeInFlag = false\n          this.treeOutFlag = true \n        }\n      }\n      else{ //当前dataIn为all时，out：null, background:wholeTree\n        this.dropDownInTitle = 'all'\n        this.treeDataOutList = []\n        this.treeDataOutListOptions = [{\n            value: 'null',\n            label: 'null',\n          },\n        ]\n        let flag = false //用来标记treeOut中是否有值\n        let tmpIndex = 0\n        for(let i=0; i<this.treeDataOutAll.length; i++){\n          let tmpItem={\n            value: i,\n            label: 'treeIn ' + (i+1),\n            children: []\n          }\n          let flag2 = false //用来标记当前treeIn是否有treeOut\n          for(let j=0; j<this.treeDataOutAll[i].length; j++){\n            flag2 = true\n            if(!flag){\n              flag = true\n              let tmpItem = {\n                value: 'all',\n                label: 'all',\n              }\n              this.treeDataOutListOptions.push(tmpItem)\n            }\n            this.treeDataOutList.push(this.treeDataOutAll[i][j])\n            let tmpItem2 = {\n              value: tmpIndex,\n              label: 'treeOut ' + (j+1),\n            }\n            tmpItem['children'].push(tmpItem2)\n            tmpIndex = tmpIndex+1\n          }\n          if(flag2){\n            this.treeDataOutListOptions.push(tmpItem)\n          }\n        }\n        if(!flag){\n\n        }\n        if(this.treeDataOutListOptions.length > 1){\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          this.jsonDataOut = this.treeDataOutList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': this.treeDataInList,\n              'type': 'treeIn',\n            },{\n              'data': this.treeDataOutList,\n              'type': 'treeOut',\n            }\n          ]\n          this.dataTreeIn = this.treeDataInList\n          this.dataTreeOut = this.treeDataOutList\n\n          this.outListValue = ['all']\n\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = true\n          this.treeInFlag = true\n          this.treeOutFlag = true\n        }\n        else{\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          this.jsonDataOut = this.treeDataInList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': this.treeDataInList,\n              'type': 'treeIn',\n            }\n          ]\n          this.dataTreeIn = this.treeDataInList\n          this.dataTreeOut = [] \n\n          this.outListValue = ['null']\n\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = true\n          this.treeInFlag = true\n          this.treeOutFlag = true\n        }\n      }\n      this.casderKey = (this.casderKey + 1)%2\n      this.UPDATE_TREEVIEW()\n    },\n    handleCommandOut(command) {\n      this.dataOutIndex = command\n      if(this.dataInIndex == 0){ // In为all\n        if(this.outListValue[0] == 'null'){\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          this.jsonDataOut = this.treeDataInList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': this.treeDataInList,\n              'type': 'treeIn',\n            }\n          ]\n          this.dataTreeIn = this.treeDataInList\n          this.dataTreeOut = [] \n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = true\n          this.treeInFlag = true\n          this.treeOutFlag = true\n        }\n        else if(this.outListValue[0] == 'all'){\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          this.jsonDataOut = this.treeDataOutList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': this.treeDataInList,\n              'type': 'treeIn',\n            },{\n              'data': this.treeDataOutList,\n              'type': 'treeOut',\n            },\n          ]\n          this.dataTreeIn = this.treeDataInList\n          this.dataTreeOut = this.treeDataOutList\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = true\n          this.treeInFlag = true\n          this.treeOutFlag = true\n\n        }\n        else{\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          let tmpIndex = this.outListValue[1]\n          this.jsonDataOut = [this.treeDataOutList[tmpIndex]]\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': this.treeDataInList,\n              'type': 'treeIn',\n            },{\n              'data': [this.treeDataOutList[tmpIndex]],\n              'type': 'treeOut',\n            },\n          ]\n          this.dataTreeIn = this.treeDataInList\n          this.dataTreeOut = [this.treeDataOutList[tmpIndex]]\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = false\n          this.treeInFlag = true\n          this.treeOutFlag = false\n        }\n      }\n      else{\n        if(this.outListValue[0] == 'null'){\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          this.jsonDataOut = [this.treeDataInList[this.dataInIndex-1]]      \n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': [this.treeDataInList[this.dataInIndex-1]],\n              'type': 'treeIn',\n            }\n          ]\n          this.dataTreeIn = [this.treeDataInList[this.dataInIndex-1]]\n          this.dataTreeOut = []\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = false\n          this.treeInFlag = false\n          this.treeOutFlag = true\n        }\n        else if(this.outListValue[0] == 'all'){\n          this.jsonDataIn = this.treeDataInList[this.dataInIndex-1]\n          this.jsonDataOut = this.treeDataOutList\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': [this.treeDataInList[this.dataInIndex-1]],\n              'type': 'treeIn',\n            },{\n              'data': this.treeDataOutList,\n              'type': 'treeOut',\n            }\n          ]\n          this.dataTreeIn = [this.treeDataInList[this.dataInIndex-1]]\n          this.dataTreeOut = this.treeDataOutList\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = false\n          this.treeInFlag = false\n          this.treeOutFlag = true\n        }\n        else{\n          this.jsonDataIn = sysDatasetObj.returnInitData()\n          let tmpIndex = this.outListValue[0]\n          this.jsonDataOut = [this.treeDataOutList[tmpIndex]]\n          this.dataBackGround = {\n            'data': sysDatasetObj.returnInitData(),\n            'type': 'wholeTree',\n          }\n          this.dataHighLight = [{\n              'data': [this.treeDataInList[this.dataInIndex-1]],\n              'type': 'treeIn',\n            },{\n              'data': [this.treeDataOutList[tmpIndex]],\n              'type': 'treeOut',\n            }\n          ]\n          this.dataTreeIn = [this.treeDataInList[this.dataInIndex-1]]\n          this.dataTreeOut = [this.treeDataOutList[tmpIndex]]\n          this.backgroundFlag = 'wholeTree'\n          this.wholeTreeFlag = false\n          this.treeInFlag = false\n          this.treeOutFlag = false\n        }\n      }\n      this.UPDATE_TREEVIEW()\n    },\n    backgroundChange(){\n      if(this.backgroundFlag == 'wholeTree'){\n        this.jsonDataIn = sysDatasetObj.returnInitData()\n        this.jsonDataOut = this.dataTreeOut\n        this.dataBackGround = {\n          'data': sysDatasetObj.returnInitData(),\n          'type': 'wholeTree',\n        }\n        this.dataHighLight = [{\n          'data': JSON.parse(JSON.stringify(this.dataTreeIn)),\n          'type': 'treeIn'\n        },{\n          'data': JSON.parse(JSON.stringify(this.dataTreeOut)),\n          'type': 'treeOut'\n        }\n        ]\n      }\n      else if(this.backgroundFlag == 'treeIn'){\n        this.jsonDataIn = this.dataTreeIn[0]\n        this.jsonDataOut = this.dataTreeOut\n        this.dataBackGround = {\n          'data': JSON.parse(JSON.stringify(this.dataTreeIn[0])),\n          'type': 'treeIn'\n        }\n        this.dataHighLight = [{\n          'data': JSON.parse(JSON.stringify(this.dataTreeOut)),\n          'type': 'treeOut'\n        }]\n        console.log(\"\\dataBackGround\\n\", this.dataBackGround)\n        console.log(\"\\ndataHighLight\\n\", this.dataHighLight)\n      }\n      else if(this.backgroundFlag == 'treeOut'){\n        this.jsonDataIn = this.dataTreeOut[0]\n        this.jsonDataOut = this.dataTreeOut\n        this.dataBackGround = {\n          'data': JSON.parse(JSON.stringify(this.dataTreeOut[0])),\n          'type': 'treeOut'\n        }\n        this.dataHighLight = [{\n          'data': JSON.parse(JSON.stringify(this.dataTreeOut)),\n          'type': 'treeOut'\n        }]\n      }\n      // console.log(\"\\ndataBackGround\\n\", this.dataBackGround)\n      // console.log(\"dataHighLight\\n\", this.dataHighLight)\n      this.UPDATE_TREEVIEW()\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n@vis-view-btns-height: 2rem;\n@vis-view-btns-lineheight: 1.8rem;\n\nhtml {\n  font-size: 100%;\n}\n.vis-view {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  position: absolute;\n  top: 0%;\n  bottom: 0%;\n  left: 0%;\n  right: 0%;\n  .vis-content-container {\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    bottom: 0%;\n    right: 0%;\n    .visualization-component {\n      position: absolute;\n      top: 0%;\n      left: 0%;\n      right: 93%;\n      bottom: 0%;\n      justify-content: center;\n      // display: flex;\n      flex-direction: column;\n      border-right: 1px #ddd solid;\n      .hierarchy-visualizations{\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: 2rem;\n        width: 100%;\n        border-bottom: 1px solid rgb(211, 210, 210);\n        .hierarchy-visualizations-container {\n          // display: flex;\n          flex-direction: row;\n          justify-content: center;\n          // padding-left: 1rem;\n          align-items: center;\n          padding-top: 6.6px;\n          .hierarchy-panel-header {\n            font-weight: bold;\n          }\n        }\n      }\n      .hierarchy-visualizations-buttons{\n        position: absolute;\n        top: @vis-view-btns-height;\n        width: 100%;\n        bottom: 0%;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        .quarter-div{\n          height: 45px;\n          width: 80px;\n          margin-top: 8px;\n          border: 1.4px dashed gray;\n        }\n      }\n    }\n    .visualization-static-container {\n      position: absolute;\n      top: 0%;\n      bottom: 0%;\n      left: 7%;\n      right: 20%;\n      // overflow-y: auto;\n      .vis-view-btns{\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: @vis-view-btns-height;\n        width: 100%;\n        border-bottom: 1px solid gray;\n        .vis-view-btns-container {\n          display: flex;\n          flex-direction: row;\n          // justify-content: center;\n          padding-left: 1rem;\n          align-items: center;\n          // padding-top: 2px;\n          .panel-header {\n            font-weight: bold;\n          }\n          .configuration-container {\n            margin: 0px 10px;\n          }\n          .dataInText{\n            line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            margin: 0px 15px;\n          }\n          .dropDownBtnIn{\n            /deep/.el-button--primary {\n              border-color: #DCDFE6 !important;\n              width: 60px !important;\n            }\n          }\n          .dataOutText{\n            line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            margin: 0px 15px;\n          }\n          .dropDownBtnOut{\n            /deep/.el-input__inner{\n              height: 29px;\n              width: 130px;\n            }\n          }\n          .highLightChoose{\n            // padding-top: 0.5rem;\n            // line-height: @vis-view-btns-lineheight;\n            // vertical-align: middle;\n          }\n          .highLightText{\n            line-height: @vis-view-btns-lineheight;\n            vertical-align: middle;\n            text-align: center;\n            font-size: 0.8rem;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n          }\n        }\n      }\n      .visualization-container {\n        position: absolute;\n        top: @vis-view-btns-height;\n        width: 100%;\n        bottom: 0%;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        .grid-content {\n          width: 100%;\n          height: 100%;\n          border-top: #cccccc 1px solid;\n          background: white;\n          position: relative;\n        }\n      }\n    }\n    .vis-attribute-view{\n      position: absolute;\n      top: 0%;\n      bottom: 0%;\n      left: 80%;\n      right: 0%;\n      border-left: 1px #ddd solid;\n      .select-attrs-vis {\n        position: absolute;\n        left: 0%;\n        right: 0%;\n        height: 2rem;\n        width: 100%;\n        border-bottom: 1px solid rgb(211, 210, 210);\n        .select-attrs-vis-container{\n          // display: flex;\n          flex-direction: row;\n          justify-content: center;\n          // padding-left: 1rem;\n          align-items: center;\n          padding-top: 2.5px;\n          .attrs-vis-panel-header {\n            font-weight: bold;\n          }\n\n        }\n      }\n    }\n  }\n}\n  .el-select {\n    display: inline-block;\n    position: relative;\n    top: 8%;\n    left: 0%;\n    // height: 2rem;\n  }\n  .el-header, .el-footer {\n    background-color: rgb(238, 241, 246);\n    color: #333;\n    text-align: center;\n    line-height: 60px;\n  }\n  \n  .el-aside {\n    background-color: rgb(238, 241, 246);\n    color: #333;\n    text-align: center;\n    line-height: 400px;\n    margin: 5px 0;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n  \n  .el-main {\n    background-color: #ffffff;\n    color: #333;\n    text-align: center;\n    line-height: 160px;\n    margin: 5px 0;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n  .el-button+.el-button {\n    margin-left: 0px;\n  }\n  .el-row {\n    margin-bottom: 20px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  .el-col {\n    border-radius: 4px;\n  }\n  .bg-purple-dark {\n    background: #99a9bf;\n  }\n  .bg-purple {\n    background: white;\n  }\n  .bg-purple-light {\n    background: #e5e9f2;\n  }\n  .grid-content-1 {\n    border-radius: 4px;\n    font-size: 45px;\n    // color: #FF7F50;\n    // color: black;\n    color: rgb(94, 94, 94);\n    // color: #5F9EA0;\n  }\n  .grid-content-2 {\n    border-radius: 4px;\n    font-size: 45px;\n    color: #4b78a5;\n  }\n  .row-bg {\n    padding: 10px 0;\n    background-color: #f9fafc;\n  }\n\n  /deep/.el-icon-nodelinktree{\n    background: url(../assets/treevis/nodelinktree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-nodelinkdendrogramtree{\n    background: url(../assets/treevis/nodelinkdendrogramtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-radialtree{\n    background: url(../assets/treevis/radialtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-radialdendrogramtree{\n    background: url(../assets/treevis/radialdendrogramtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-icicleplot{\n    background: url(../assets/treevis/icicleplot.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-indentationtree{\n    background: url(../assets/treevis/indentationtree.png) center no-repeat;\n    background-size: cover;\n  }\n  /deep/.el-icon-iptp{\n    background: url(../assets/treevis/iptp.png) center no-repeat;\n    background-size: cover;\n  }\n\n</style>\n<style lang=\"less\">\n    @vis-view-btns-lineheight: 2rem;\n    .el-button--primary {\n      color: rgb(53, 51, 51) !important;\n      background-color: #ffffff !important;\n      border-color: #858484 !important;\n    }\n    .el-dropdown {\n      line-height: @vis-view-btns-lineheight !important;\n    }\n    .el-cascader {\n      line-height: @vis-view-btns-lineheight !important;\n    }\n    .el-input__icon {\n      line-height: @vis-view-btns-lineheight !important;\n    }\n    .el-radio {\n      margin-right: 10px;\n    }\n</style>\n\n\n"]}]}