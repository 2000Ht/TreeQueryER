{"remainingRequest":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/REView/REComponents/REOr.vue?vue&type=style&index=0&id=71780cdf&scoped=true&lang=less&","dependencies":[{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/src/views/REView/REComponents/REOr.vue","mtime":1648714649000},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/css-loader/index.js","mtime":1660192274937},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660192275629},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1660192275315},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1660192275256},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/Downloads/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.re-or {\n  height: 100%;\n  width: 100%;\n  .re-cover{\n    height: 30px !important;\n    width: 10px !important;\n    opacity: 0 !important;\n  }\n\n}\npath {\n    stroke: #000000;\n    stroke-width: 2px;\n    fill: none;\n    &.highlighted {\n        stroke: red;\n    }\n}\n.upper-rect {\n    stroke: #c4bbbb;\n    stroke-width: 2;\n    stroke-dasharray: 2 1.67 3 1.67 3 1.67 2 0.0001;\n    fill: white;\n}\n",{"version":3,"sources":["REOr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"REOr.vue","sourceRoot":"src/views/REView/REComponents","sourcesContent":["<template>\n  <g class=\"re-or\">\n    <g v-for=\"(item, index1) in orExpression['composition']\" :key=\"computeItemKey(index1)\">\n        <RENode v-if=\"item['type'] == 'node'\" :nodeExpression=\"item\" :key=\"item.key\"></RENode>\n        <REPath v-if=\"item['type'] == 'path'\" :pathExpression=\"item\" :key=\"item.key\"></REPath>\n        <REOr v-if=\"item['type'] == 'or'\" :orExpression=\"item\" :key=\"item.key\"></REOr>\n    </g>\n    <path v-if=\"orExpression['or']\" :d=\"orCompute\" />\n    <g v-if=\"orExpression['branch']\">\n        <path :d=\"leftBracketBranchCompute\" @click=\"updateSelectedOr()\"/>\n        <path :d=\"rightBracketBranchCompute\" @click=\"updateSelectedOr()\"/>\n        <text v-if=\"checkBranchRepeat()\" :transform=\"branchRepeatTransform\" style=\"alignment-baseline: hanging;\">{{orExpression['branchRepeat'][0]}}..{{orExpression['branchRepeat'][1]}}</text>\n    </g>\n    <path :d=\"leftBracketCompute\" @click=\"updateSelectedOr()\" @dblclick=\"updateSelectedPart\" :class=\"{'highlighted': getOrHighlightState }\"/>\n    <rect :transform=\"leftBracketRectTransform\" @click=\"updateSelectedOr()\" @dblclick=\"updateSelectedPart\" class=\"rect-cover\" width=\"10\" height=\"30\" opacity=\"0\"/>\n    <path :d=\"rightBracketCompute\" @click=\"updateSelectedOr()\" @dblclick=\"updateSelectedPart\" :class=\"{'highlighted': getOrHighlightState }\"/>\n    <rect :transform=\"rightBracketRectTransform\" @click=\"updateSelectedOr()\" @dblclick=\"updateSelectedPart\" class=\"rect-cover\" width=\"10\" height=\"30\" opacity=\"0\"/>\n    <text v-if=\"checkRepeat()\" :transform=\"repeatTransform\" style=\"alignment-baseline: hanging;\">{{orExpression['repeat'][0]}}..{{orExpression['repeat'][1]}}</text>\n    <rect class=\"upper-rect\" v-if=\"orExpression['upper']\" width=\"10\" height=\"10\" :transform=\"upperTransform\" />\n    <path v-if=\"orExpression['selected']\" :d=\"selectedCompute\" />\n  </g>\n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex';\n    import RENode from '@/views/REView/REComponents/RENode.vue';\n    import REOr from '@/views/REView/REComponents/REOr.vue';\n\nexport default {\n  name: 'REOr',\n  components: {\n    RENode,\n    REOr\n  },\n  props: {\n    orExpression:{\n      type: Object\n    }\n  },\n  beforeCreate() {\n    this.$options.components.REPath = require(\"@/views/REView/REComponents/REPath.vue\").default;\n  },\n  data() {\n    return {\n\n    }\n  },\n\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'selectedDom',\n      'selectedDomKey'\n    ]),\n    getOrHighlightState () {\n        // if (this.selectedNode != null) {\n        //     console.log('selectedNode', this.selectedNode, this.selectedNodeKey, 'nodeExpression key', this.nodeExpression.key)\n        // }\n        return this.orExpression.key === this.selectedDomKey\n    },\n    leftBracketTransform(){\n        return `translate(${this.orExpression['xLeftBracket']}, ${this.orExpression['yLeftBracket']})`\n    },\n    rightBracketTransform(){\n        return `translate(${this.orExpression['xRightBracket']}, ${this.orExpression['yRightBracket']})`\n    },\n    repeatTransform(){\n        return `translate(${this.orExpression['xRepeat']}, ${this.orExpression['yRepeat']})`\n    },\n    upperTransform(){\n        return `translate(${this.orExpression['xUpper']}, ${this.orExpression['yUpper']})`\n    },\n    leftBracketCompute()\n\t{\n        var x1 = this.orExpression['x1LeftBracket']\n        var y1 = this.orExpression['y1LeftBracket']\n        var x2 = this.orExpression['x2LeftBracket']\n        var y2 = this.orExpression['y2LeftBracket']\n\n        var qx = x1-(y2-y1)/3\n        var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    leftBracketRectTransform(){\n      var x1 = this.orExpression['x1LeftBracket']\n      var y1 = this.orExpression['y1LeftBracket']\n      var x2 = this.orExpression['x2LeftBracket']\n      var y2 = this.orExpression['y2LeftBracket']\n\n      var qx = x1-(y2-y1)/3 + 5\n      var qy = (y2+y1)/2\n      return `translate(${qx}, ${this.orExpression['y1LeftBracket']})`\n    },\n    rightBracketCompute()\n\t{\n        var x1 = this.orExpression['x1RightBracket']\n        var y1 = this.orExpression['y1RightBracket']\n        var x2 = this.orExpression['x2RightBracket']\n        var y2 = this.orExpression['y2RightBracket']\n\n        var qx = x1+(y2-y1)/3\n        var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    rightBracketRectTransform(){\n        var x1 = this.orExpression['x1RightBracket']\n        var y1 = this.orExpression['y1RightBracket']\n        var x2 = this.orExpression['x2RightBracket']\n        var y2 = this.orExpression['y2RightBracket']\n\n        var qx = x1 - 5\n        var qy = (y2+y1)/2\n        return `translate(${qx}, ${this.orExpression['y1RightBracket']})`\n    },\n    orCompute(){\n        var x1 = this.orExpression['xOr']\n        var y1 = this.orExpression['yOr']\n\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" v \" + 45);\n    },\n    branchRepeatTransform(){\n        return `translate(${this.orExpression['xBranchRepeat']}, ${this.orExpression['yBranchRepeat']})`\n    },\n    leftBracketBranchCompute()\n\t{\n        var x1 = this.orExpression['x1LeftBranchBracket']\n        var y1 = this.orExpression['y1LeftBranchBracket'] + 6\n        var x2 = this.orExpression['x2LeftBranchBracket']\n        var y2 = this.orExpression['y2LeftBranchBracket'] - 6\n\n        var midx = x1-(y2-y1)/2\n        var midy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" L \" + midx + \" \" + midy + \n                \" L \" + x2+ \" \" + y2  );\n    },\n    rightBracketBranchCompute()\n\t{\n        var x1 = this.orExpression['x1RightBranchBracket']\n        var y1 = this.orExpression['y1RightBranchBracket'] + 6\n        var x2 = this.orExpression['x2RightBranchBracket']\n        var y2 = this.orExpression['y2RightBranchBracket'] - 6\n\n        var midx = x1+(y2-y1)/2\n        var midy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" L \" + midx + \" \" + midy + \n                \" L \" + x2+ \" \" + y2  );\n    },\n    selectedCompute(){\n        var x1 = this.orExpression['x1Selected']\n        var x2 = this.orExpression['x2Selected']\n        var y1 = this.orExpression['ySelected']\n\n        return ( \"M \" + x1 + \" \" + y1 + \n                 \"H \" + x2)\n    },\n   \n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_SELECTED_DOM',\n      'UPDATE_SELECTED_PART'\n    ]),\n    computeItemKey(d){\n        return 'item'+d\n    },\n    checkRepeat(){\n        if('repeat' in this.orExpression)\n            if(this.orExpression['repeat'][0]!=1 || this.orExpression['repeat'][1]!=1)\n                return true\n        return false\n    },\n    checkBranchRepeat(){\n        if('branchRepeat' in this.orExpression)\n            if(this.orExpression['branchRepeat'][0]!=1 || this.orExpression['branchRepeat'][1]!=1)\n                return true\n        return false\n    },\n    updateSelectedOr(){\n      this.UPDATE_SELECTED_DOM(this.orExpression)\n    },\n    updateSelectedPart(){\n        if('selected' in this.orExpression){\n            this.orExpression['selected'] = !this.orExpression['selected']\n        }\n        else{\n            this.orExpression['selected'] = true\n        }\n        this.UPDATE_SELECTED_PART()\n    },\n    \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.re-or {\n  height: 100%;\n  width: 100%;\n  .re-cover{\n    height: 30px !important;\n    width: 10px !important;\n    opacity: 0 !important;\n  }\n\n}\npath {\n    stroke: #000000;\n    stroke-width: 2px;\n    fill: none;\n    &.highlighted {\n        stroke: red;\n    }\n}\n.upper-rect {\n    stroke: #c4bbbb;\n    stroke-width: 2;\n    stroke-dasharray: 2 1.67 3 1.67 3 1.67 2 0.0001;\n    fill: white;\n}\n</style>\n"]}]}