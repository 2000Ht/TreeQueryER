{"remainingRequest":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/REWholeTree.vue?vue&type=template&id=036e27a9&scoped=true&","dependencies":[{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/REWholeTree.vue","mtime":1648714649000},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660192275642},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"g\",\n    { staticClass: \"re-wholetree\" },\n    [\n      _vm._l(_vm.wholeTreeExpression[\"composition\"], function(item, index1) {\n        return _c(\n          \"g\",\n          { key: _vm.computeItemKey(index1) },\n          [\n            item[\"type\"] == \"node\"\n              ? _c(\"RENode\", { key: item.key, attrs: { nodeExpression: item } })\n              : _vm._e(),\n            item[\"type\"] == \"path\"\n              ? _c(\"REPath\", { key: item.key, attrs: { pathExpression: item } })\n              : _vm._e(),\n            item[\"type\"] == \"or\"\n              ? _c(\"REOr\", { key: item.key, attrs: { orExpression: item } })\n              : _vm._e(),\n            item[\"type\"] == \"branch\"\n              ? _c(\"REBranch\", {\n                  key: item.key,\n                  attrs: { branchExpression: item }\n                })\n              : _vm._e()\n          ],\n          1\n        )\n      }),\n      _vm.elementCompositionCheck()\n        ? _c(\"REElementComposition\", {\n            key: _vm.wholeTreeExpression[\"elementComposition\"].key,\n            attrs: {\n              elementCompositionExpression:\n                _vm.wholeTreeExpression[\"elementComposition\"]\n            }\n          })\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}