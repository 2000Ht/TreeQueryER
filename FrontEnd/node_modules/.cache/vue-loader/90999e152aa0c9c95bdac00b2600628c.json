{"remainingRequest":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/src/views/NodeDefinePanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/src/views/NodeDefinePanel.vue","mtime":1668430537403},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main-sumbit/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex';\n\n\nexport default {\n  name: 'NodeDefinePanel',\n  components: {\n\n  },\n  props: {\n\n  },\n  data() {\n    return {\n        sizeForm: {\n          name: '',\n          label: '',\n          shape: '',\n          color: '#fff'\n        },\n        queryList: [\n            {\n                queryAttribute: '',\n                queryOperation: '',\n                queryValue: ''\n            }\n        ],\n        queryOperationList: [{\n            value: '=',\n            label: '='\n            }, {\n            value: '>',\n            label: '>'\n            }, {\n            value: '>=',\n            label: '>='\n            }, {\n            value: '<',\n            label: '<'\n            }, {\n            value: '<=',\n            label: '<='\n            },{\n            value: '⊂',\n            label: '⊂'\n            }],\n        queryOperation: '',\n        queryValue: '',\n        nodeName: \"\",\n        nodeColor: \"#FFFFFF\",\n        attributeListCopy: [],\n      \n    }\n  },\n  beforeMount(){\n    this.attributeListCopy.push('degree')\n    this.attributeListCopy.push('height')\n    this.attributeListCopy.push('depth')\n    this.attributeListCopy.push('countries')\n    this.attributeListCopy.push('citationCount')\n    this.attributeListCopy.push('year')\n    this.attributeListCopy.push('keywords')\n    this.queryUpdate()\n\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'selectedDom',\n\n    ]),\n  },\n  created(){\n\n  },\n  methods: {\n    ...mapMutations([\n      'RESET_DOM_KEY_STATE',\n      'UPDATE_RETREE_DATA_STATE',\n      'UPDATE_NODE_LIST',\n      'UPDATE_REGEX_CONTENT',\n      'UPDATE_CONDITION_STATE',\n      'UPDATE_NODE_DEFINITION_STATE'\n    ]),\n    closeNodeDefine(){\n        this.UPDATE_CONDITION_STATE(true)\n    },\n    queryAdd() {\n        var tmpDict = {\n            queryAttribute: '',\n            queryOperation: '',\n            queryValue: ''\n        }\n        this.queryList.push(tmpDict)\n    },\n    commitNode(){\n        if(this.selectedDom){\n            if(this.selectedDom['type'] == 'node'){\n                this.selectedDom['definition'] = true\n                this.selectedDom['nodeName'] = this.nodeName\n                if(!this.nodeColor){\n                    this.nodeColor = '#FFFFFF'\n                }\n                this.selectedDom['nodeColor'] = this.nodeColor\n                // this.selectedDom['data'] = {}\n                this.selectedDom['data'] = []\n                for(let item of this.queryList){\n                    this.selectedDom['data'].push(item)\n                }\n                this.UPDATE_CONDITION_STATE(true)\n                this.UPDATE_NODE_DEFINITION_STATE()\n            }\n        }\n        \n    },\n    computeQueryKey(d){\n        return \"queryList\" + d  \n    },\n    queryUpdate(){\n        if(this.selectedDom){\n            if(this.selectedDom['type'] == 'node'){\n                this.nodeName = this.selectedDom['nodeName']\n                this.nodeColor = this.selectedDom['nodeColor']\n                this.queryList.splice(0, this.queryList.length)\n                for(let item of this.selectedDom['data']){\n                    // let tmpDict = {}\n                    // tmpDict['queryAttribute'] = key\n                    // tmpDict['queryOperation'] = this.selectedDom['data'][key]['op']\n                    // tmpDict['queryValue'] = this.selectedDom['data'][key]['value']\n                    this.queryList.push(item)              \n                }\n            }\n        }\n        else if(this.selectedListNode){\n            this.nodeName = this.selectedListNode['nodeName']\n            this.nodeColor = this.selectedListNode['nodeColor']\n            this.queryList.splice(0, this.queryList.length)\n            for(let item of this.selectedListNode['data']){\n                this.queryList.push(item)              \n            }\n        }\n        else{\n            this.queryList = []\n            this.sizeForm = {}\n            this.nodeName = ''\n        }\n    },\n    attributeDelete(index){\n        this.queryList.splice(index, 1)\n    },\n    change(e){\n        this.$forceUpdate()\n    }\n  }\n\n}\n",{"version":3,"sources":["NodeDefinePanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"NodeDefinePanel.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"node-define-panel-view\">\n    <div class=\"node-definition-content\">\n        <div class=\"attribute\" style=\"display: flex;\">\n\n\n                <span style=\"margin-left: 60px; margin-top: 0px;\"> name:</span>\n                <el-input v-model=\"nodeName\" @input=\"change($event)\" style=\"width: 25%; margin-left: 10px; margin-top: 2px;\" size=\"mini\" ></el-input>\n                <span style=\"margin-left: 20px; margin-top: 0px;\">color:</span>\n                <el-color-picker v-model=\"nodeColor\" style=\"margin-left: 10px; margin-top: 2px;\"></el-color-picker>\n                <i class=\"el-icon-close operation\" @click=\"closeNodeDefine()\"></i>\n\n        </div>\n        <div class=\"query\">\n            <div class=\"query-title\">\n                <el-row :gutter=\"16\" style=\"text-align:center;\">\n                    <el-col :span=\"7\" :offset=\"1\">attribute</el-col>\n                    <el-col :span=\"7\">operation</el-col>\n                    <el-col :span=\"7\">value</el-col>\n                </el-row>\n            </div>\n            <div class=\"query-content\">\n                <div v-for=\"(queryItem,index) in queryList\" :key=\"computeQueryKey(index)\">\n                    <el-row :gutter=\"16\">\n                        <el-col :span=\"7\" :offset=\"1\">\n                            <el-select v-model=\"queryItem.queryAttribute\" filterable placeholder=\"\">\n                                <el-option v-for=\"item in attributeListCopy\" :key=\"item\" :label=\"item\" :value=\"item\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                        <el-col :span=\"7\">\n                            <el-select v-model=\"queryItem.queryOperation\" filterable placeholder=\"\">\n                                <el-option v-for=\"item in queryOperationList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                        <el-col :span=\"7\">\n                            <el-input v-model=\"queryItem.queryValue\" placeholder=\"\" clearable @input=\"change($event)\"></el-input>\n                        </el-col>\n                        <el-col :span=\"2\">\n                            <svg t=\"1646725673402\" class=\"icon-delete\" @click=\"attributeDelete(index)\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"3143\" width=\"22\" height=\"22\"><path d=\"M512 74.666667C270.933333 74.666667 74.666667 270.933333 74.666667 512S270.933333 949.333333 512 949.333333 949.333333 753.066667 949.333333 512 753.066667 74.666667 512 74.666667z m0 810.666666c-204.8 0-373.333333-168.533333-373.333333-373.333333S307.2 138.666667 512 138.666667 885.333333 307.2 885.333333 512 716.8 885.333333 512 885.333333z\" p-id=\"3144\"></path><path d=\"M657.066667 360.533333c-12.8-12.8-32-12.8-44.8 0l-102.4 102.4-102.4-102.4c-12.8-12.8-32-12.8-44.8 0-12.8 12.8-12.8 32 0 44.8l102.4 102.4-102.4 102.4c-12.8 12.8-12.8 32 0 44.8 6.4 6.4 14.933333 8.533333 23.466666 8.533334s17.066667-2.133333 23.466667-8.533334l102.4-102.4 102.4 102.4c6.4 6.4 14.933333 8.533333 23.466667 8.533334s17.066667-2.133333 23.466666-8.533334c12.8-12.8 12.8-32 0-44.8l-106.666666-100.266666 102.4-102.4c12.8-12.8 12.8-34.133333 0-46.933334z\" p-id=\"3145\"></path></svg>\n                        </el-col>                \n                    </el-row>\n                </div>\n                <el-row :gutter=\"20\">\n                    <el-col :offset=\"5\" :span=\"8\">\n                        <el-button class=\"query-button\" v-on:click=\"queryAdd\"> + </el-button>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <el-button class=\"commit-button\" v-on:click=\"commitNode\"> commit </el-button>\n                    </el-col>\n                    <el-col :span=\"4\"></el-col>\n                </el-row>\n            </div>\n        </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\n\n\nexport default {\n  name: 'NodeDefinePanel',\n  components: {\n\n  },\n  props: {\n\n  },\n  data() {\n    return {\n        sizeForm: {\n          name: '',\n          label: '',\n          shape: '',\n          color: '#fff'\n        },\n        queryList: [\n            {\n                queryAttribute: '',\n                queryOperation: '',\n                queryValue: ''\n            }\n        ],\n        queryOperationList: [{\n            value: '=',\n            label: '='\n            }, {\n            value: '>',\n            label: '>'\n            }, {\n            value: '>=',\n            label: '>='\n            }, {\n            value: '<',\n            label: '<'\n            }, {\n            value: '<=',\n            label: '<='\n            },{\n            value: '⊂',\n            label: '⊂'\n            }],\n        queryOperation: '',\n        queryValue: '',\n        nodeName: \"\",\n        nodeColor: \"#FFFFFF\",\n        attributeListCopy: [],\n      \n    }\n  },\n  beforeMount(){\n    this.attributeListCopy.push('degree')\n    this.attributeListCopy.push('height')\n    this.attributeListCopy.push('depth')\n    this.attributeListCopy.push('countries')\n    this.attributeListCopy.push('citationCount')\n    this.attributeListCopy.push('year')\n    this.attributeListCopy.push('keywords')\n    this.queryUpdate()\n\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'selectedDom',\n\n    ]),\n  },\n  created(){\n\n  },\n  methods: {\n    ...mapMutations([\n      'RESET_DOM_KEY_STATE',\n      'UPDATE_RETREE_DATA_STATE',\n      'UPDATE_NODE_LIST',\n      'UPDATE_REGEX_CONTENT',\n      'UPDATE_CONDITION_STATE',\n      'UPDATE_NODE_DEFINITION_STATE'\n    ]),\n    closeNodeDefine(){\n        this.UPDATE_CONDITION_STATE(true)\n    },\n    queryAdd() {\n        var tmpDict = {\n            queryAttribute: '',\n            queryOperation: '',\n            queryValue: ''\n        }\n        this.queryList.push(tmpDict)\n    },\n    commitNode(){\n        if(this.selectedDom){\n            if(this.selectedDom['type'] == 'node'){\n                this.selectedDom['definition'] = true\n                this.selectedDom['nodeName'] = this.nodeName\n                if(!this.nodeColor){\n                    this.nodeColor = '#FFFFFF'\n                }\n                this.selectedDom['nodeColor'] = this.nodeColor\n                // this.selectedDom['data'] = {}\n                this.selectedDom['data'] = []\n                for(let item of this.queryList){\n                    this.selectedDom['data'].push(item)\n                }\n                this.UPDATE_CONDITION_STATE(true)\n                this.UPDATE_NODE_DEFINITION_STATE()\n            }\n        }\n        \n    },\n    computeQueryKey(d){\n        return \"queryList\" + d  \n    },\n    queryUpdate(){\n        if(this.selectedDom){\n            if(this.selectedDom['type'] == 'node'){\n                this.nodeName = this.selectedDom['nodeName']\n                this.nodeColor = this.selectedDom['nodeColor']\n                this.queryList.splice(0, this.queryList.length)\n                for(let item of this.selectedDom['data']){\n                    // let tmpDict = {}\n                    // tmpDict['queryAttribute'] = key\n                    // tmpDict['queryOperation'] = this.selectedDom['data'][key]['op']\n                    // tmpDict['queryValue'] = this.selectedDom['data'][key]['value']\n                    this.queryList.push(item)              \n                }\n            }\n        }\n        else if(this.selectedListNode){\n            this.nodeName = this.selectedListNode['nodeName']\n            this.nodeColor = this.selectedListNode['nodeColor']\n            this.queryList.splice(0, this.queryList.length)\n            for(let item of this.selectedListNode['data']){\n                this.queryList.push(item)              \n            }\n        }\n        else{\n            this.queryList = []\n            this.sizeForm = {}\n            this.nodeName = ''\n        }\n    },\n    attributeDelete(index){\n        this.queryList.splice(index, 1)\n    },\n    change(e){\n        this.$forceUpdate()\n    }\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.node-define-panel-view {\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    right: 0%;\n    bottom: 0%;\n        .node-definition-content {\n        position: absolute;\n        top: 0%;\n        width: 100%;\n        height: 100%;\n        left: 0%;\n        bottom: 0%;\n        display: flex;\n        flex-direction: column;\n        font-size: 1rem;\n        font-weight: bolder;\n        color: #808080;\n        .name-color-text{\n            text-align: center;\n            font-weight: bold !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            line-height: 20px !important;   \n        }\n        .text-attribute{\n            left: 5%;\n            font-size:20px;\n            font-family: Sans-serif;\n            color: #606266;\n            font-weight: bold;\n            top: 5%;\n        }\n        .attribute {\n            padding: 5px 0 5px 20px;\n            position: absolute;\n            top:0;\n            height: 22px;\n            width: 100%;\n            border-bottom: 1px #ddd solid;\n            .el-icon-close{\n                position: absolute;\n                font-size: 18px;\n                font-weight: bolder;\n                left: 88%;\n                top: 8px;\n                color: #808080;\n                cursor: pointer;\n                    &:hover{\n                    color: steelblue;\n                    }\n                }\n        }\n        .query{\n            position:absolute;\n            top: 30px;\n            width: 100%;\n            padding: 10px;  \n            .query-title{\n                width: 95%;\n            } \n            .query-content{\n                width: 95%;\n                height: 65px;\n                overflow-y: auto;\n                .icon-delete{\n                    cursor: pointer;\n                    &:hover{\n                        fill: steelblue;\n                    }\n                }\n            }\n\n        }\n        .query-button{\n            border: 1px #ddd dashed;\n            font-size: 20px;\n            text-align: center !important;\n            margin-top: 5px;\n            height: 20px !important;\n            line-height: 20px !important;\n            // padding: 0px 20px !important;\n            width: 80px;\n        }\n        .commit-button{\n            border: 1px #ddd bold;\n            font-size: 16px;\n            text-align: center !important;\n            margin-top: 5px;\n            height: 20px !important;\n            line-height: 0px !important;\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\n            padding: 0px;\n            width: 80px;\n        }\n    }    \n\n}\n\n</style>\n<style scoped lang=\"less\">\n    @input-line-height: 20px;\n\n    /deep/.el-input__inner {\n        line-height: @input-line-height !important;\n        height: @input-line-height !important;\n    }\n    /deep/.el-input__icon {\n        line-height: @input-line-height !important;\n    }\n    /deep/.el-input--mini{\n        font-size: 15px !important;\n        font-weight: bold !important;\n        height: 10px;\n    }\n    /deep/.query-button {\n        padding: 0 !important;\n    }\n    /deep/.el-color-picker__trigger{\n        height: 20px !important;\n        width: 20px !important;\n        padding: 0 !important;\n    }\n    /deep/.el-row{\n        margin-bottom: 5px !important;\n    }\n</style>"]}]}