{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/ElementComposition.vue?vue&type=style&index=0&id=6ce974d7&scoped=true&lang=less&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/ElementComposition.vue","mtime":1660968952643},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/css-loader/index.js","mtime":1660192274937},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660192275629},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1660192275315},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1660192275256},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.re-elementComposition {\n    height: 100%;\n    width: 100%;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    .belong-symbol{\n\n        color: #606266;\n    }\n    .attr-input1{\n        width: 20px;\n        height: 20px;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n    .attr-connect{\n        font-size: 1.5rem;\n        font-weight: 200;\n        text-anchor: middle;\n        color: #606266;\n    }\n    .attr-input2{\n        width: 20px;\n        height: 20px;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266 !important;\n    }\n\n\n}\n",{"version":3,"sources":["ElementComposition.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"ElementComposition.vue","sourceRoot":"src/views/REView/REComponents","sourcesContent":["<template>\n<div class=\"re-elementComposition\">\n    <div v-for=\"(item1, index1) of elementCompositionExpression\" :key=\"computeExistKey(index1)\" style=\"width:100%; height: 50%\">\n            <div v-if=\"item1['type']=='exist'\" style=\"width:100%; height:100%; display: flex;\">\n                <svg style=\"width:50%\">\n                    <text v-if=\"item1['type']=='exist'\" :transform=\"commonTransform1(item1, index1)\" style=\"alignment-baseline: hanging; font-size: 30px\">∃</text>\n                    <EleNode :nodeExpression=\"item1['node']\"></EleNode>\n                </svg>\n                <span class=\"belong-symbol\" style=\"width:5%; margin-top: 5px;\" >∈</span>\n                <input class=\"attr-input1\" type=\"text\" name=\"ticketNum\" style=\"width:5%; margin-top: 5px;\" v-model=\"item1['repeat'][0]\">\n                <span class=\"attr-connect\">~</span>\n                <input class=\"attr-input2\" type=\"text\" name=\"ticketNum\" style=\"width:5%; margin-top: 5px;\" v-model=\"item1['repeat'][1]\">\n            </div>\n            <div v-if=\"item1['type']=='all'\" style=\"width:100%; height:100%; display: flex;\">\n                <svg style=\"width:50%\">\n                    <text v-if=\"item1['type']=='all'\" :transform=\"commonTransform2(item1, index1)\" style=\"alignment-baseline: hanging; font-size: 30px\">∀</text>\n                    <EleNode :nodeExpression=\"item1['node']\"></EleNode>\n                </svg>\n            </div>\n    </div>\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex';\n    import EleNode from './EleNode.vue';\n\nexport default {\n  name: 'ElementComposition',\n  components: {\n    EleNode\n  },\n  props: {\n    elementCompositionExpression:{\n      type: Array\n    }\n  },\n  data() {\n    return {\n        test: 100,\n\n    }\n  },\n  beforeMount(){\n    console.log('elementCompositionExpression', this.elementCompositionExpression)\n  },\n  mounted() {\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'selectedDom',\n    ]),\n   \n  },\n    watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_SELECTED_DOM',\n      'UPDATE_NODE_DEFINITION_STATE',\n    ]),\n    computeExistKey(d){\n        return 'exist' + d\n    },\n    computeAllKey(d){\n        return 'all' + d\n    },\n    computeExistItemKey(d){\n        return 'existItem' + d\n    },\n    commonTransform1(test, index){\n        return `translate(${120}, ${0})`\n    },\n    commonTransform2(x, y){\n        return `translate(${118}, ${0})`\n    },\n    leftBracketCompute(x1, y1, x2, y2)\n\t{\n            var qx = x1-(y2-y1)/3\n            var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    rightBracketCompute(x1, y1, x2, y2)\n\t{\n        var qx = x1+(y2-y1)/3\n        var qy = (y2+y1)/2\n\n    \treturn ( \"M \" +  x1 + \" \" +  y1 +\n         \t\t\" Q \" + qx + \" \" + qy + \" \" + x2 + \" \" + y2 );\n    },\n    updateSelectedElementComposition() {\n        this.UPDATE_SELECTED_DOM(this.elementCompositionExpression)\n    },\n    updateSelectedExist(d) {\n        this.UPDATE_NODE_DEFINITION_STATE(true)\n        this.UPDATE_SELECTED_DOM(d)\n    },\n    updateSelectedAll(d){\n      this.UPDATE_NODE_DEFINITION_STATE(true)\n      this.UPDATE_SELECTED_DOM(d)\n    },\n    selectedStyle(d){\n        if(d.key == this.selectedDomKey){\n            return ( \"fill: red !important; \" + \n                     \"stroke-width: 0px;\");\n        }\n    },\n    elementCompositionCheck(){\n      if(this.elementCompositionExpression['exist']['composition'].length + this.elementCompositionExpression['all']['composition'].length>0)\n        return true\n      return false\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.re-elementComposition {\n    height: 100%;\n    width: 100%;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    .belong-symbol{\n\n        color: #606266;\n    }\n    .attr-input1{\n        width: 20px;\n        height: 20px;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266;\n    }\n    .attr-connect{\n        font-size: 1.5rem;\n        font-weight: 200;\n        text-anchor: middle;\n        color: #606266;\n    }\n    .attr-input2{\n        width: 20px;\n        height: 20px;\n        border: 1px solid #bfc2c8 !important;\n        border-radius: 2px;\n        color: #606266 !important;\n    }\n\n\n}\n</style>\n"]}]}