{"remainingRequest":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/RENodeListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/RENodeListView.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex';\nimport REListNode from '@/views/REView/REComponents/REListNode.vue';\n\nexport default {\n  name: 'RENodeListView',\n  components: {\n    REListNode\n  },\n  props: {\n\n  },\n  data() {\n    return {\n      nodeList: [],\n      refreshKey: 0,\n    }\n  },\n  beforeMount(){\n    this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      nodeListState: function() {\n        this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n        this.$forceUpdate()\n        this.refreshKey = (this.refreshKey + 1)%2\n      }\n\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'curRegexIndex',\n      'nodeListState'\n\n    ]),\n  },\n  methods: {\n    ...mapMutations([\n\n    ]),\n    keyCompute(index){\n      return 'nodeList' + index\n    }\n\n  }\n}\n",{"version":3,"sources":["RENodeListView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"RENodeListView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"node-list-view\">\n    <div class=\"node-list-container\" :key=\"refreshKey\">\n      <div v-for=\"(item, index) in nodeList\" :key=\"keyCompute(index)\" >\n        <div class=\"REListNode-container\" style=\"width:45px; height:45px\">\n          <REListNode :nodeExpression=\"item\" :key=\"item['key']\" ></REListNode>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport REListNode from '@/views/REView/REComponents/REListNode.vue';\n\nexport default {\n  name: 'RENodeListView',\n  components: {\n    REListNode\n  },\n  props: {\n\n  },\n  data() {\n    return {\n      nodeList: [],\n      refreshKey: 0,\n    }\n  },\n  beforeMount(){\n    this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      nodeListState: function() {\n        this.nodeList = sysDatasetObj.returnNodeList(this.curRegexIndex)\n        this.$forceUpdate()\n        this.refreshKey = (this.refreshKey + 1)%2\n      }\n\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'curRegexIndex',\n      'nodeListState'\n\n    ]),\n  },\n  methods: {\n    ...mapMutations([\n\n    ]),\n    keyCompute(index){\n      return 'nodeList' + index\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.node-list-view {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  .node-list-container{\n    position: absolute;\n    top: 5%;\n    left: 10.5%;\n    right:5%;\n    height: auto;\n    width: 90%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: auto;\n    .REListNode-container{\n      margin: 5px 5px 5px 5px;\n    }\n  }\n\n}\n\n</style>\n"]}]}