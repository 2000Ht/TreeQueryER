{"remainingRequest":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/REWholeTree.vue?vue&type=style&index=0&id=036e27a9&scoped=true&lang=less&","dependencies":[{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView/REComponents/REWholeTree.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/css-loader/index.js","mtime":1660192274937},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660192275629},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1660192275315},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1660192275256},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.re-wholetree {\n  height: 100%;\n  width: 100%;\n\n}\n",{"version":3,"sources":["REWholeTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;;AAEA","file":"REWholeTree.vue","sourceRoot":"src/views/REView/REComponents","sourcesContent":["<template>\n  <g class=\"re-wholetree\">\n    <g v-for=\"(item, index1) in wholeTreeExpression['composition']\" :key=\"computeItemKey(index1)\">\n        <RENode v-if=\"item['type'] == 'node'\" :nodeExpression=\"item\" :key=\"item.key\" ></RENode>\n        <REPath v-if=\"item['type'] == 'path'\" :pathExpression=\"item\" :key=\"item.key\"></REPath>\n        <REOr v-if=\"item['type'] == 'or'\" :orExpression=\"item\" :key=\"item.key\"></REOr>\n        <REBranch v-if=\"item['type'] == 'branch'\" :branchExpression=\"item\" :key=\"item.key\"></REBranch>\n    </g>\n    <REElementComposition v-if=\"elementCompositionCheck()\" :elementCompositionExpression=\"wholeTreeExpression['elementComposition']\" :key=\"wholeTreeExpression['elementComposition'].key\"></REElementComposition>\n  </g>\n</template>\n\n<script>\n    import { mapState, mapMutations } from 'vuex';\n    import RENode from '@/views/REView/REComponents/RENode.vue';\n    import REPath from '@/views/REView/REComponents/REPath.vue';\n    import REOr from '@/views/REView/REComponents/REOr.vue';\n    import REBranch from '@/views/REView/REComponents/REBranch.vue';\n    import REElementComposition from '@/views/REView/REComponents/REElementComposition.vue'\n\nexport default {\n  name: 'REWholeTree',\n  components: {\n    RENode,\n    REPath,\n    REOr,\n    REBranch,\n    REElementComposition\n  },\n  props: {\n    wholeTreeExpression:{\n      type: Object\n    }\n  },\n  data() {\n    return {\n\n    }\n  },\n\n  mounted() {\n    console.log('wholeTreeExpression', this.wholeTreeExpression)\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      }\n  },\n  computed: {\n    ...mapState([\n      'displayMode'\n    ]),\n   \n  },\n  methods: {\n    computeItemKey(d){\n        return 'item'+d\n\n    },\n    elementCompositionCheck(){\n      if('elementComposition' in this.wholeTreeExpression){\n        if((this.wholeTreeExpression['elementComposition']['exist']['composition'].length \n              + this.wholeTreeExpression['elementComposition']['all']['composition'].length)>0)\n              return true\n        return false\n      }\n    }\n    \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.re-wholetree {\n  height: 100%;\n  width: 100%;\n\n}\n</style>\n"]}]}