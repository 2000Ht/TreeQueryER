{"remainingRequest":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/src/views/REView.vue","mtime":1648714649000},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/个人资料/研究生资料/个人论文/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex';\nimport RECanvas from '@/views/REView/RECanvas.vue'\nimport NodeDefinition from '@/views/NodeDefiniton/NodeDefinition.vue'\nimport REList from '@/views/REView/REList.vue'\nimport RENodeListView from '@/views/RENodeListView.vue'\nimport REComponent from '@/views/REView/REComponent.vue'\nimport { getComponentKey } from '@/utils/componentkey.js'\n\nexport default {\n  name: 'RegularExpressionView',\n  components: {\n    RECanvas,\n    NodeDefinition,\n    REList,\n    REComponent,\n    RENodeListView\n  },\n  props: {\n    review_regex:{\n      type: Object\n    }\n  },\n  data() {\n    return {\n      updateCanvasKey: 0,\n      regexTitleListValue: '1',\n      tabIndex: 1,\n      curRegex: null,\n      titleInput: 'untitled',\n      editing: false,\n    }\n  },\n  beforeMount(){\n    this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n    this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      curRegexIndex: function(){\n          this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n          this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n      },\n      reViewDataState: function(){\n          this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n          this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n      }\n      // regexCommitState: function(){\n      //   if('titleIndex' in this.curRegex){\n      //     let flag = true\n      //     this.regexTitleList.forEach((tab, index) => {\n      //       if(tab.titleIndex === this.curRegex.titleIndex){\n      //         flag = false\n      //       }\n      //     })\n      //     if(flag){\n      //       this.regexTitleList.push(this.curRegex)\n      //       this.regexTitleListValue = this.curRegex.titleIndex\n      //     }\n      //   }\n      //   else{\n      //     let newTitleIndex = ++this.tabIndex + '';\n      //     this.curRegex['titleIndex'] = newTitleIndex\n      //     this.regexTitleList.push(this.curRegex)\n      //     this.regexTitleListValue = this.curRegex.titleIndex\n      //   }\n      //   this.regexTitleListValue = this.curRegex['titleIndex'];\n      //   this.$forceUpdate()\n      //   this.updateCanvasKey = (this.updateCanvasKey + 1) % 2\n      // }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'regexCommitState',\n      'regexListState',\n      'curRegexIndex',\n      'reViewDataState'\n    ]),\n  },\n  methods: {\n    ...mapMutations([\n      'UN_SHOW_REVIEW',\n    ]),\n    paneKeyCompute(index){\n      return index + this.regexListState\n    },\n    computeTitleName(regex){\n      if('regexName' in regex){\n        return regex['regexName']\n      }\n      else return 'untitled'\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        let newTitleIndex = ++this.tabIndex + '';\n        let newRegex = {\n          \"target\":{\n            \"type\": \"target\",\n            \"composition\":[\n              {\n                \"type\": \"path\",\n                \"repeat\": [1,1],\n                \"key\": getComponentKey(),\n                \"composition\":[\n                  {          \n                      \"type\": \"node\",\n                      \"repeat\": [1,1],\n                      \"data\": {},\n                      \"key\": getComponentKey()\n                  }\n                ]\n              }\n            ]\n\n          },\n          \"condition\": {\n            \"attribute\": \"size\",\n            \"op\": \"max\",\n            \"value\": \"\"\n          },\n          \"titleIndex\": newTitleIndex\n        }\n        this.regexTitleList.push(newRegex)\n        this.regexTitleListValue = newTitleIndex\n      }\n      if (action === 'remove') {\n        let tabs = this.regexTitleList;\n        let activeName = this.regexTitleListValue;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.titleIndex === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.titleIndex;\n              }\n            }\n          });\n        }\n        \n        this.regexTitleListValue = activeName;\n        this.regexTitleList = tabs.filter(tab => tab.titleIndex !== targetName);\n      }\n    },\n    closeReView(){\n      this.UN_SHOW_REVIEW()\n    },\n  edit() {\n    this.editing = true\n    this.$nextTick(function () {\n    //this.$refs.input.focus()\n    })\n  },\n  save() {\n    this.editing = false\n    sysDatasetObj.updateRegexName(this.titleInput, this.curRegexIndex)\n  }\n\n  \n  }\n}\n",{"version":3,"sources":["REView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"REView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"re-view\">\n    <div class=\"re-view-title\">\n      <span class=\"re-view-title-text\" v-if=\"!editing\" @dblclick=\"edit\">{{titleInput}}</span>\n      <el-input type=\"text\"\n          class=\"form-control\"\n          ref=\"input\"\n          v-if=\"editing\"\n          v-model=\"titleInput\"\n          @blur=\"save\"></el-input>\n      <i class=\"el-icon-close operation\" @click=\"closeReView()\"></i>\n    </div>\n    <div class=\"re-component\">\n      <REComponent></REComponent>\n    </div>\n    <div class=\"re-canvas-container\">\n      <RECanvas :regularExpression=\"curRegex\"></RECanvas>\n    </div>\n    <div class=\"node-list\">\n      <RENodeListView></RENodeListView>  \n    </div>\n    <div class=\"node-definition\">\n        <NodeDefinition></NodeDefinition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport RECanvas from '@/views/REView/RECanvas.vue'\nimport NodeDefinition from '@/views/NodeDefiniton/NodeDefinition.vue'\nimport REList from '@/views/REView/REList.vue'\nimport RENodeListView from '@/views/RENodeListView.vue'\nimport REComponent from '@/views/REView/REComponent.vue'\nimport { getComponentKey } from '@/utils/componentkey.js'\n\nexport default {\n  name: 'RegularExpressionView',\n  components: {\n    RECanvas,\n    NodeDefinition,\n    REList,\n    REComponent,\n    RENodeListView\n  },\n  props: {\n    review_regex:{\n      type: Object\n    }\n  },\n  data() {\n    return {\n      updateCanvasKey: 0,\n      regexTitleListValue: '1',\n      tabIndex: 1,\n      curRegex: null,\n      titleInput: 'untitled',\n      editing: false,\n    }\n  },\n  beforeMount(){\n    this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n    this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n  },\n  mounted() {\n\n  },\n  watch: {\n      displayMode: function() {\n        console.log('displayMode')\n      },\n      curRegexIndex: function(){\n          this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n          this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n      },\n      reViewDataState: function(){\n          this.curRegex = sysDatasetObj.returnRegex(this.curRegexIndex)\n          this.titleInput = sysDatasetObj.returnRegexName(this.curRegexIndex)\n      }\n      // regexCommitState: function(){\n      //   if('titleIndex' in this.curRegex){\n      //     let flag = true\n      //     this.regexTitleList.forEach((tab, index) => {\n      //       if(tab.titleIndex === this.curRegex.titleIndex){\n      //         flag = false\n      //       }\n      //     })\n      //     if(flag){\n      //       this.regexTitleList.push(this.curRegex)\n      //       this.regexTitleListValue = this.curRegex.titleIndex\n      //     }\n      //   }\n      //   else{\n      //     let newTitleIndex = ++this.tabIndex + '';\n      //     this.curRegex['titleIndex'] = newTitleIndex\n      //     this.regexTitleList.push(this.curRegex)\n      //     this.regexTitleListValue = this.curRegex.titleIndex\n      //   }\n      //   this.regexTitleListValue = this.curRegex['titleIndex'];\n      //   this.$forceUpdate()\n      //   this.updateCanvasKey = (this.updateCanvasKey + 1) % 2\n      // }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'regexCommitState',\n      'regexListState',\n      'curRegexIndex',\n      'reViewDataState'\n    ]),\n  },\n  methods: {\n    ...mapMutations([\n      'UN_SHOW_REVIEW',\n    ]),\n    paneKeyCompute(index){\n      return index + this.regexListState\n    },\n    computeTitleName(regex){\n      if('regexName' in regex){\n        return regex['regexName']\n      }\n      else return 'untitled'\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        let newTitleIndex = ++this.tabIndex + '';\n        let newRegex = {\n          \"target\":{\n            \"type\": \"target\",\n            \"composition\":[\n              {\n                \"type\": \"path\",\n                \"repeat\": [1,1],\n                \"key\": getComponentKey(),\n                \"composition\":[\n                  {          \n                      \"type\": \"node\",\n                      \"repeat\": [1,1],\n                      \"data\": {},\n                      \"key\": getComponentKey()\n                  }\n                ]\n              }\n            ]\n\n          },\n          \"condition\": {\n            \"attribute\": \"size\",\n            \"op\": \"max\",\n            \"value\": \"\"\n          },\n          \"titleIndex\": newTitleIndex\n        }\n        this.regexTitleList.push(newRegex)\n        this.regexTitleListValue = newTitleIndex\n      }\n      if (action === 'remove') {\n        let tabs = this.regexTitleList;\n        let activeName = this.regexTitleListValue;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.titleIndex === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.titleIndex;\n              }\n            }\n          });\n        }\n        \n        this.regexTitleListValue = activeName;\n        this.regexTitleList = tabs.filter(tab => tab.titleIndex !== targetName);\n      }\n    },\n    closeReView(){\n      this.UN_SHOW_REVIEW()\n    },\n  edit() {\n    this.editing = true\n    this.$nextTick(function () {\n    //this.$refs.input.focus()\n    })\n  },\n  save() {\n    this.editing = false\n    sysDatasetObj.updateRegexName(this.titleInput, this.curRegexIndex)\n  }\n\n  \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n  @re-component-width: 100px;\n  @node-defnition-width: 380px;\n\n.re-view {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0%;\n  .re-view-title{\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 30px;\n    border-bottom: 1px #ddd solid;\n    background-color: #f2f2f2;\n    border-top-left-radius:10px;\n    border-top-right-radius:10px;\n    /deep/.form-control{\n      position: absolute;\n      top: 10% !important;\n      height: 65% !important;\n      left: 270px !important;\n      width: 200px !important;\n    }\n    .re-view-title-text{\n      vertical-align: middle;\n      position: absolute;\n      top: 3px;\n      width: 100%;\n      text-align: center;\n      justify-content: center;\n      font-size: 18px;\n    }\n    .el-icon-close{\n      position: absolute;\n      font-size: 20px;\n      left: 670px;\n      top: 5px;\n      cursor: pointer;\n      &:hover{\n        color: steelblue;\n      }\n    }\n  }\n  .re-component {\n    position: absolute;\n    top: 30px;\n    left: 0%;\n    height: 38px;\n    width: 100%;\n    border-bottom: 1px #ddd solid;\n    border-top: 1px #ddd solid;\n  }\n  .re-canvas-container {\n    position: absolute;\n    top: 68px;\n    left: 0%;\n    right: 0%;\n    height: 200px;\n    border-bottom: 1px #ddd solid;\n  }\n  .node-list{\n    position: absolute;\n    top:268px;\n    bottom: 0%;\n    left: 0%;\n    right: 60%;\n  }\n  .node-definition{\n    position: absolute;\n    top: 268px;\n    bottom: 0%;\n    left:40%;\n    right: 0%;\n    border-left: 1px #ddd solid;\n  }\n}\n</style>\n<style lang=\"less\" scoped>\n      /deep/.el-tabs__new-tab {\n      border: 2px solid #899097 !important;\n      height: 25px !important;\n      width: 25px !important;\n      line-height: 18px !important;\n      margin: 6px 12px 5px 5px !important;\n      border-radius: 3px !important;\n      text-align: center !important;\n      font-size: 22px !important;\n      font-weight: bold;\n      color: #899097 !important;\n    }\n    /deep/.el-tabs__content{\n      height: 80% !important;\n    }\n    /deep/.el-tab-pane{\n      height: 100% !important;\n    }\n    /deep/.form-control{\n      position: absolute;\n      top: 10% !important;\n      height: 30px !important;\n      left: 270px !important;\n      width: 200px !important;\n    }\n    /deep/.el-input__inner{\n      height: 25px !important;\n    }\n</style>\n"]}]}