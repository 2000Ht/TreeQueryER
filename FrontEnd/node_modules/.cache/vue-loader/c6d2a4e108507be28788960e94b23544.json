{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/App.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/App.vue","mtime":1661092916078},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/css-loader/index.js","mtime":1660192274937},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660192275629},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1660192275315},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1660192275256},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml {\n  font-size: 100%;\n}\n@menu-height: 2rem;\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: absolute;\n  top: 0%;\n  bottom: 0%;\n  left: 0%;\n  right: 0%;\n  background-color: rgb(218, 218, 218);\n  .el-menu.el-menu--horizontal {\n    .el-menu-item {\n      height: @menu-height;\n      line-height: @menu-height;\n    }\n    .el-menu-item {\n      border-bottom-color: rgb(84, 92, 100) !important;\n      font-weight: bolder;\n      font-size: 1rem;\n      color: #dadada !important;\n      padding: 0 10px;\n      .icon {\n        color: #dadada !important;\n      }\n    }\n  }\n  .labelIcon {\n    font-size: 1rem;\n  }\n  .content-container {\n    position: absolute;\n    top: @menu-height;\n    left: 0%;\n    bottom: 0%;\n    right: 0%;\n    .overview-panel{\n      position: absolute;\n      top: 5px;\n      left: 5px;\n      bottom: 5px;\n      right: 80%;\n      background-color: white;\n    }\n    .vis-panel{\n      position: absolute;\n      top: 5px;\n      left: 20.5%;\n      bottom: 45%;\n      right: 30%;\n      background-color: white;\n      // border-bottom: 1px #ddd solid;\n    }\n    .recommendation-panel{\n      position: absolute;\n      top: 5px;\n      left: 70.5%;\n      bottom: 45%;\n      right: 5px;\n      background-color: white;\n    }\n    .editor-panel{\n      position: absolute;\n      top: 55.7%;\n      left: 20.5%;\n      bottom: 5px;\n      right: 5px;\n      background-color: white;\n    }\n    .dataflow-panel {\n      position: absolute;\n      top: 60%;\n      left: 0%;\n      bottom: 0%;\n      right: 19.95%;\n      border-bottom: 1px #ddd solid;\n      border-right: 1px #ddd solid;\n    }\n\n    .regex-panel {\n    border-radius: 10px;\n    border: 1px solid #d3d3d3;\n    box-shadow: 2px 2px 1px #d3d3d3;\n    background-color: white;\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: 12px;\n    width: 700px; \n    height: 500px; \n    top: 30%; \n    left: 30%;\n}\n\n  }\n  \t.node {\n\t\tcursor: pointer;\n\t}\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: rgb(70, 90, 180);\n\t  stroke-width: 3px;\n\t}\n\n\t// .node text {\n\t//   font: 12px sans-serif;\n\t// }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappingsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" v-loading=\"loadingData\">\n    <el-menu\n        class=\"el-menu-demo\"\n        mode=\"horizontal\"\n        background-color=\"#676767\"\n        text-color=\"#fff\"\n        :default-active=\"activeIndex\"\n        active-text-color=\"#ffd04b\">\n        <el-menu-item class='labelIcon' id=\"title\">\n          {{appName}}\n        </el-menu-item>\n        <el-tooltip class='labelIcon' v-for=\"operation in operationArray\" :key=\"operation\" :content=\"operation\" effect=\"light\">\n          <el-menu-item :index=\"operation\">\n            {{operation}}\n          </el-menu-item>\n        </el-tooltip>\n    </el-menu>\n    <div class = \"content-container\" v-if=\"!loadingData\">\n      <!-- <TreeVisView :hierarchicalData=\"hierarchicalData\"> </TreeVisView> -->\n      <!-- <div class=\"regular-expression-panel\" :style=\"REViewStyle()\">\n        <REView></REView>\n      </div> -->\n      <!-- <div class=\"vis-panel\">\n        <VisView></VisView>\n      </div>\n      <div class=\"dataflow-panel\">\n        <DataFlowView></DataFlowView>\n      </div>\n      <div class=\"regex-panel\" v-if=\"regexViewState\" v-drag>\n             <REView></REView>           \n      </div> -->\n      <div class=\"overview-panel\">\n        <OverviewPanel></OverviewPanel>\n      </div>\n      <div class=\"vis-panel\">\n        <VisPanel></VisPanel>\n      </div>\n\n      <div class=\"recommendation-panel\">\n        <RecommendPanel></RecommendPanel>\n      </div>\n\n      <div class=\"editor-panel\">\n        <EditorPanel></EditorPanel>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { mapState, mapMutations } from 'vuex';\nimport TreeVisView from './views/TreeVisView.vue'\nimport DataFlowView from './views/DataFlowView.vue'\nimport REView from './views/REView.vue'\nimport VisView from './views/VisView.vue'\nimport OverviewPanel from './views/OverviewPanel.vue'\nimport VisPanel from './views/VisPanel.vue'\nimport RecommendPanel from './views/RecommendPanel.vue'\nimport EditorPanel from './views/EditorPanel.vue'\n\nimport { loadHierarchicalData } from './data/dataloading.js'\nimport { Dataset}  from './data/dataset.js'\nimport { getHierarchyData } from './communication/communicator.js'\nimport { getComponentKey } from '@/utils/componentkey.js'\n  import { readFile } from 'fs';\n  import * as fs from 'fs';\n\nexport default {\n  name: 'app',\n  components: {\n    TreeVisView, DataFlowView, REView, VisView,\n    OverviewPanel,VisPanel,RecommendPanel,EditorPanel\n  },\n  data() {\n    return {\n      appName: \"HiTrail\",\n      operationArray: ['data'],\n      activeIndex: '',\n      loadingData: false,\n      curIndex: 0,\n    }\n  },\n  computed: {\n    ...mapState([\n      'displayMode',\n      'curRegex',\n      'regexCommitState',\n      'attributeList',\n      'regexViewState',\n      'visViewState',\n      'curRegexIndex',\n      'curConnectionNode',\n      'connectionState',\n\n      'queryStateIndex',\n      'queryStateRegex',\n      'queryIndex',\n    ]),\n  },\n  watch:{\n    regexCommitState: function(){\n      this.regexQuery(this.curRegexIndex)\n    },\n    connectionState: function(){\n      this.regexQuery(this.curConnectionNode)\n    },\n\n    queryStateIndex: function(){\n      this.dataQuery1(this.queryIndex)\n    },\n    queryStateRegex: function(){\n      this.dataQuery2()\n    },\n  },\n  beforeMount() {\n    let self = this\n    window.sysDatasetObj = new Dataset()\n    sysDatasetObj.init()\n    loadHierarchicalData('library.json', function(data){\n      sysDatasetObj.initData(data)\n      let tmpData = sysDatasetObj.returnInitData()\n      self.attributeCompute(tmpData)\n    })\n  },\n  mounted() {\n\n  },\n  methods: {\n    ...mapMutations([\n      'UPDATE_ATTRIBUTE_LIST_NUMBER',\n      'UPDATE_ATTRIBUTE_LIST_STRING',\n      'UPDATE_ATTRIBUTE_LIST_BOOLEAN',\n      'UPDATE_VISVIEW',\n\n      'DATA_QUERY_INDEX',\n      'UPDATE_VIS_PANEL'\n    ]),\n    iconClass(operation) {\n      return 'icon-' + operation\n    },\n    attributeCompute(curNode){\n      if('data' in curNode){\n        curNode['data']['nodeIndex'] = this.curIndex\n        this.curIndex = this.curIndex + 1\n        for(let key in curNode['data']){\n          if(!(key in this.attributeList)){\n            if(typeof(curNode['data'][key]) == 'number')\n              this.UPDATE_ATTRIBUTE_LIST_NUMBER(key)\n            else if(typeof(curNode['data'][key]) == 'string')\n              this.UPDATE_ATTRIBUTE_LIST_STRING(key)\n            else if(typeof(curNode['data'][key]) == 'boolean'){\n              this.UPDATE_ATTRIBUTE_LIST_BOOLEAN(key)\n            }\n          }\n        }\n      }\n      else{\n        curNode['data'] = {}\n        curNode['data']['nodeIndex'] = this.curIndex\n        if('categoryName' in curNode){\n          curNode['data']['name'] = curNode['categoryName']\n        }\n        else{\n          curNode['data']['name'] = curNode['name']\n        }\n        curNode['data']['num'] = curNode['num']\n        this.curIndex = this.curIndex + 1\n        for(let key in curNode['data']){\n          if(!(key in this.attributeList)){\n            if(typeof(curNode['data'][key]) == 'number')\n              this.UPDATE_ATTRIBUTE_LIST_NUMBER(key)\n            else if(typeof(curNode['data'][key]) == 'string')\n              this.UPDATE_ATTRIBUTE_LIST_STRING(key)\n            else if(typeof(curNode['data'][key]) == 'boolean'){\n              this.UPDATE_ATTRIBUTE_LIST_BOOLEAN(key)\n            }\n          }\n        }\n      }\n      if('children' in curNode){\n        for(let child of curNode['children']){\n          this.attributeCompute(child)\n        }\n      }\n    },\n    REViewStyle(){\n      if(this.regexViewState){\n        return \"position: absolute; \" + \n          \"top: 40%; \" +\n          \"left: 0%; \" +\n          \"bottom: 0%; \" +\n          \"right: 0%; \"\n      }\n      else{\n        return \"position: absolute; \" + \n          \"top: 40%; \" +\n          \"left: 0%; \" +\n          \"bottom: 0%; \" +\n          \"right: 0%; \" +\n          \"display:none; !important\"\n      }\n    },\n    VisViewStyle(){\n      if(this.visViewState){\n        return \"position: absolute; \" + \n          \"top: 40%; \" +\n          \"left: 0%; \" +\n          \"bottom: 0%; \" +\n          \"right: 0%; \"\n      }\n      else{\n        return \"position: absolute; \" + \n          \"top: 100%; \" +\n          \"left: 0%; \" +\n          \"bottom: 0%; \" +\n          \"right: 0%; \"\n      }\n    },\n    regexQuery(regexIndex){\n      let self = this\n      let hierarchyDataDeferObj = $.Deferred()\n      $.when(hierarchyDataDeferObj).then(function() {\n        self.loadingData = false\n      })\n      \n      let hierarchicalParam = {\n        'regex': sysDatasetObj.returnRegex(regexIndex),\n        'hierarchyData': sysDatasetObj.returnHierarchyDataIn(regexIndex)\n      }\n      // initialize the tabular dataset\n      getHierarchyData(hierarchicalParam, function(processed_hierarchy_data) {\n        //let processed_hierarchy_data_json = JSON.parse(processed_hierarchy_data)\n        sysDatasetObj.updateHierarchyDataOut(processed_hierarchy_data, regexIndex)\n        hierarchyDataDeferObj.resolve()\n        self.UPDATE_VISVIEW()\n        sysDatasetObj.DataOutFlow(regexIndex)\n        let tmpIndexList = sysDatasetObj.returnConnection(regexIndex)\n        for(let tmpIndex of tmpIndexList){\n          self.regexQuery(tmpIndex)\n        }\n      })\n    },\n\n    dataQuery1(queryIndex){\n      let self = this\n      let hierarchyDataDeferObj = $.Deferred()\n      $.when(hierarchyDataDeferObj).then(function() {\n        self.loadingData = false\n      })\n      let hierarchicalParam = {\n        'type': 1,\n        'index': queryIndex\n      }\n      // initialize the tabular dataset\n      getHierarchyData(hierarchicalParam, function(processed_hierarchy_data) {\n        sysDatasetObj.updateVis(processed_hierarchy_data['visualization'])\n        sysDatasetObj.updateRecommend(processed_hierarchy_data['recommendation'])\n        console.log(processed_hierarchy_data['visualization'])\n        hierarchyDataDeferObj.resolve()\n        self.UPDATE_VIS_PANEL()\n\n        //self.UPDATE_VISVIEW()\n\n      })\n\n    },\n    dataQuery2(){\n      let self = this\n      let hierarchyDataDeferObj = $.Deferred()\n      $.when(hierarchyDataDeferObj).then(function() {\n        self.loadingData = false\n      })\n      let hierarchicalParam = {\n        'type': 2,\n        'regex':sysDatasetObj.getRegex(),\n        'condition':sysDatasetObj.getCondition(),\n      }\n      console.log(\"hierarchicalParam\", hierarchicalParam)\n      // initialize the tabular dataset\n      getHierarchyData(hierarchicalParam, function(processed_hierarchy_data) {\n        sysDatasetObj.updateVis(processed_hierarchy_data['visualization'])\n        sysDatasetObj.updateRecommend(processed_hierarchy_data['recommendation'])\n        sysDatasetObj.updateResultList(processed_hierarchy_data['result'])\n        sysDatasetObj.updatehighlightBar(processed_hierarchy_data['highlightBar'])\n        hierarchyDataDeferObj.resolve()\n        self.UPDATE_VIS_PANEL()\n        self.UPDATE_VISVIEW()\n\n      })\n\n    }\n  },\n}\n</script>\n\n<style lang=\"less\">\nhtml {\n  font-size: 100%;\n}\n@menu-height: 2rem;\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: absolute;\n  top: 0%;\n  bottom: 0%;\n  left: 0%;\n  right: 0%;\n  background-color: rgb(218, 218, 218);\n  .el-menu.el-menu--horizontal {\n    .el-menu-item {\n      height: @menu-height;\n      line-height: @menu-height;\n    }\n    .el-menu-item {\n      border-bottom-color: rgb(84, 92, 100) !important;\n      font-weight: bolder;\n      font-size: 1rem;\n      color: #dadada !important;\n      padding: 0 10px;\n      .icon {\n        color: #dadada !important;\n      }\n    }\n  }\n  .labelIcon {\n    font-size: 1rem;\n  }\n  .content-container {\n    position: absolute;\n    top: @menu-height;\n    left: 0%;\n    bottom: 0%;\n    right: 0%;\n    .overview-panel{\n      position: absolute;\n      top: 5px;\n      left: 5px;\n      bottom: 5px;\n      right: 80%;\n      background-color: white;\n    }\n    .vis-panel{\n      position: absolute;\n      top: 5px;\n      left: 20.5%;\n      bottom: 45%;\n      right: 30%;\n      background-color: white;\n      // border-bottom: 1px #ddd solid;\n    }\n    .recommendation-panel{\n      position: absolute;\n      top: 5px;\n      left: 70.5%;\n      bottom: 45%;\n      right: 5px;\n      background-color: white;\n    }\n    .editor-panel{\n      position: absolute;\n      top: 55.7%;\n      left: 20.5%;\n      bottom: 5px;\n      right: 5px;\n      background-color: white;\n    }\n    .dataflow-panel {\n      position: absolute;\n      top: 60%;\n      left: 0%;\n      bottom: 0%;\n      right: 19.95%;\n      border-bottom: 1px #ddd solid;\n      border-right: 1px #ddd solid;\n    }\n\n    .regex-panel {\n    border-radius: 10px;\n    border: 1px solid #d3d3d3;\n    box-shadow: 2px 2px 1px #d3d3d3;\n    background-color: white;\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: 12px;\n    width: 700px; \n    height: 500px; \n    top: 30%; \n    left: 30%;\n}\n\n  }\n  \t.node {\n\t\tcursor: pointer;\n\t}\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: rgb(70, 90, 180);\n\t  stroke-width: 3px;\n\t}\n\n\t// .node text {\n\t//   font: 12px sans-serif;\n\t// }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n}\n</style>\n"]}]}