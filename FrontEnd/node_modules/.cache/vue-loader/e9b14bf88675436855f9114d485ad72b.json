{"remainingRequest":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/ConnectionDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/src/components/ConnectionDialog.vue","mtime":1648714649000},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1660192275351},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1660192275271},{"path":"/Users/ht.mi/研究生资料/tree_visual_query/RETree-main/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1660192275522}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport '../assets/modal.css';\n\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    connection: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      connectionForm: {\n        type: null,\n        sourceId: null,\n        sourcePosition: null,\n        destinationId: null,\n        destinationPosition: null,\n        name: null,\n        expression: null,\n      },\n      connectionOptions: [{name:'Pass', id:'pass'}, {name:'Reject', id:'reject'}]\n    };\n  },\n  methods: {\n    async handleClickSaveConnection() {\n      this.$emit('update:visible', false);\n      this.$emit('update:connection', Object.assign(this.connection, {\n        name: this.connectionForm.name,\n        type: this.connectionForm.type,\n        expression: this.connectionForm.expression,\n      }));\n    },\n    async handleClickCancelSaveConnection() {\n      this.$emit('update:visible', false);\n    },\n  },\n  watch: {\n    connection: {\n      immediate: true,\n      handler(val) {\n        if (!val) { return; }\n        this.connectionForm.id = val.id;\n        this.connectionForm.type = val.type;\n        this.connectionForm.name = val.name;\n        this.connectionForm.expression = val.expression;\n      },\n    },\n  },\n};\n",{"version":3,"sources":["ConnectionDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConnectionDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 320px\">\n            <div class=\"header\">\n                <span>Edit</span>\n            </div>\n            <div class=\"body\">\n                <el-form ref=\"form\" :model=\"connectionForm\" label-width=\"120px\">\n                  <el-row class=\"connection-attribute\">\n                    <el-col class=\"attibute-space\" :span=\"3\">\n                      Name\n                    </el-col>\n                    <el-col :offset=\"1\" :span=\"20\">\n                      <el-input size=\"mini\" placeholder=\"title (required)\" v-model=\"connectionForm.name\"></el-input>\n                    </el-col>\n                  </el-row>\n                  <el-row class=\"connection-attribute\">\n                      <el-col class=\"attibute-space\" :span=\"3\">\n                        Type\n                      </el-col>\n                      <el-col :offset=\"1\" :span=\"20\">\n                        <el-select class=\"link-type\" v-model=\"connectionForm.type\" placeholder=\"Select\" size=\"mini\">\n                          <el-option :key=\"'connection-type-' + item.id\"\n                            v-for=\"item in connectionOptions\"\n                            :value=\"item.id\">\n                            {{ item.name }}\n                          </el-option>\n                        </el-select>\n                      </el-col>\n                  </el-row>\n                </el-form>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelSaveConnection\">Cancel</button>\n                <button @click=\"handleClickSaveConnection\">Ok</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      connection: {\n        type: Object,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        connectionForm: {\n          type: null,\n          sourceId: null,\n          sourcePosition: null,\n          destinationId: null,\n          destinationPosition: null,\n          name: null,\n          expression: null,\n        },\n        connectionOptions: [{name:'Pass', id:'pass'}, {name:'Reject', id:'reject'}]\n      };\n    },\n    methods: {\n      async handleClickSaveConnection() {\n        this.$emit('update:visible', false);\n        this.$emit('update:connection', Object.assign(this.connection, {\n          name: this.connectionForm.name,\n          type: this.connectionForm.type,\n          expression: this.connectionForm.expression,\n        }));\n      },\n      async handleClickCancelSaveConnection() {\n        this.$emit('update:visible', false);\n      },\n    },\n    watch: {\n      connection: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.connectionForm.id = val.id;\n          this.connectionForm.type = val.type;\n          this.connectionForm.name = val.name;\n          this.connectionForm.expression = val.expression;\n        },\n      },\n    },\n  };\n</script>\n<style lang=\"less\">\n  .body {\n    max-height: 300px;\n    overflow-y: auto;\n  }\n  .connection-attribute {\n    margin-bottom: 10px;\n  }\n  .attibute-space {\n    line-height: 28px;\n    vertical-align: middle;\n    text-align: center;\n    cursor: pointer;\n    &.close:hover {\n      color: red;\n    }\n  }\n  .link-type {\n    width: 100%;\n  }\n  .el-select-dropdown__item {\n    font-size: 12px;\n  }\n</style>"]}]}